diff --git a/node_modules/@vscode/test-web/fs-provider/dist/fsExtensionMain.js b/node_modules/@vscode/test-web/fs-provider/dist/fsExtensionMain.js
index 2510622..2ee2bd0 100644
--- a/node_modules/@vscode/test-web/fs-provider/dist/fsExtensionMain.js
+++ b/node_modules/@vscode/test-web/fs-provider/dist/fsExtensionMain.js
@@ -4,566 +4,2727 @@
 /* 1 */
 /***/ ((__unused_webpack_module, exports) => {
 
-(()=>{"use strict";var e={};(()=>{var r=e;Object.defineProperty(r,"__esModule",{value:!0}),r.getErrorStatusDescription=r.xhr=r.configure=void 0,r.configure=(e,r)=>{},r.xhr=async e=>{const r=new Headers;if(e.headers)for(const t in e.headers){const o=e.headers[t];Array.isArray(o)?o.forEach((e=>r.set(t,e))):r.set(t,o)}e.user&&e.password&&r.set("Authorization","Basic "+btoa(e.user+":"+e.password));const t={method:e.type,redirect:e.followRedirects>0?"follow":"manual",mode:"cors",headers:r};if(e.data&&(t.body=e.data),e.token){const r=new AbortController;e.token.isCancellationRequested&&r.abort(),e.token.onCancellationRequested((()=>{r.abort()})),t.signal=r.signal}const o=new Request(e.url,t),s=await fetch(o),a={};s.headers.forEach(((e,r)=>{a[r]=e}));const n=await s.arrayBuffer();return new class{constructor(){this.status=s.status,this.headers=a}get responseText(){return(new TextDecoder).decode(n)}get body(){return new Uint8Array(n)}}},r.getErrorStatusDescription=function(e){return String(e)}})();var r=exports;for(var t in e)r[t]=e[t];e.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})})();
-
-/***/ }),
-/* 2 */
-/***/ ((module) => {
-
-"use strict";
-module.exports = require("vscode");
-
-/***/ }),
-/* 3 */
-/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
-
-"use strict";
-
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-Object.defineProperty(exports, "__esModule", ({ value: true }));
-exports.MemFileSystemProvider = void 0;
-const vscode_1 = __webpack_require__(2);
-const vscode_uri_1 = __webpack_require__(4);
-function newFileStat(type, size) {
-    return Promise.resolve({ type, ctime: Date.now(), mtime: Date.now(), size });
-}
-function modifiedFileStat(stats, size) {
-    return Promise.resolve({ type: stats.type, ctime: stats.ctime, mtime: Date.now(), size: size ?? stats.size });
-}
-class MemFileSystemProvider {
-    constructor(scheme, root) {
-        this.scheme = scheme;
-        this.root = root;
-        // --- manage file events
-        this._onDidChangeFile = new vscode_1.EventEmitter();
-        this.onDidChangeFile = this._onDidChangeFile.event;
-        this._bufferedChanges = [];
-    }
-    // --- manage file metadata
-    async stat(resource) {
-        const entry = await this._lookup(resource, false);
-        return entry.stats;
-    }
-    async readDirectory(resource) {
-        const entry = await this._lookupAsDirectory(resource, false);
-        const entries = await entry.entries;
-        const result = [];
-        entries.forEach((child, name) => result.push([name, child.type]));
-        return result;
-    }
-    // --- manage file contents
-    async readFile(resource) {
-        const entry = await this._lookupAsFile(resource, false);
-        return entry.content;
-    }
-    async writeFile(uri, content, opts) {
-        const basename = vscode_uri_1.Utils.basename(uri);
-        const parent = await this._lookupParentDirectory(uri);
-        const entries = await parent.entries;
-        let entry = entries.get(basename);
-        if (entry && entry.type === vscode_1.FileType.Directory) {
-            throw vscode_1.FileSystemError.FileIsADirectory(uri);
-        }
-        if (!entry && !opts.create) {
-            throw vscode_1.FileSystemError.FileNotFound(uri);
-        }
-        if (entry && opts.create && !opts.overwrite) {
-            throw vscode_1.FileSystemError.FileExists(uri);
-        }
-        const stats = newFileStat(vscode_1.FileType.File, content.byteLength);
-        if (!entry) {
-            entry = { type: vscode_1.FileType.File, name: basename, stats, content: Promise.resolve(content) };
-            entries.set(basename, entry);
-            this._fireSoon({ type: vscode_1.FileChangeType.Created, uri });
-        }
-        else {
-            entry.stats = stats;
-            entry.content = Promise.resolve(content);
-        }
-        this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri });
-    }
-    // --- manage files/folders
-    async rename(from, to, opts) {
-        if (!opts.overwrite && await this._lookup(to, true)) {
-            throw vscode_1.FileSystemError.FileExists(to);
-        }
-        const entry = await this._lookup(from, false);
-        const oldParent = await this._lookupParentDirectory(from);
-        const newParent = await this._lookupParentDirectory(to);
-        const newName = vscode_uri_1.Utils.basename(to);
-        const oldParentEntries = await oldParent.entries;
-        oldParentEntries.delete(entry.name);
-        entry.name = newName;
-        const newParentEntries = await newParent.entries;
-        newParentEntries.set(newName, entry);
-        this._fireSoon({ type: vscode_1.FileChangeType.Deleted, uri: from }, { type: vscode_1.FileChangeType.Created, uri: to });
-    }
-    async delete(uri, opts) {
-        const dirname = vscode_uri_1.Utils.dirname(uri);
-        const basename = vscode_uri_1.Utils.basename(uri);
-        const parent = await this._lookupAsDirectory(dirname, false);
-        const parentEntries = await parent.entries;
-        if (parentEntries.has(basename)) {
-            parentEntries.delete(basename);
-            parent.stats = newFileStat(parent.type, -1);
-            this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri: dirname }, { uri, type: vscode_1.FileChangeType.Deleted });
-        }
-    }
-    async createDirectory(uri) {
-        const basename = vscode_uri_1.Utils.basename(uri);
-        const dirname = vscode_uri_1.Utils.dirname(uri);
-        const parent = await this._lookupAsDirectory(dirname, false);
-        const parentEntries = await parent.entries;
-        const entry = { type: vscode_1.FileType.Directory, name: basename, stats: newFileStat(vscode_1.FileType.Directory, 0), entries: Promise.resolve(new Map()) };
-        parentEntries.set(entry.name, entry);
-        const stats = await parent.stats;
-        parent.stats = modifiedFileStat(stats, stats.size + 1);
-        this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri: dirname }, { type: vscode_1.FileChangeType.Created, uri });
-    }
-    async _lookup(uri, silent) {
-        if (uri.scheme !== this.scheme) {
-            if (!silent) {
-                throw vscode_1.FileSystemError.FileNotFound(uri);
-            }
-            else {
-                return undefined;
-            }
-        }
-        let entry = this.root;
-        const parts = uri.path.split('/');
-        for (const part of parts) {
-            if (!part) {
-                continue;
-            }
-            let child;
-            if (entry.type === vscode_1.FileType.Directory) {
-                child = (await entry.entries).get(part);
-            }
-            if (!child) {
-                if (!silent) {
-                    throw vscode_1.FileSystemError.FileNotFound(uri);
-                }
-                else {
-                    return undefined;
-                }
-            }
-            entry = child;
-        }
-        return entry;
-    }
-    async _lookupAsDirectory(uri, silent) {
-        const entry = await this._lookup(uri, silent);
-        if (entry?.type === vscode_1.FileType.Directory) {
-            return entry;
-        }
-        throw vscode_1.FileSystemError.FileNotADirectory(uri);
-    }
-    async _lookupAsFile(uri, silent) {
-        const entry = await this._lookup(uri, silent);
-        if (!entry) {
-            throw vscode_1.FileSystemError.FileNotFound(uri);
-        }
-        if (entry.type === vscode_1.FileType.File) {
-            return entry;
-        }
-        throw vscode_1.FileSystemError.FileIsADirectory(uri);
-    }
-    _lookupParentDirectory(uri) {
-        const dirname = vscode_uri_1.Utils.dirname(uri);
-        return this._lookupAsDirectory(dirname, false);
-    }
-    watch(resource, opts) {
-        // ignore, fires for all changes...
-        return vscode_1.Disposable.from();
-    }
-    _fireSoon(...changes) {
-        this._bufferedChanges.push(...changes);
-        if (this._fireSoonHandle) {
-            clearTimeout(this._fireSoonHandle);
-        }
-        this._fireSoonHandle = setTimeout(() => {
-            this._onDidChangeFile.fire(this._bufferedChanges);
-            this._bufferedChanges.length = 0;
-        }, 5);
-    }
-    dispose() {
-        this._onDidChangeFile.dispose();
-    }
-}
-exports.MemFileSystemProvider = MemFileSystemProvider;
-
-
-/***/ }),
-/* 4 */
-/***/ (function(module, __unused_webpack_exports, __webpack_require__) {
-
-/* provided dependency */ var process = __webpack_require__(5);
-!function(t,e){if(true)module.exports=e();else { var n, r; }}(this,(()=>(()=>{"use strict";var t={470:t=>{function e(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function r(t,e){for(var r,n="",i=0,o=-1,s=0,a=0;a<=t.length;++a){if(a<t.length)r=t.charCodeAt(a);else{if(47===r)break;r=47}if(47===r){if(o===a-1||1===s);else if(o!==a-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var h=n.lastIndexOf("/");if(h!==n.length-1){-1===h?(n="",i=0):i=(n=n.slice(0,h)).length-1-n.lastIndexOf("/"),o=a,s=0;continue}}else if(2===n.length||1===n.length){n="",i=0,o=a,s=0;continue}e&&(n.length>0?n+="/..":n="..",i=2)}else n.length>0?n+="/"+t.slice(o+1,a):n=t.slice(o+1,a),i=a-o-1;o=a,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+"/"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(t){if(e(t),0===t.length)return".";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t="."),t.length>0&&i&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+="/"+i)}return void 0===t?".":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return"";if((t=n.resolve(t))===(r=n.resolve(r)))return"";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,a=1;a<r.length&&47===r.charCodeAt(a);++a);for(var h=r.length-a,c=s<h?s:h,f=-1,u=0;u<=c;++u){if(u===c){if(h>c){if(47===r.charCodeAt(a+u))return r.slice(a+u+1);if(0===u)return r.slice(a+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(a+u))break;47===l&&(f=u)}var d="";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===d.length?d+="..":d+="/..");return d.length>0?d+r.slice(a+f):(a+=f,47===r.charCodeAt(a)&&++a,r.slice(a))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return".";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?"/":".":n&&1===i?"//":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&"string"!=typeof r)throw new TypeError('"ext" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return"";var a=r.length-1,h=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===h&&(s=!1,h=n+1),a>=0&&(c===r.charCodeAt(a)?-1==--a&&(o=n):(a=-1,o=h))}return i===o?o=h:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?"":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,a=t.length-1;a>=0;--a){var h=t.charCodeAt(a);if(47!==h)-1===i&&(o=!1,i=a+1),46===h?-1===r?r=a:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=a+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?"":t.slice(r,i)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||"")+(e.ext||"");return r?r===e.root?r+n:r+"/"+n:n}(0,t)},parse:function(t){e(t);var r={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root="/",n=1):n=0;for(var s=-1,a=0,h=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===h&&(c=!1,h=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){a=f+1;break}return-1===s||-1===h||0===u||1===u&&s===h-1&&s===a+1?-1!==h&&(r.base=r.name=0===a&&o?t.slice(1,h):t.slice(a,h)):(0===a&&o?(r.name=t.slice(1,s),r.base=t.slice(1,h)):(r.name=t.slice(a,s),r.base=t.slice(a,h)),r.ext=t.slice(s,h)),a>0?r.dir=t.slice(0,a-1):o&&(r.dir="/"),r},sep:"/",delimiter:":",win32:null,posix:null};n.posix=n,t.exports=n},674:(t,e)=>{if(Object.defineProperty(e,"__esModule",{value:!0}),e.isWindows=void 0,"object"==typeof process)e.isWindows="win32"===process.platform;else if("object"==typeof navigator){let t=navigator.userAgent;e.isWindows=t.indexOf("Windows")>=0}},796:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.uriToFsPath=e.URI=void 0;const n=r(674),i=/^\w[\w\d+.-]*$/,o=/^\//,s=/^\/\//;function a(t,e){if(!t.scheme&&e)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${t.authority}", path: "${t.path}", query: "${t.query}", fragment: "${t.fragment}"}`);if(t.scheme&&!i.test(t.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(t.path)if(t.authority){if(!o.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(s.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}const h="",c="/",f=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class u{static isUri(t){return t instanceof u||!!t&&"string"==typeof t.authority&&"string"==typeof t.fragment&&"string"==typeof t.path&&"string"==typeof t.query&&"string"==typeof t.scheme&&"string"==typeof t.fsPath&&"function"==typeof t.with&&"function"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){"object"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:"file"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case"https":case"http":case"file":e?e[0]!==c&&(e=c+e):e=c}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,a(this,o))}get fsPath(){return v(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new d(e,r,n,i,o)}static parse(t,e=!1){const r=f.exec(t);return r?new d(r[2]||h,w(r[4]||h),w(r[5]||h),w(r[7]||h),w(r[9]||h),e):new d(h,h,h,h,h)}static file(t){let e=h;if(n.isWindows&&(t=t.replace(/\\/g,c)),t[0]===c&&t[1]===c){const r=t.indexOf(c,2);-1===r?(e=t.substring(2),t=c):(e=t.substring(2,r),t=t.substring(r)||c)}return new d("file",e,t,h,h)}static from(t){const e=new d(t.scheme,t.authority,t.path,t.query,t.fragment);return a(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof u)return t;{const e=new d(t);return e._formatted=t.external,e._fsPath=t._sep===l?t.fsPath:null,e}}return t}}e.URI=u;const l=n.isWindows?1:void 0;class d extends u{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=v(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=l),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const p={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function g(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=p[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function m(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=p[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function v(t,e){let r;return r=t.authority&&t.path.length>1&&"file"===t.scheme?`//${t.authority}${t.path}`:47===t.path.charCodeAt(0)&&(t.path.charCodeAt(1)>=65&&t.path.charCodeAt(1)<=90||t.path.charCodeAt(1)>=97&&t.path.charCodeAt(1)<=122)&&58===t.path.charCodeAt(2)?e?t.path.substr(1):t.path[1].toLowerCase()+t.path.substr(2):t.path,n.isWindows&&(r=r.replace(/\//g,"\\")),r}function y(t,e){const r=e?m:g;let n="",{scheme:i,authority:o,path:s,query:a,fragment:h}=t;if(i&&(n+=i,n+=":"),(o||"file"===i)&&(n+=c,n+=c),o){let t=o.indexOf("@");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(":"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=":",n+=r(e.substr(t+1),!1,!0)),n+="@"}o=o.toLowerCase(),t=o.lastIndexOf(":"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return a&&(n+="?",n+=r(a,!1,!1)),h&&(n+="#",n+=e?h:g(h,!1,!1)),n}function b(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+b(t.substr(3)):t}}e.uriToFsPath=v;const C=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function w(t){return t.match(C)?t.replace(C,(t=>b(t))):t}},679:function(t,e,r){var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!("get"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&n(e,t,r);return i(e,t),e};Object.defineProperty(e,"__esModule",{value:!0}),e.Utils=void 0;const s=o(r(470)),a=s.posix||s,h="/";var c;!function(t){t.joinPath=function(t,...e){return t.with({path:a.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==h&&(r=h+r,n=!0);let i=a.resolve(r,...e);return n&&i[0]===h&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===h)return t;let e=a.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=""),t.with({path:e})},t.basename=function(t){return a.basename(t.path)},t.extname=function(t){return a.extname(t.path)}}(c||(e.Utils=c={}))}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,r),o.exports}var n={};return(()=>{var t=n;Object.defineProperty(t,"__esModule",{value:!0}),t.Utils=t.URI=void 0;const e=r(796);Object.defineProperty(t,"URI",{enumerable:!0,get:function(){return e.URI}});const i=r(679);Object.defineProperty(t,"Utils",{enumerable:!0,get:function(){return i.Utils}})})(),n})()));
-//# sourceMappingURL=index.js.map
-
-/***/ }),
-/* 5 */
-/***/ ((module) => {
-
-// shim for using process in browser
-var process = module.exports = {};
-
-// cached from whatever global is present so that test runners that stub it
-// don't break things.  But we need to wrap it in a try catch in case it is
-// wrapped in strict mode code which doesn't define any globals.  It's inside a
-// function because try/catches deoptimize in certain engines.
-
-var cachedSetTimeout;
-var cachedClearTimeout;
-
-function defaultSetTimout() {
-    throw new Error('setTimeout has not been defined');
-}
-function defaultClearTimeout () {
-    throw new Error('clearTimeout has not been defined');
-}
-(function () {
-    try {
-        if (typeof setTimeout === 'function') {
-            cachedSetTimeout = setTimeout;
-        } else {
-            cachedSetTimeout = defaultSetTimout;
-        }
-    } catch (e) {
-        cachedSetTimeout = defaultSetTimout;
-    }
-    try {
-        if (typeof clearTimeout === 'function') {
-            cachedClearTimeout = clearTimeout;
-        } else {
-            cachedClearTimeout = defaultClearTimeout;
-        }
-    } catch (e) {
-        cachedClearTimeout = defaultClearTimeout;
-    }
-} ())
-function runTimeout(fun) {
-    if (cachedSetTimeout === setTimeout) {
-        //normal enviroments in sane situations
-        return setTimeout(fun, 0);
-    }
-    // if setTimeout wasn't available but was latter defined
-    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
-        cachedSetTimeout = setTimeout;
-        return setTimeout(fun, 0);
-    }
-    try {
-        // when when somebody has screwed with setTimeout but no I.E. maddness
-        return cachedSetTimeout(fun, 0);
-    } catch(e){
-        try {
-            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
-            return cachedSetTimeout.call(null, fun, 0);
-        } catch(e){
-            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
-            return cachedSetTimeout.call(this, fun, 0);
-        }
-    }
-
-
-}
-function runClearTimeout(marker) {
-    if (cachedClearTimeout === clearTimeout) {
-        //normal enviroments in sane situations
-        return clearTimeout(marker);
-    }
-    // if clearTimeout wasn't available but was latter defined
-    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
-        cachedClearTimeout = clearTimeout;
-        return clearTimeout(marker);
-    }
-    try {
-        // when when somebody has screwed with setTimeout but no I.E. maddness
-        return cachedClearTimeout(marker);
-    } catch (e){
-        try {
-            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
-            return cachedClearTimeout.call(null, marker);
-        } catch (e){
-            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
-            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
-            return cachedClearTimeout.call(this, marker);
-        }
-    }
-
-
-
-}
-var queue = [];
-var draining = false;
-var currentQueue;
-var queueIndex = -1;
-
-function cleanUpNextTick() {
-    if (!draining || !currentQueue) {
-        return;
-    }
-    draining = false;
-    if (currentQueue.length) {
-        queue = currentQueue.concat(queue);
-    } else {
-        queueIndex = -1;
-    }
-    if (queue.length) {
-        drainQueue();
-    }
-}
-
-function drainQueue() {
-    if (draining) {
-        return;
-    }
-    var timeout = runTimeout(cleanUpNextTick);
-    draining = true;
-
-    var len = queue.length;
-    while(len) {
-        currentQueue = queue;
-        queue = [];
-        while (++queueIndex < len) {
-            if (currentQueue) {
-                currentQueue[queueIndex].run();
-            }
-        }
-        queueIndex = -1;
-        len = queue.length;
-    }
-    currentQueue = null;
-    draining = false;
-    runClearTimeout(timeout);
-}
-
-process.nextTick = function (fun) {
-    var args = new Array(arguments.length - 1);
-    if (arguments.length > 1) {
-        for (var i = 1; i < arguments.length; i++) {
-            args[i - 1] = arguments[i];
-        }
-    }
-    queue.push(new Item(fun, args));
-    if (queue.length === 1 && !draining) {
-        runTimeout(drainQueue);
-    }
-};
-
-// v8 likes predictible objects
-function Item(fun, array) {
-    this.fun = fun;
-    this.array = array;
-}
-Item.prototype.run = function () {
-    this.fun.apply(null, this.array);
-};
-process.title = 'browser';
-process.browser = true;
-process.env = {};
-process.argv = [];
-process.version = ''; // empty string to avoid regexp issues
-process.versions = {};
-
-function noop() {}
-
-process.on = noop;
-process.addListener = noop;
-process.once = noop;
-process.off = noop;
-process.removeListener = noop;
-process.removeAllListeners = noop;
-process.emit = noop;
-process.prependListener = noop;
-process.prependOnceListener = noop;
-
-process.listeners = function (name) { return [] }
-
-process.binding = function (name) {
-    throw new Error('process.binding is not supported');
-};
-
-process.cwd = function () { return '/' };
-process.chdir = function (dir) {
-    throw new Error('process.chdir is not supported');
-};
-process.umask = function() { return 0; };
-
-
-/***/ })
-/******/ 	]);
-/************************************************************************/
-/******/ 	// The module cache
-/******/ 	var __webpack_module_cache__ = {};
-/******/ 	
-/******/ 	// The require function
-/******/ 	function __webpack_require__(moduleId) {
-/******/ 		// Check if module is in cache
-/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
-/******/ 		if (cachedModule !== undefined) {
-/******/ 			return cachedModule.exports;
-/******/ 		}
-/******/ 		// Create a new module (and put it into the cache)
-/******/ 		var module = __webpack_module_cache__[moduleId] = {
-/******/ 			// no module.id needed
-/******/ 			// no module.loaded needed
-/******/ 			exports: {}
-/******/ 		};
-/******/ 	
-/******/ 		// Execute the module function
-/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
-/******/ 	
-/******/ 		// Return the exports of the module
-/******/ 		return module.exports;
-/******/ 	}
-/******/ 	
-/************************************************************************/
-var __webpack_exports__ = {};
-// This entry need to be wrapped in an IIFE because it need to be in strict mode.
-(() => {
-"use strict";
-var exports = __webpack_exports__;
-
-/*---------------------------------------------------------------------------------------------
- *  Copyright (c) Microsoft Corporation. All rights reserved.
- *  Licensed under the MIT License. See License.txt in the project root for license information.
- *--------------------------------------------------------------------------------------------*/
-Object.defineProperty(exports, "__esModule", ({ value: true }));
-exports.activate = void 0;
-const request_light_1 = __webpack_require__(1);
-const vscode_1 = __webpack_require__(2);
-const fsProvider_1 = __webpack_require__(3);
-const SCHEME = 'vscode-test-web';
-function activate(context) {
-    const serverUri = context.extensionUri.with({ path: '/static/mount', query: undefined });
-    const serverBackedRootDirectory = new ServerBackedDirectory(serverUri, [], '');
-    const disposable = vscode_1.workspace.registerFileSystemProvider(SCHEME, new fsProvider_1.MemFileSystemProvider(SCHEME, serverBackedRootDirectory));
-    context.subscriptions.push(disposable);
-    console.log(`vscode-test-web-support fs provider registers for ${SCHEME}, initial content from ${serverUri.toString(/*skipEncoding*/ true)}`);
-}
-exports.activate = activate;
-class ServerBackedFile {
-    constructor(_serverRoot, pathSegments, name) {
-        this._serverRoot = _serverRoot;
-        this.pathSegments = pathSegments;
-        this.name = name;
-        this.type = vscode_1.FileType.File;
-    }
-    get stats() {
-        if (this._stats === undefined) {
-            this._stats = getStats(this._serverRoot, this.pathSegments);
-        }
-        return this._stats;
-    }
-    set stats(stats) {
-        this._stats = stats;
-    }
-    get content() {
-        if (this._content === undefined) {
-            this._content = getContent(this._serverRoot, this.pathSegments);
-        }
-        return this._content;
-    }
-    set content(content) {
-        this._content = content;
-    }
-}
-class ServerBackedDirectory {
-    constructor(_serverRoot, pathSegments, name) {
-        this._serverRoot = _serverRoot;
-        this.pathSegments = pathSegments;
-        this.name = name;
-        this.type = vscode_1.FileType.Directory;
-    }
-    get stats() {
-        if (this._stats === undefined) {
-            this._stats = getStats(this._serverRoot, this.pathSegments);
-        }
-        return this._stats;
-    }
-    set stats(stats) {
-        this._stats = stats;
-    }
-    get entries() {
-        if (this._entries === undefined) {
-            this._entries = getEntries(this._serverRoot, this.pathSegments);
-        }
-        return this._entries;
-    }
-    set entries(entries) {
-        this._entries = entries;
-    }
-}
-// eslint-disable-next-line @typescript-eslint/no-explicit-any
-function isEntry(e) {
-    return e && (e.type === vscode_1.FileType.Directory || e.type === vscode_1.FileType.File) && typeof e.name === 'string' && e.name.length > 0;
-}
-// eslint-disable-next-line @typescript-eslint/no-explicit-any
-function isStat(e) {
-    return e && (e.type === vscode_1.FileType.Directory || e.type === vscode_1.FileType.File) && typeof e.ctime === 'number' && typeof e.mtime === 'number' && typeof e.size === 'number';
-}
-function getServerUri(serverRoot, pathSegments) {
-    return vscode_1.Uri.joinPath(serverRoot, ...pathSegments);
-}
-async function getEntries(serverRoot, pathSegments) {
-    const url = getServerUri(serverRoot, pathSegments).with({ query: 'readdir' }).toString(/*skipEncoding*/ true);
-    const response = await (0, request_light_1.xhr)({ url });
-    if (response.status === 200 && response.status <= 204) {
-        try {
-            const res = JSON.parse(response.responseText);
-            if (Array.isArray(res)) {
-                const entries = new Map();
-                for (const r of res) {
-                    if (isEntry(r)) {
-                        const newPathSegments = [...pathSegments, encodeURIComponent(r.name)];
-                        const newEntry = r.type === vscode_1.FileType.Directory ? new ServerBackedDirectory(serverRoot, newPathSegments, r.name) : new ServerBackedFile(serverRoot, newPathSegments, r.name);
-                        entries.set(newEntry.name, newEntry);
-                    }
-                }
-                return entries;
-            }
-        }
-        catch {
-            // ignore
-        }
-        console.log(`Invalid server response format for ${url}.`);
-    }
-    else {
-        console.log(`Invalid server response for ${url}. Status ${response.status}`);
-    }
-    return new Map();
-}
-async function getStats(serverRoot, pathSegments) {
-    const serverUri = getServerUri(serverRoot, pathSegments);
-    const url = serverUri.with({ query: 'stat' }).toString(/*skipEncoding*/ true);
-    const response = await (0, request_light_1.xhr)({ url });
-    if (response.status === 200 && response.status <= 204) {
-        const res = JSON.parse(response.responseText);
-        if (isStat(res)) {
-            return res;
-        }
-        throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}.`);
-    }
-    throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}. Status ${response.status}.`);
-}
-async function getContent(serverRoot, pathSegments) {
-    const serverUri = getServerUri(serverRoot, pathSegments);
-    const response = await (0, request_light_1.xhr)({ url: serverUri.toString(/*skipEncoding*/ true) });
-    if (response.status >= 200 && response.status <= 204) {
-        return response.body;
-    }
-    throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}. Status ${response.status}.`);
-}
-
-})();
-
-var __webpack_export_target__ = exports;
-for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
-if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
-/******/ })()
-;
-//# sourceMappingURL=fsExtensionMain.js.map
\ No newline at end of file
+	(()=>{"use strict";var e={};(()=>{var r=e;Object.defineProperty(r,"__esModule",{value:!0}),r.getErrorStatusDescription=r.xhr=r.configure=void 0,r.configure=(e,r)=>{},r.xhr=async e=>{const r=new Headers;if(e.headers)for(const t in e.headers){const o=e.headers[t];Array.isArray(o)?o.forEach((e=>r.set(t,e))):r.set(t,o)}e.user&&e.password&&r.set("Authorization","Basic "+btoa(e.user+":"+e.password));const t={method:e.type,redirect:e.followRedirects>0?"follow":"manual",mode:"cors",headers:r};if(e.data&&(t.body=e.data),e.token){const r=new AbortController;e.token.isCancellationRequested&&r.abort(),e.token.onCancellationRequested((()=>{r.abort()})),t.signal=r.signal}const o=new Request(e.url,t),s=await fetch(o),a={};s.headers.forEach(((e,r)=>{a[r]=e}));const n=await s.arrayBuffer();return new class{constructor(){this.status=s.status,this.headers=a}get responseText(){return(new TextDecoder).decode(n)}get body(){return new Uint8Array(n)}}},r.getErrorStatusDescription=function(e){return String(e)}})();var r=exports;for(var t in e)r[t]=e[t];e.__esModule&&Object.defineProperty(r,"__esModule",{value:!0})})();
+
+	/***/ }),
+	/* 2 */
+	/***/ ((module) => {
+
+	"use strict";
+	module.exports = require("vscode");
+
+	/***/ }),
+	/* 3 */
+	/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+	"use strict";
+
+	/*---------------------------------------------------------------------------------------------
+	 *  Copyright (c) Microsoft Corporation. All rights reserved.
+	 *  Licensed under the MIT License. See License.txt in the project root for license information.
+	 *--------------------------------------------------------------------------------------------*/
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.MemFileSystemProvider = void 0;
+	const vscode_1 = __webpack_require__(2);
+	const vscode_uri_1 = __webpack_require__(4);
+	const minimatch_1 = __webpack_require__(6);
+	function newFileStat(type, size) {
+		return Promise.resolve({ type, ctime: Date.now(), mtime: Date.now(), size });
+	}
+	function modifiedFileStat(stats, size) {
+		return Promise.resolve({ type: stats.type, ctime: stats.ctime, mtime: Date.now(), size: size ?? stats.size });
+	}
+	class MemFileSystemProvider {
+		constructor(scheme, root, extensionUri) {
+			this.scheme = scheme;
+			this.root = root;
+			this.extensionUri = extensionUri;
+			// --- manage file events
+			this._onDidChangeFile = new vscode_1.EventEmitter();
+			this.onDidChangeFile = this._onDidChangeFile.event;
+			this._bufferedChanges = [];
+		}
+		// --- manage file metadata
+		async stat(resource) {
+			const entry = await this._lookup(resource, false);
+			return entry.stats;
+		}
+		async readDirectory(resource) {
+			const entry = await this._lookupAsDirectory(resource, false);
+			const entries = await entry.entries;
+			const result = [];
+			entries.forEach((child, name) => result.push([name, child.type]));
+			return result;
+		}
+		// --- manage file contents
+		async readFile(resource) {
+			const entry = await this._lookupAsFile(resource, false);
+			return entry.content;
+		}
+		async writeFile(uri, content, opts) {
+			const basename = vscode_uri_1.Utils.basename(uri);
+			const parent = await this._lookupParentDirectory(uri);
+			const entries = await parent.entries;
+			let entry = entries.get(basename);
+			if (entry && entry.type === vscode_1.FileType.Directory) {
+				throw vscode_1.FileSystemError.FileIsADirectory(uri);
+			}
+			if (!entry && !opts.create) {
+				throw vscode_1.FileSystemError.FileNotFound(uri);
+			}
+			if (entry && opts.create && !opts.overwrite) {
+				throw vscode_1.FileSystemError.FileExists(uri);
+			}
+			const stats = newFileStat(vscode_1.FileType.File, content.byteLength);
+			if (!entry) {
+				entry = { type: vscode_1.FileType.File, name: basename, stats, content: Promise.resolve(content) };
+				entries.set(basename, entry);
+				this._fireSoon({ type: vscode_1.FileChangeType.Created, uri });
+			}
+			else {
+				entry.stats = stats;
+				entry.content = Promise.resolve(content);
+			}
+			this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri });
+		}
+		// --- manage files/folders
+		async rename(from, to, opts) {
+			if (!opts.overwrite && await this._lookup(to, true)) {
+				throw vscode_1.FileSystemError.FileExists(to);
+			}
+			const entry = await this._lookup(from, false);
+			const oldParent = await this._lookupParentDirectory(from);
+			const newParent = await this._lookupParentDirectory(to);
+			const newName = vscode_uri_1.Utils.basename(to);
+			const oldParentEntries = await oldParent.entries;
+			oldParentEntries.delete(entry.name);
+			entry.name = newName;
+			const newParentEntries = await newParent.entries;
+			newParentEntries.set(newName, entry);
+			this._fireSoon({ type: vscode_1.FileChangeType.Deleted, uri: from }, { type: vscode_1.FileChangeType.Created, uri: to });
+		}
+		async delete(uri, opts) {
+			const dirname = vscode_uri_1.Utils.dirname(uri);
+			const basename = vscode_uri_1.Utils.basename(uri);
+			const parent = await this._lookupAsDirectory(dirname, false);
+			const parentEntries = await parent.entries;
+			if (parentEntries.has(basename)) {
+				parentEntries.delete(basename);
+				parent.stats = newFileStat(parent.type, -1);
+				this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri: dirname }, { uri, type: vscode_1.FileChangeType.Deleted });
+			}
+		}
+		async createDirectory(uri) {
+			const basename = vscode_uri_1.Utils.basename(uri);
+			const dirname = vscode_uri_1.Utils.dirname(uri);
+			const parent = await this._lookupAsDirectory(dirname, false);
+			const parentEntries = await parent.entries;
+			const entry = { type: vscode_1.FileType.Directory, name: basename, stats: newFileStat(vscode_1.FileType.Directory, 0), entries: Promise.resolve(new Map()) };
+			parentEntries.set(entry.name, entry);
+			const stats = await parent.stats;
+			parent.stats = modifiedFileStat(stats, stats.size + 1);
+			this._fireSoon({ type: vscode_1.FileChangeType.Changed, uri: dirname }, { type: vscode_1.FileChangeType.Created, uri });
+		}
+		// --- search
+		provideFileSearchResults(query, options, token) {
+			const pattern = query.pattern;
+			// Pattern is always blank: https://github.com/microsoft/vscode/issues/200892
+			console.log(`vscode-test-web search query: ${JSON.stringify(query)}`);
+			const glob = new minimatch_1.Minimatch(pattern);
+			const result = [];
+			const dive = async (currentDirectory, pathSegments = []) => {
+				for (const [name, entry] of await currentDirectory.entries) {
+					if (typeof options.maxResults !== 'undefined' && result.length >= options.maxResults) {
+						break;
+					}
+					const uri = vscode_1.Uri.joinPath(this.extensionUri, ...pathSegments, entry.name);
+					if (entry.type === vscode_1.FileType.File) {
+						const toMatch = uri.toString();
+						// Pattern is always blank: https://github.com/microsoft/vscode/issues/200892
+						if (!pattern || glob.match(toMatch)) {
+							result.push(uri);
+						}
+					}
+					else if (entry.type === vscode_1.FileType.Directory) {
+						await dive(entry, [...pathSegments, name]);
+					}
+				}
+			};
+			return dive(this.root).then(() => {
+				return result;
+			});
+		}
+		async _lookup(uri, silent) {
+			if (uri.scheme !== this.scheme) {
+				if (!silent) {
+					throw vscode_1.FileSystemError.FileNotFound(uri);
+				}
+				else {
+					return undefined;
+				}
+			}
+			let entry = this.root;
+			const parts = uri.path.split('/');
+			for (const part of parts) {
+				if (!part) {
+					continue;
+				}
+				let child;
+				if (entry.type === vscode_1.FileType.Directory) {
+					child = (await entry.entries).get(part);
+				}
+				if (!child) {
+					if (!silent) {
+						throw vscode_1.FileSystemError.FileNotFound(uri);
+					}
+					else {
+						return undefined;
+					}
+				}
+				entry = child;
+			}
+			return entry;
+		}
+		async _lookupAsDirectory(uri, silent) {
+			const entry = await this._lookup(uri, silent);
+			if (entry?.type === vscode_1.FileType.Directory) {
+				return entry;
+			}
+			throw vscode_1.FileSystemError.FileNotADirectory(uri);
+		}
+		async _lookupAsFile(uri, silent) {
+			const entry = await this._lookup(uri, silent);
+			if (!entry) {
+				throw vscode_1.FileSystemError.FileNotFound(uri);
+			}
+			if (entry.type === vscode_1.FileType.File) {
+				return entry;
+			}
+			throw vscode_1.FileSystemError.FileIsADirectory(uri);
+		}
+		_lookupParentDirectory(uri) {
+			const dirname = vscode_uri_1.Utils.dirname(uri);
+			return this._lookupAsDirectory(dirname, false);
+		}
+		watch(resource, opts) {
+			// ignore, fires for all changes...
+			return vscode_1.Disposable.from();
+		}
+		_fireSoon(...changes) {
+			this._bufferedChanges.push(...changes);
+			if (this._fireSoonHandle) {
+				clearTimeout(this._fireSoonHandle);
+			}
+			this._fireSoonHandle = setTimeout(() => {
+				this._onDidChangeFile.fire(this._bufferedChanges);
+				this._bufferedChanges.length = 0;
+			}, 5);
+		}
+		dispose() {
+			this._onDidChangeFile.dispose();
+		}
+	}
+	exports.MemFileSystemProvider = MemFileSystemProvider;
+
+
+	/***/ }),
+	/* 4 */
+	/***/ (function(module, __unused_webpack_exports, __webpack_require__) {
+
+	/* provided dependency */ var process = __webpack_require__(5);
+	!function(t,e){if(true)module.exports=e();else { var n, r; }}(this,(()=>(()=>{"use strict";var t={470:t=>{function e(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function r(t,e){for(var r,n="",i=0,o=-1,s=0,a=0;a<=t.length;++a){if(a<t.length)r=t.charCodeAt(a);else{if(47===r)break;r=47}if(47===r){if(o===a-1||1===s);else if(o!==a-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var h=n.lastIndexOf("/");if(h!==n.length-1){-1===h?(n="",i=0):i=(n=n.slice(0,h)).length-1-n.lastIndexOf("/"),o=a,s=0;continue}}else if(2===n.length||1===n.length){n="",i=0,o=a,s=0;continue}e&&(n.length>0?n+="/..":n="..",i=2)}else n.length>0?n+="/"+t.slice(o+1,a):n=t.slice(o+1,a),i=a-o-1;o=a,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n="",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+"/"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(t){if(e(t),0===t.length)return".";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t="."),t.length>0&&i&&(t+="/"),n?"/"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+="/"+i)}return void 0===t?".":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return"";if((t=n.resolve(t))===(r=n.resolve(r)))return"";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,a=1;a<r.length&&47===r.charCodeAt(a);++a);for(var h=r.length-a,c=s<h?s:h,f=-1,u=0;u<=c;++u){if(u===c){if(h>c){if(47===r.charCodeAt(a+u))return r.slice(a+u+1);if(0===u)return r.slice(a+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(a+u))break;47===l&&(f=u)}var d="";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===d.length?d+="..":d+="/..");return d.length>0?d+r.slice(a+f):(a+=f,47===r.charCodeAt(a)&&++a,r.slice(a))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return".";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?"/":".":n&&1===i?"//":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&"string"!=typeof r)throw new TypeError('"ext" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return"";var a=r.length-1,h=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===h&&(s=!1,h=n+1),a>=0&&(c===r.charCodeAt(a)?-1==--a&&(o=n):(a=-1,o=h))}return i===o?o=h:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?"":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,a=t.length-1;a>=0;--a){var h=t.charCodeAt(a);if(47!==h)-1===i&&(o=!1,i=a+1),46===h?-1===r?r=a:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=a+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?"":t.slice(r,i)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||"")+(e.ext||"");return r?r===e.root?r+n:r+"/"+n:n}(0,t)},parse:function(t){e(t);var r={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root="/",n=1):n=0;for(var s=-1,a=0,h=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===h&&(c=!1,h=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){a=f+1;break}return-1===s||-1===h||0===u||1===u&&s===h-1&&s===a+1?-1!==h&&(r.base=r.name=0===a&&o?t.slice(1,h):t.slice(a,h)):(0===a&&o?(r.name=t.slice(1,s),r.base=t.slice(1,h)):(r.name=t.slice(a,s),r.base=t.slice(a,h)),r.ext=t.slice(s,h)),a>0?r.dir=t.slice(0,a-1):o&&(r.dir="/"),r},sep:"/",delimiter:":",win32:null,posix:null};n.posix=n,t.exports=n},674:(t,e)=>{if(Object.defineProperty(e,"__esModule",{value:!0}),e.isWindows=void 0,"object"==typeof process)e.isWindows="win32"===process.platform;else if("object"==typeof navigator){let t=navigator.userAgent;e.isWindows=t.indexOf("Windows")>=0}},796:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.uriToFsPath=e.URI=void 0;const n=r(674),i=/^\w[\w\d+.-]*$/,o=/^\//,s=/^\/\//;function a(t,e){if(!t.scheme&&e)throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${t.authority}", path: "${t.path}", query: "${t.query}", fragment: "${t.fragment}"}`);if(t.scheme&&!i.test(t.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(t.path)if(t.authority){if(!o.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(s.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}const h="",c="/",f=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class u{static isUri(t){return t instanceof u||!!t&&"string"==typeof t.authority&&"string"==typeof t.fragment&&"string"==typeof t.path&&"string"==typeof t.query&&"string"==typeof t.scheme&&"string"==typeof t.fsPath&&"function"==typeof t.with&&"function"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){"object"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:"file"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case"https":case"http":case"file":e?e[0]!==c&&(e=c+e):e=c}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,a(this,o))}get fsPath(){return v(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new d(e,r,n,i,o)}static parse(t,e=!1){const r=f.exec(t);return r?new d(r[2]||h,w(r[4]||h),w(r[5]||h),w(r[7]||h),w(r[9]||h),e):new d(h,h,h,h,h)}static file(t){let e=h;if(n.isWindows&&(t=t.replace(/\\/g,c)),t[0]===c&&t[1]===c){const r=t.indexOf(c,2);-1===r?(e=t.substring(2),t=c):(e=t.substring(2,r),t=t.substring(r)||c)}return new d("file",e,t,h,h)}static from(t){const e=new d(t.scheme,t.authority,t.path,t.query,t.fragment);return a(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof u)return t;{const e=new d(t);return e._formatted=t.external,e._fsPath=t._sep===l?t.fsPath:null,e}}return t}}e.URI=u;const l=n.isWindows?1:void 0;class d extends u{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=v(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=l),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const p={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function g(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=p[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function m(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=p[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function v(t,e){let r;return r=t.authority&&t.path.length>1&&"file"===t.scheme?`//${t.authority}${t.path}`:47===t.path.charCodeAt(0)&&(t.path.charCodeAt(1)>=65&&t.path.charCodeAt(1)<=90||t.path.charCodeAt(1)>=97&&t.path.charCodeAt(1)<=122)&&58===t.path.charCodeAt(2)?e?t.path.substr(1):t.path[1].toLowerCase()+t.path.substr(2):t.path,n.isWindows&&(r=r.replace(/\//g,"\\")),r}function y(t,e){const r=e?m:g;let n="",{scheme:i,authority:o,path:s,query:a,fragment:h}=t;if(i&&(n+=i,n+=":"),(o||"file"===i)&&(n+=c,n+=c),o){let t=o.indexOf("@");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(":"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=":",n+=r(e.substr(t+1),!1,!0)),n+="@"}o=o.toLowerCase(),t=o.lastIndexOf(":"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return a&&(n+="?",n+=r(a,!1,!1)),h&&(n+="#",n+=e?h:g(h,!1,!1)),n}function b(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+b(t.substr(3)):t}}e.uriToFsPath=v;const C=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function w(t){return t.match(C)?t.replace(C,(t=>b(t))):t}},679:function(t,e,r){var n=this&&this.__createBinding||(Object.create?function(t,e,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(e,r);i&&!("get"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[r]}}),Object.defineProperty(t,n,i)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&n(e,t,r);return i(e,t),e};Object.defineProperty(e,"__esModule",{value:!0}),e.Utils=void 0;const s=o(r(470)),a=s.posix||s,h="/";var c;!function(t){t.joinPath=function(t,...e){return t.with({path:a.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==h&&(r=h+r,n=!0);let i=a.resolve(r,...e);return n&&i[0]===h&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===h)return t;let e=a.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=""),t.with({path:e})},t.basename=function(t){return a.basename(t.path)},t.extname=function(t){return a.extname(t.path)}}(c||(e.Utils=c={}))}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n].call(o.exports,o,o.exports,r),o.exports}var n={};return(()=>{var t=n;Object.defineProperty(t,"__esModule",{value:!0}),t.Utils=t.URI=void 0;const e=r(796);Object.defineProperty(t,"URI",{enumerable:!0,get:function(){return e.URI}});const i=r(679);Object.defineProperty(t,"Utils",{enumerable:!0,get:function(){return i.Utils}})})(),n})()));
+	//# sourceMappingURL=index.js.map
+
+	/***/ }),
+	/* 5 */
+	/***/ ((module) => {
+
+	// shim for using process in browser
+	var process = module.exports = {};
+
+	// cached from whatever global is present so that test runners that stub it
+	// don't break things.  But we need to wrap it in a try catch in case it is
+	// wrapped in strict mode code which doesn't define any globals.  It's inside a
+	// function because try/catches deoptimize in certain engines.
+
+	var cachedSetTimeout;
+	var cachedClearTimeout;
+
+	function defaultSetTimout() {
+		throw new Error('setTimeout has not been defined');
+	}
+	function defaultClearTimeout () {
+		throw new Error('clearTimeout has not been defined');
+	}
+	(function () {
+		try {
+			if (typeof setTimeout === 'function') {
+				cachedSetTimeout = setTimeout;
+			} else {
+				cachedSetTimeout = defaultSetTimout;
+			}
+		} catch (e) {
+			cachedSetTimeout = defaultSetTimout;
+		}
+		try {
+			if (typeof clearTimeout === 'function') {
+				cachedClearTimeout = clearTimeout;
+			} else {
+				cachedClearTimeout = defaultClearTimeout;
+			}
+		} catch (e) {
+			cachedClearTimeout = defaultClearTimeout;
+		}
+	} ())
+	function runTimeout(fun) {
+		if (cachedSetTimeout === setTimeout) {
+			//normal enviroments in sane situations
+			return setTimeout(fun, 0);
+		}
+		// if setTimeout wasn't available but was latter defined
+		if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
+			cachedSetTimeout = setTimeout;
+			return setTimeout(fun, 0);
+		}
+		try {
+			// when when somebody has screwed with setTimeout but no I.E. maddness
+			return cachedSetTimeout(fun, 0);
+		} catch(e){
+			try {
+				// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
+				return cachedSetTimeout.call(null, fun, 0);
+			} catch(e){
+				// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
+				return cachedSetTimeout.call(this, fun, 0);
+			}
+		}
+
+
+	}
+	function runClearTimeout(marker) {
+		if (cachedClearTimeout === clearTimeout) {
+			//normal enviroments in sane situations
+			return clearTimeout(marker);
+		}
+		// if clearTimeout wasn't available but was latter defined
+		if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
+			cachedClearTimeout = clearTimeout;
+			return clearTimeout(marker);
+		}
+		try {
+			// when when somebody has screwed with setTimeout but no I.E. maddness
+			return cachedClearTimeout(marker);
+		} catch (e){
+			try {
+				// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
+				return cachedClearTimeout.call(null, marker);
+			} catch (e){
+				// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
+				// Some versions of I.E. have different rules for clearTimeout vs setTimeout
+				return cachedClearTimeout.call(this, marker);
+			}
+		}
+
+
+
+	}
+	var queue = [];
+	var draining = false;
+	var currentQueue;
+	var queueIndex = -1;
+
+	function cleanUpNextTick() {
+		if (!draining || !currentQueue) {
+			return;
+		}
+		draining = false;
+		if (currentQueue.length) {
+			queue = currentQueue.concat(queue);
+		} else {
+			queueIndex = -1;
+		}
+		if (queue.length) {
+			drainQueue();
+		}
+	}
+
+	function drainQueue() {
+		if (draining) {
+			return;
+		}
+		var timeout = runTimeout(cleanUpNextTick);
+		draining = true;
+
+		var len = queue.length;
+		while(len) {
+			currentQueue = queue;
+			queue = [];
+			while (++queueIndex < len) {
+				if (currentQueue) {
+					currentQueue[queueIndex].run();
+				}
+			}
+			queueIndex = -1;
+			len = queue.length;
+		}
+		currentQueue = null;
+		draining = false;
+		runClearTimeout(timeout);
+	}
+
+	process.nextTick = function (fun) {
+		var args = new Array(arguments.length - 1);
+		if (arguments.length > 1) {
+			for (var i = 1; i < arguments.length; i++) {
+				args[i - 1] = arguments[i];
+			}
+		}
+		queue.push(new Item(fun, args));
+		if (queue.length === 1 && !draining) {
+			runTimeout(drainQueue);
+		}
+	};
+
+	// v8 likes predictible objects
+	function Item(fun, array) {
+		this.fun = fun;
+		this.array = array;
+	}
+	Item.prototype.run = function () {
+		this.fun.apply(null, this.array);
+	};
+	process.title = 'browser';
+	process.browser = true;
+	process.env = {};
+	process.argv = [];
+	process.version = ''; // empty string to avoid regexp issues
+	process.versions = {};
+
+	function noop() {}
+
+	process.on = noop;
+	process.addListener = noop;
+	process.once = noop;
+	process.off = noop;
+	process.removeListener = noop;
+	process.removeAllListeners = noop;
+	process.emit = noop;
+	process.prependListener = noop;
+	process.prependOnceListener = noop;
+
+	process.listeners = function (name) { return [] }
+
+	process.binding = function (name) {
+		throw new Error('process.binding is not supported');
+	};
+
+	process.cwd = function () { return '/' };
+	process.chdir = function (dir) {
+		throw new Error('process.chdir is not supported');
+	};
+	process.umask = function() { return 0; };
+
+
+	/***/ }),
+	/* 6 */
+	/***/ (function(__unused_webpack_module, exports, __webpack_require__) {
+
+	"use strict";
+	/* provided dependency */ var process = __webpack_require__(5);
+
+	var __importDefault = (this && this.__importDefault) || function (mod) {
+		return (mod && mod.__esModule) ? mod : { "default": mod };
+	};
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.unescape = exports.escape = exports.AST = exports.Minimatch = exports.match = exports.makeRe = exports.braceExpand = exports.defaults = exports.filter = exports.GLOBSTAR = exports.sep = exports.minimatch = void 0;
+	const brace_expansion_1 = __importDefault(__webpack_require__(7));
+	const assert_valid_pattern_js_1 = __webpack_require__(9);
+	const ast_js_1 = __webpack_require__(10);
+	const escape_js_1 = __webpack_require__(13);
+	const unescape_js_1 = __webpack_require__(12);
+	const minimatch = (p, pattern, options = {}) => {
+		(0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
+		// shortcut: comments match nothing.
+		if (!options.nocomment && pattern.charAt(0) === '#') {
+			return false;
+		}
+		return new Minimatch(pattern, options).match(p);
+	};
+	exports.minimatch = minimatch;
+	// Optimized checking for the most common glob patterns.
+	const starDotExtRE = /^\*+([^+@!?\*\[\(]*)$/;
+	const starDotExtTest = (ext) => (f) => !f.startsWith('.') && f.endsWith(ext);
+	const starDotExtTestDot = (ext) => (f) => f.endsWith(ext);
+	const starDotExtTestNocase = (ext) => {
+		ext = ext.toLowerCase();
+		return (f) => !f.startsWith('.') && f.toLowerCase().endsWith(ext);
+	};
+	const starDotExtTestNocaseDot = (ext) => {
+		ext = ext.toLowerCase();
+		return (f) => f.toLowerCase().endsWith(ext);
+	};
+	const starDotStarRE = /^\*+\.\*+$/;
+	const starDotStarTest = (f) => !f.startsWith('.') && f.includes('.');
+	const starDotStarTestDot = (f) => f !== '.' && f !== '..' && f.includes('.');
+	const dotStarRE = /^\.\*+$/;
+	const dotStarTest = (f) => f !== '.' && f !== '..' && f.startsWith('.');
+	const starRE = /^\*+$/;
+	const starTest = (f) => f.length !== 0 && !f.startsWith('.');
+	const starTestDot = (f) => f.length !== 0 && f !== '.' && f !== '..';
+	const qmarksRE = /^\?+([^+@!?\*\[\(]*)?$/;
+	const qmarksTestNocase = ([$0, ext = '']) => {
+		const noext = qmarksTestNoExt([$0]);
+		if (!ext)
+			return noext;
+		ext = ext.toLowerCase();
+		return (f) => noext(f) && f.toLowerCase().endsWith(ext);
+	};
+	const qmarksTestNocaseDot = ([$0, ext = '']) => {
+		const noext = qmarksTestNoExtDot([$0]);
+		if (!ext)
+			return noext;
+		ext = ext.toLowerCase();
+		return (f) => noext(f) && f.toLowerCase().endsWith(ext);
+	};
+	const qmarksTestDot = ([$0, ext = '']) => {
+		const noext = qmarksTestNoExtDot([$0]);
+		return !ext ? noext : (f) => noext(f) && f.endsWith(ext);
+	};
+	const qmarksTest = ([$0, ext = '']) => {
+		const noext = qmarksTestNoExt([$0]);
+		return !ext ? noext : (f) => noext(f) && f.endsWith(ext);
+	};
+	const qmarksTestNoExt = ([$0]) => {
+		const len = $0.length;
+		return (f) => f.length === len && !f.startsWith('.');
+	};
+	const qmarksTestNoExtDot = ([$0]) => {
+		const len = $0.length;
+		return (f) => f.length === len && f !== '.' && f !== '..';
+	};
+	/* c8 ignore start */
+	const defaultPlatform = (typeof process === 'object' && process
+		? (typeof process.env === 'object' &&
+			process.env &&
+			process.env.__MINIMATCH_TESTING_PLATFORM__) ||
+			process.platform
+		: 'posix');
+	const path = {
+		win32: { sep: '\\' },
+		posix: { sep: '/' },
+	};
+	/* c8 ignore stop */
+	exports.sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep;
+	exports.minimatch.sep = exports.sep;
+	exports.GLOBSTAR = Symbol('globstar **');
+	exports.minimatch.GLOBSTAR = exports.GLOBSTAR;
+	// any single thing other than /
+	// don't need to escape / when using new RegExp()
+	const qmark = '[^/]';
+	// * => any number of characters
+	const star = qmark + '*?';
+	// ** when dots are allowed.  Anything goes, except .. and .
+	// not (^ or / followed by one or two dots followed by $ or /),
+	// followed by anything, any number of times.
+	const twoStarDot = '(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?';
+	// not a ^ or / followed by a dot,
+	// followed by anything, any number of times.
+	const twoStarNoDot = '(?:(?!(?:\\/|^)\\.).)*?';
+	const filter = (pattern, options = {}) => (p) => (0, exports.minimatch)(p, pattern, options);
+	exports.filter = filter;
+	exports.minimatch.filter = exports.filter;
+	const ext = (a, b = {}) => Object.assign({}, a, b);
+	const defaults = (def) => {
+		if (!def || typeof def !== 'object' || !Object.keys(def).length) {
+			return exports.minimatch;
+		}
+		const orig = exports.minimatch;
+		const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));
+		return Object.assign(m, {
+			Minimatch: class Minimatch extends orig.Minimatch {
+				constructor(pattern, options = {}) {
+					super(pattern, ext(def, options));
+				}
+				static defaults(options) {
+					return orig.defaults(ext(def, options)).Minimatch;
+				}
+			},
+			AST: class AST extends orig.AST {
+				/* c8 ignore start */
+				constructor(type, parent, options = {}) {
+					super(type, parent, ext(def, options));
+				}
+				/* c8 ignore stop */
+				static fromGlob(pattern, options = {}) {
+					return orig.AST.fromGlob(pattern, ext(def, options));
+				}
+			},
+			unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),
+			escape: (s, options = {}) => orig.escape(s, ext(def, options)),
+			filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),
+			defaults: (options) => orig.defaults(ext(def, options)),
+			makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),
+			braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),
+			match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),
+			sep: orig.sep,
+			GLOBSTAR: exports.GLOBSTAR,
+		});
+	};
+	exports.defaults = defaults;
+	exports.minimatch.defaults = exports.defaults;
+	// Brace expansion:
+	// a{b,c}d -> abd acd
+	// a{b,}c -> abc ac
+	// a{0..3}d -> a0d a1d a2d a3d
+	// a{b,c{d,e}f}g -> abg acdfg acefg
+	// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
+	//
+	// Invalid sets are not expanded.
+	// a{2..}b -> a{2..}b
+	// a{b}c -> a{b}c
+	const braceExpand = (pattern, options = {}) => {
+		(0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
+		// Thanks to Yeting Li <https://github.com/yetingli> for
+		// improving this regexp to avoid a ReDOS vulnerability.
+		if (options.nobrace || !/\{(?:(?!\{).)*\}/.test(pattern)) {
+			// shortcut. no need to expand.
+			return [pattern];
+		}
+		return (0, brace_expansion_1.default)(pattern);
+	};
+	exports.braceExpand = braceExpand;
+	exports.minimatch.braceExpand = exports.braceExpand;
+	// parse a component of the expanded set.
+	// At this point, no pattern may contain "/" in it
+	// so we're going to return a 2d array, where each entry is the full
+	// pattern, split on '/', and then turned into a regular expression.
+	// A regexp is made at the end which joins each array with an
+	// escaped /, and another full one which joins each regexp with |.
+	//
+	// Following the lead of Bash 4.1, note that "**" only has special meaning
+	// when it is the *only* thing in a path portion.  Otherwise, any series
+	// of * is equivalent to a single *.  Globstar behavior is enabled by
+	// default, and can be disabled by setting options.noglobstar.
+	const makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();
+	exports.makeRe = makeRe;
+	exports.minimatch.makeRe = exports.makeRe;
+	const match = (list, pattern, options = {}) => {
+		const mm = new Minimatch(pattern, options);
+		list = list.filter(f => mm.match(f));
+		if (mm.options.nonull && !list.length) {
+			list.push(pattern);
+		}
+		return list;
+	};
+	exports.match = match;
+	exports.minimatch.match = exports.match;
+	// replace stuff like \* with *
+	const globMagic = /[?*]|[+@!]\(.*?\)|\[|\]/;
+	const regExpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
+	class Minimatch {
+		options;
+		set;
+		pattern;
+		windowsPathsNoEscape;
+		nonegate;
+		negate;
+		comment;
+		empty;
+		preserveMultipleSlashes;
+		partial;
+		globSet;
+		globParts;
+		nocase;
+		isWindows;
+		platform;
+		windowsNoMagicRoot;
+		regexp;
+		constructor(pattern, options = {}) {
+			(0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
+			options = options || {};
+			this.options = options;
+			this.pattern = pattern;
+			this.platform = options.platform || defaultPlatform;
+			this.isWindows = this.platform === 'win32';
+			this.windowsPathsNoEscape =
+				!!options.windowsPathsNoEscape || options.allowWindowsEscape === false;
+			if (this.windowsPathsNoEscape) {
+				this.pattern = this.pattern.replace(/\\/g, '/');
+			}
+			this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;
+			this.regexp = null;
+			this.negate = false;
+			this.nonegate = !!options.nonegate;
+			this.comment = false;
+			this.empty = false;
+			this.partial = !!options.partial;
+			this.nocase = !!this.options.nocase;
+			this.windowsNoMagicRoot =
+				options.windowsNoMagicRoot !== undefined
+					? options.windowsNoMagicRoot
+					: !!(this.isWindows && this.nocase);
+			this.globSet = [];
+			this.globParts = [];
+			this.set = [];
+			// make the set of regexps etc.
+			this.make();
+		}
+		hasMagic() {
+			if (this.options.magicalBraces && this.set.length > 1) {
+				return true;
+			}
+			for (const pattern of this.set) {
+				for (const part of pattern) {
+					if (typeof part !== 'string')
+						return true;
+				}
+			}
+			return false;
+		}
+		debug(..._) { }
+		make() {
+			const pattern = this.pattern;
+			const options = this.options;
+			// empty patterns and comments match nothing.
+			if (!options.nocomment && pattern.charAt(0) === '#') {
+				this.comment = true;
+				return;
+			}
+			if (!pattern) {
+				this.empty = true;
+				return;
+			}
+			// step 1: figure out negation, etc.
+			this.parseNegate();
+			// step 2: expand braces
+			this.globSet = [...new Set(this.braceExpand())];
+			if (options.debug) {
+				this.debug = (...args) => console.error(...args);
+			}
+			this.debug(this.pattern, this.globSet);
+			// step 3: now we have a set, so turn each one into a series of
+			// path-portion matching patterns.
+			// These will be regexps, except in the case of "**", which is
+			// set to the GLOBSTAR object for globstar behavior,
+			// and will not contain any / characters
+			//
+			// First, we preprocess to make the glob pattern sets a bit simpler
+			// and deduped.  There are some perf-killing patterns that can cause
+			// problems with a glob walk, but we can simplify them down a bit.
+			const rawGlobParts = this.globSet.map(s => this.slashSplit(s));
+			this.globParts = this.preprocess(rawGlobParts);
+			this.debug(this.pattern, this.globParts);
+			// glob --> regexps
+			let set = this.globParts.map((s, _, __) => {
+				if (this.isWindows && this.windowsNoMagicRoot) {
+					// check if it's a drive or unc path.
+					const isUNC = s[0] === '' &&
+						s[1] === '' &&
+						(s[2] === '?' || !globMagic.test(s[2])) &&
+						!globMagic.test(s[3]);
+					const isDrive = /^[a-z]:/i.test(s[0]);
+					if (isUNC) {
+						return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))];
+					}
+					else if (isDrive) {
+						return [s[0], ...s.slice(1).map(ss => this.parse(ss))];
+					}
+				}
+				return s.map(ss => this.parse(ss));
+			});
+			this.debug(this.pattern, set);
+			// filter out everything that didn't compile properly.
+			this.set = set.filter(s => s.indexOf(false) === -1);
+			// do not treat the ? in UNC paths as magic
+			if (this.isWindows) {
+				for (let i = 0; i < this.set.length; i++) {
+					const p = this.set[i];
+					if (p[0] === '' &&
+						p[1] === '' &&
+						this.globParts[i][2] === '?' &&
+						typeof p[3] === 'string' &&
+						/^[a-z]:$/i.test(p[3])) {
+						p[2] = '?';
+					}
+				}
+			}
+			this.debug(this.pattern, this.set);
+		}
+		// various transforms to equivalent pattern sets that are
+		// faster to process in a filesystem walk.  The goal is to
+		// eliminate what we can, and push all ** patterns as far
+		// to the right as possible, even if it increases the number
+		// of patterns that we have to process.
+		preprocess(globParts) {
+			// if we're not in globstar mode, then turn all ** into *
+			if (this.options.noglobstar) {
+				for (let i = 0; i < globParts.length; i++) {
+					for (let j = 0; j < globParts[i].length; j++) {
+						if (globParts[i][j] === '**') {
+							globParts[i][j] = '*';
+						}
+					}
+				}
+			}
+			const { optimizationLevel = 1 } = this.options;
+			if (optimizationLevel >= 2) {
+				// aggressive optimization for the purpose of fs walking
+				globParts = this.firstPhasePreProcess(globParts);
+				globParts = this.secondPhasePreProcess(globParts);
+			}
+			else if (optimizationLevel >= 1) {
+				// just basic optimizations to remove some .. parts
+				globParts = this.levelOneOptimize(globParts);
+			}
+			else {
+				globParts = this.adjascentGlobstarOptimize(globParts);
+			}
+			return globParts;
+		}
+		// just get rid of adjascent ** portions
+		adjascentGlobstarOptimize(globParts) {
+			return globParts.map(parts => {
+				let gs = -1;
+				while (-1 !== (gs = parts.indexOf('**', gs + 1))) {
+					let i = gs;
+					while (parts[i + 1] === '**') {
+						i++;
+					}
+					if (i !== gs) {
+						parts.splice(gs, i - gs);
+					}
+				}
+				return parts;
+			});
+		}
+		// get rid of adjascent ** and resolve .. portions
+		levelOneOptimize(globParts) {
+			return globParts.map(parts => {
+				parts = parts.reduce((set, part) => {
+					const prev = set[set.length - 1];
+					if (part === '**' && prev === '**') {
+						return set;
+					}
+					if (part === '..') {
+						if (prev && prev !== '..' && prev !== '.' && prev !== '**') {
+							set.pop();
+							return set;
+						}
+					}
+					set.push(part);
+					return set;
+				}, []);
+				return parts.length === 0 ? [''] : parts;
+			});
+		}
+		levelTwoFileOptimize(parts) {
+			if (!Array.isArray(parts)) {
+				parts = this.slashSplit(parts);
+			}
+			let didSomething = false;
+			do {
+				didSomething = false;
+				// <pre>/<e>/<rest> -> <pre>/<rest>
+				if (!this.preserveMultipleSlashes) {
+					for (let i = 1; i < parts.length - 1; i++) {
+						const p = parts[i];
+						// don't squeeze out UNC patterns
+						if (i === 1 && p === '' && parts[0] === '')
+							continue;
+						if (p === '.' || p === '') {
+							didSomething = true;
+							parts.splice(i, 1);
+							i--;
+						}
+					}
+					if (parts[0] === '.' &&
+						parts.length === 2 &&
+						(parts[1] === '.' || parts[1] === '')) {
+						didSomething = true;
+						parts.pop();
+					}
+				}
+				// <pre>/<p>/../<rest> -> <pre>/<rest>
+				let dd = 0;
+				while (-1 !== (dd = parts.indexOf('..', dd + 1))) {
+					const p = parts[dd - 1];
+					if (p && p !== '.' && p !== '..' && p !== '**') {
+						didSomething = true;
+						parts.splice(dd - 1, 2);
+						dd -= 2;
+					}
+				}
+			} while (didSomething);
+			return parts.length === 0 ? [''] : parts;
+		}
+		// First phase: single-pattern processing
+		// <pre> is 1 or more portions
+		// <rest> is 1 or more portions
+		// <p> is any portion other than ., .., '', or **
+		// <e> is . or ''
+		//
+		// **/.. is *brutal* for filesystem walking performance, because
+		// it effectively resets the recursive walk each time it occurs,
+		// and ** cannot be reduced out by a .. pattern part like a regexp
+		// or most strings (other than .., ., and '') can be.
+		//
+		// <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}
+		// <pre>/<e>/<rest> -> <pre>/<rest>
+		// <pre>/<p>/../<rest> -> <pre>/<rest>
+		// **/**/<rest> -> **/<rest>
+		//
+		// **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow
+		// this WOULD be allowed if ** did follow symlinks, or * didn't
+		firstPhasePreProcess(globParts) {
+			let didSomething = false;
+			do {
+				didSomething = false;
+				// <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}
+				for (let parts of globParts) {
+					let gs = -1;
+					while (-1 !== (gs = parts.indexOf('**', gs + 1))) {
+						let gss = gs;
+						while (parts[gss + 1] === '**') {
+							// <pre>/**/**/<rest> -> <pre>/**/<rest>
+							gss++;
+						}
+						// eg, if gs is 2 and gss is 4, that means we have 3 **
+						// parts, and can remove 2 of them.
+						if (gss > gs) {
+							parts.splice(gs + 1, gss - gs);
+						}
+						let next = parts[gs + 1];
+						const p = parts[gs + 2];
+						const p2 = parts[gs + 3];
+						if (next !== '..')
+							continue;
+						if (!p ||
+							p === '.' ||
+							p === '..' ||
+							!p2 ||
+							p2 === '.' ||
+							p2 === '..') {
+							continue;
+						}
+						didSomething = true;
+						// edit parts in place, and push the new one
+						parts.splice(gs, 1);
+						const other = parts.slice(0);
+						other[gs] = '**';
+						globParts.push(other);
+						gs--;
+					}
+					// <pre>/<e>/<rest> -> <pre>/<rest>
+					if (!this.preserveMultipleSlashes) {
+						for (let i = 1; i < parts.length - 1; i++) {
+							const p = parts[i];
+							// don't squeeze out UNC patterns
+							if (i === 1 && p === '' && parts[0] === '')
+								continue;
+							if (p === '.' || p === '') {
+								didSomething = true;
+								parts.splice(i, 1);
+								i--;
+							}
+						}
+						if (parts[0] === '.' &&
+							parts.length === 2 &&
+							(parts[1] === '.' || parts[1] === '')) {
+							didSomething = true;
+							parts.pop();
+						}
+					}
+					// <pre>/<p>/../<rest> -> <pre>/<rest>
+					let dd = 0;
+					while (-1 !== (dd = parts.indexOf('..', dd + 1))) {
+						const p = parts[dd - 1];
+						if (p && p !== '.' && p !== '..' && p !== '**') {
+							didSomething = true;
+							const needDot = dd === 1 && parts[dd + 1] === '**';
+							const splin = needDot ? ['.'] : [];
+							parts.splice(dd - 1, 2, ...splin);
+							if (parts.length === 0)
+								parts.push('');
+							dd -= 2;
+						}
+					}
+				}
+			} while (didSomething);
+			return globParts;
+		}
+		// second phase: multi-pattern dedupes
+		// {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>
+		// {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>
+		// {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>
+		//
+		// {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>
+		// ^-- not valid because ** doens't follow symlinks
+		secondPhasePreProcess(globParts) {
+			for (let i = 0; i < globParts.length - 1; i++) {
+				for (let j = i + 1; j < globParts.length; j++) {
+					const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);
+					if (!matched)
+						continue;
+					globParts[i] = matched;
+					globParts[j] = [];
+				}
+			}
+			return globParts.filter(gs => gs.length);
+		}
+		partsMatch(a, b, emptyGSMatch = false) {
+			let ai = 0;
+			let bi = 0;
+			let result = [];
+			let which = '';
+			while (ai < a.length && bi < b.length) {
+				if (a[ai] === b[bi]) {
+					result.push(which === 'b' ? b[bi] : a[ai]);
+					ai++;
+					bi++;
+				}
+				else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {
+					result.push(a[ai]);
+					ai++;
+				}
+				else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {
+					result.push(b[bi]);
+					bi++;
+				}
+				else if (a[ai] === '*' &&
+					b[bi] &&
+					(this.options.dot || !b[bi].startsWith('.')) &&
+					b[bi] !== '**') {
+					if (which === 'b')
+						return false;
+					which = 'a';
+					result.push(a[ai]);
+					ai++;
+					bi++;
+				}
+				else if (b[bi] === '*' &&
+					a[ai] &&
+					(this.options.dot || !a[ai].startsWith('.')) &&
+					a[ai] !== '**') {
+					if (which === 'a')
+						return false;
+					which = 'b';
+					result.push(b[bi]);
+					ai++;
+					bi++;
+				}
+				else {
+					return false;
+				}
+			}
+			// if we fall out of the loop, it means they two are identical
+			// as long as their lengths match
+			return a.length === b.length && result;
+		}
+		parseNegate() {
+			if (this.nonegate)
+				return;
+			const pattern = this.pattern;
+			let negate = false;
+			let negateOffset = 0;
+			for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {
+				negate = !negate;
+				negateOffset++;
+			}
+			if (negateOffset)
+				this.pattern = pattern.slice(negateOffset);
+			this.negate = negate;
+		}
+		// set partial to true to test if, for example,
+		// "/a/b" matches the start of "/*/b/*/d"
+		// Partial means, if you run out of file before you run
+		// out of pattern, then that's fine, as long as all
+		// the parts match.
+		matchOne(file, pattern, partial = false) {
+			const options = this.options;
+			// UNC paths like //?/X:/... can match X:/... and vice versa
+			// Drive letters in absolute drive or unc paths are always compared
+			// case-insensitively.
+			if (this.isWindows) {
+				const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0]);
+				const fileUNC = !fileDrive &&
+					file[0] === '' &&
+					file[1] === '' &&
+					file[2] === '?' &&
+					/^[a-z]:$/i.test(file[3]);
+				const patternDrive = typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0]);
+				const patternUNC = !patternDrive &&
+					pattern[0] === '' &&
+					pattern[1] === '' &&
+					pattern[2] === '?' &&
+					typeof pattern[3] === 'string' &&
+					/^[a-z]:$/i.test(pattern[3]);
+				const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;
+				const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;
+				if (typeof fdi === 'number' && typeof pdi === 'number') {
+					const [fd, pd] = [file[fdi], pattern[pdi]];
+					if (fd.toLowerCase() === pd.toLowerCase()) {
+						pattern[pdi] = fd;
+						if (pdi > fdi) {
+							pattern = pattern.slice(pdi);
+						}
+						else if (fdi > pdi) {
+							file = file.slice(fdi);
+						}
+					}
+				}
+			}
+			// resolve and reduce . and .. portions in the file as well.
+			// dont' need to do the second phase, because it's only one string[]
+			const { optimizationLevel = 1 } = this.options;
+			if (optimizationLevel >= 2) {
+				file = this.levelTwoFileOptimize(file);
+			}
+			this.debug('matchOne', this, { file, pattern });
+			this.debug('matchOne', file.length, pattern.length);
+			for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {
+				this.debug('matchOne loop');
+				var p = pattern[pi];
+				var f = file[fi];
+				this.debug(pattern, p, f);
+				// should be impossible.
+				// some invalid regexp stuff in the set.
+				/* c8 ignore start */
+				if (p === false) {
+					return false;
+				}
+				/* c8 ignore stop */
+				if (p === exports.GLOBSTAR) {
+					this.debug('GLOBSTAR', [pattern, p, f]);
+					// "**"
+					// a/**/b/**/c would match the following:
+					// a/b/x/y/z/c
+					// a/x/y/z/b/c
+					// a/b/x/b/x/c
+					// a/b/c
+					// To do this, take the rest of the pattern after
+					// the **, and see if it would match the file remainder.
+					// If so, return success.
+					// If not, the ** "swallows" a segment, and try again.
+					// This is recursively awful.
+					//
+					// a/**/b/**/c matching a/b/x/y/z/c
+					// - a matches a
+					// - doublestar
+					//   - matchOne(b/x/y/z/c, b/**/c)
+					//     - b matches b
+					//     - doublestar
+					//       - matchOne(x/y/z/c, c) -> no
+					//       - matchOne(y/z/c, c) -> no
+					//       - matchOne(z/c, c) -> no
+					//       - matchOne(c, c) yes, hit
+					var fr = fi;
+					var pr = pi + 1;
+					if (pr === pl) {
+						this.debug('** at the end');
+						// a ** at the end will just swallow the rest.
+						// We have found a match.
+						// however, it will not swallow /.x, unless
+						// options.dot is set.
+						// . and .. are *never* matched by **, for explosively
+						// exponential reasons.
+						for (; fi < fl; fi++) {
+							if (file[fi] === '.' ||
+								file[fi] === '..' ||
+								(!options.dot && file[fi].charAt(0) === '.'))
+								return false;
+						}
+						return true;
+					}
+					// ok, let's see if we can swallow whatever we can.
+					while (fr < fl) {
+						var swallowee = file[fr];
+						this.debug('\nglobstar while', file, fr, pattern, pr, swallowee);
+						// XXX remove this slice.  Just pass the start index.
+						if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
+							this.debug('globstar found match!', fr, fl, swallowee);
+							// found a match.
+							return true;
+						}
+						else {
+							// can't swallow "." or ".." ever.
+							// can only swallow ".foo" when explicitly asked.
+							if (swallowee === '.' ||
+								swallowee === '..' ||
+								(!options.dot && swallowee.charAt(0) === '.')) {
+								this.debug('dot detected!', file, fr, pattern, pr);
+								break;
+							}
+							// ** swallows a segment, and continue.
+							this.debug('globstar swallow a segment, and continue');
+							fr++;
+						}
+					}
+					// no match was found.
+					// However, in partial mode, we can't say this is necessarily over.
+					/* c8 ignore start */
+					if (partial) {
+						// ran out of file
+						this.debug('\n>>> no match, partial?', file, fr, pattern, pr);
+						if (fr === fl) {
+							return true;
+						}
+					}
+					/* c8 ignore stop */
+					return false;
+				}
+				// something other than **
+				// non-magic patterns just have to match exactly
+				// patterns with magic have been turned into regexps.
+				let hit;
+				if (typeof p === 'string') {
+					hit = f === p;
+					this.debug('string match', p, f, hit);
+				}
+				else {
+					hit = p.test(f);
+					this.debug('pattern match', p, f, hit);
+				}
+				if (!hit)
+					return false;
+			}
+			// Note: ending in / means that we'll get a final ""
+			// at the end of the pattern.  This can only match a
+			// corresponding "" at the end of the file.
+			// If the file ends in /, then it can only match a
+			// a pattern that ends in /, unless the pattern just
+			// doesn't have any more for it. But, a/b/ should *not*
+			// match "a/b/*", even though "" matches against the
+			// [^/]*? pattern, except in partial mode, where it might
+			// simply not be reached yet.
+			// However, a/b/ should still satisfy a/*
+			// now either we fell off the end of the pattern, or we're done.
+			if (fi === fl && pi === pl) {
+				// ran out of pattern and filename at the same time.
+				// an exact hit!
+				return true;
+			}
+			else if (fi === fl) {
+				// ran out of file, but still had pattern left.
+				// this is ok if we're doing the match as part of
+				// a glob fs traversal.
+				return partial;
+			}
+			else if (pi === pl) {
+				// ran out of pattern, still have file left.
+				// this is only acceptable if we're on the very last
+				// empty segment of a file with a trailing slash.
+				// a/* should match a/b/
+				return fi === fl - 1 && file[fi] === '';
+				/* c8 ignore start */
+			}
+			else {
+				// should be unreachable.
+				throw new Error('wtf?');
+			}
+			/* c8 ignore stop */
+		}
+		braceExpand() {
+			return (0, exports.braceExpand)(this.pattern, this.options);
+		}
+		parse(pattern) {
+			(0, assert_valid_pattern_js_1.assertValidPattern)(pattern);
+			const options = this.options;
+			// shortcuts
+			if (pattern === '**')
+				return exports.GLOBSTAR;
+			if (pattern === '')
+				return '';
+			// far and away, the most common glob pattern parts are
+			// *, *.*, and *.<ext>  Add a fast check method for those.
+			let m;
+			let fastTest = null;
+			if ((m = pattern.match(starRE))) {
+				fastTest = options.dot ? starTestDot : starTest;
+			}
+			else if ((m = pattern.match(starDotExtRE))) {
+				fastTest = (options.nocase
+					? options.dot
+						? starDotExtTestNocaseDot
+						: starDotExtTestNocase
+					: options.dot
+						? starDotExtTestDot
+						: starDotExtTest)(m[1]);
+			}
+			else if ((m = pattern.match(qmarksRE))) {
+				fastTest = (options.nocase
+					? options.dot
+						? qmarksTestNocaseDot
+						: qmarksTestNocase
+					: options.dot
+						? qmarksTestDot
+						: qmarksTest)(m);
+			}
+			else if ((m = pattern.match(starDotStarRE))) {
+				fastTest = options.dot ? starDotStarTestDot : starDotStarTest;
+			}
+			else if ((m = pattern.match(dotStarRE))) {
+				fastTest = dotStarTest;
+			}
+			const re = ast_js_1.AST.fromGlob(pattern, this.options).toMMPattern();
+			return fastTest ? Object.assign(re, { test: fastTest }) : re;
+		}
+		makeRe() {
+			if (this.regexp || this.regexp === false)
+				return this.regexp;
+			// at this point, this.set is a 2d array of partial
+			// pattern strings, or "**".
+			//
+			// It's better to use .match().  This function shouldn't
+			// be used, really, but it's pretty convenient sometimes,
+			// when you just want to work with a regex.
+			const set = this.set;
+			if (!set.length) {
+				this.regexp = false;
+				return this.regexp;
+			}
+			const options = this.options;
+			const twoStar = options.noglobstar
+				? star
+				: options.dot
+					? twoStarDot
+					: twoStarNoDot;
+			const flags = new Set(options.nocase ? ['i'] : []);
+			// regexpify non-globstar patterns
+			// if ** is only item, then we just do one twoStar
+			// if ** is first, and there are more, prepend (\/|twoStar\/)? to next
+			// if ** is last, append (\/twoStar|) to previous
+			// if ** is in the middle, append (\/|\/twoStar\/) to previous
+			// then filter out GLOBSTAR symbols
+			let re = set
+				.map(pattern => {
+				const pp = pattern.map(p => {
+					if (p instanceof RegExp) {
+						for (const f of p.flags.split(''))
+							flags.add(f);
+					}
+					return typeof p === 'string'
+						? regExpEscape(p)
+						: p === exports.GLOBSTAR
+							? exports.GLOBSTAR
+							: p._src;
+				});
+				pp.forEach((p, i) => {
+					const next = pp[i + 1];
+					const prev = pp[i - 1];
+					if (p !== exports.GLOBSTAR || prev === exports.GLOBSTAR) {
+						return;
+					}
+					if (prev === undefined) {
+						if (next !== undefined && next !== exports.GLOBSTAR) {
+							pp[i + 1] = '(?:\\/|' + twoStar + '\\/)?' + next;
+						}
+						else {
+							pp[i] = twoStar;
+						}
+					}
+					else if (next === undefined) {
+						pp[i - 1] = prev + '(?:\\/|' + twoStar + ')?';
+					}
+					else if (next !== exports.GLOBSTAR) {
+						pp[i - 1] = prev + '(?:\\/|\\/' + twoStar + '\\/)' + next;
+						pp[i + 1] = exports.GLOBSTAR;
+					}
+				});
+				return pp.filter(p => p !== exports.GLOBSTAR).join('/');
+			})
+				.join('|');
+			// need to wrap in parens if we had more than one thing with |,
+			// otherwise only the first will be anchored to ^ and the last to $
+			const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', ''];
+			// must match entire pattern
+			// ending in a * or ** will make it less strict.
+			re = '^' + open + re + close + '$';
+			// can match anything, as long as it's not this.
+			if (this.negate)
+				re = '^(?!' + re + ').+$';
+			try {
+				this.regexp = new RegExp(re, [...flags].join(''));
+				/* c8 ignore start */
+			}
+			catch (ex) {
+				// should be impossible
+				this.regexp = false;
+			}
+			/* c8 ignore stop */
+			return this.regexp;
+		}
+		slashSplit(p) {
+			// if p starts with // on windows, we preserve that
+			// so that UNC paths aren't broken.  Otherwise, any number of
+			// / characters are coalesced into one, unless
+			// preserveMultipleSlashes is set to true.
+			if (this.preserveMultipleSlashes) {
+				return p.split('/');
+			}
+			else if (this.isWindows && /^\/\/[^\/]+/.test(p)) {
+				// add an extra '' for the one we lose
+				return ['', ...p.split(/\/+/)];
+			}
+			else {
+				return p.split(/\/+/);
+			}
+		}
+		match(f, partial = this.partial) {
+			this.debug('match', f, this.pattern);
+			// short-circuit in the case of busted things.
+			// comments, etc.
+			if (this.comment) {
+				return false;
+			}
+			if (this.empty) {
+				return f === '';
+			}
+			if (f === '/' && partial) {
+				return true;
+			}
+			const options = this.options;
+			// windows: need to use /, not \
+			if (this.isWindows) {
+				f = f.split('\\').join('/');
+			}
+			// treat the test path as a set of pathparts.
+			const ff = this.slashSplit(f);
+			this.debug(this.pattern, 'split', ff);
+			// just ONE of the pattern sets in this.set needs to match
+			// in order for it to be valid.  If negating, then just one
+			// match means that we have failed.
+			// Either way, return on the first hit.
+			const set = this.set;
+			this.debug(this.pattern, 'set', set);
+			// Find the basename of the path by looking for the last non-empty segment
+			let filename = ff[ff.length - 1];
+			if (!filename) {
+				for (let i = ff.length - 2; !filename && i >= 0; i--) {
+					filename = ff[i];
+				}
+			}
+			for (let i = 0; i < set.length; i++) {
+				const pattern = set[i];
+				let file = ff;
+				if (options.matchBase && pattern.length === 1) {
+					file = [filename];
+				}
+				const hit = this.matchOne(file, pattern, partial);
+				if (hit) {
+					if (options.flipNegate) {
+						return true;
+					}
+					return !this.negate;
+				}
+			}
+			// didn't get any hits.  this is success if it's a negative
+			// pattern, failure otherwise.
+			if (options.flipNegate) {
+				return false;
+			}
+			return this.negate;
+		}
+		static defaults(def) {
+			return exports.minimatch.defaults(def).Minimatch;
+		}
+	}
+	exports.Minimatch = Minimatch;
+	/* c8 ignore start */
+	var ast_js_2 = __webpack_require__(10);
+	Object.defineProperty(exports, "AST", ({ enumerable: true, get: function () { return ast_js_2.AST; } }));
+	var escape_js_2 = __webpack_require__(13);
+	Object.defineProperty(exports, "escape", ({ enumerable: true, get: function () { return escape_js_2.escape; } }));
+	var unescape_js_2 = __webpack_require__(12);
+	Object.defineProperty(exports, "unescape", ({ enumerable: true, get: function () { return unescape_js_2.unescape; } }));
+	/* c8 ignore stop */
+	exports.minimatch.AST = ast_js_1.AST;
+	exports.minimatch.Minimatch = Minimatch;
+	exports.minimatch.escape = escape_js_1.escape;
+	exports.minimatch.unescape = unescape_js_1.unescape;
+	//# sourceMappingURL=index.js.map
+
+	/***/ }),
+	/* 7 */
+	/***/ ((module, __unused_webpack_exports, __webpack_require__) => {
+
+	var balanced = __webpack_require__(8);
+
+	module.exports = expandTop;
+
+	var escSlash = '\0SLASH'+Math.random()+'\0';
+	var escOpen = '\0OPEN'+Math.random()+'\0';
+	var escClose = '\0CLOSE'+Math.random()+'\0';
+	var escComma = '\0COMMA'+Math.random()+'\0';
+	var escPeriod = '\0PERIOD'+Math.random()+'\0';
+
+	function numeric(str) {
+	  return parseInt(str, 10) == str
+		? parseInt(str, 10)
+		: str.charCodeAt(0);
+	}
+
+	function escapeBraces(str) {
+	  return str.split('\\\\').join(escSlash)
+				.split('\\{').join(escOpen)
+				.split('\\}').join(escClose)
+				.split('\\,').join(escComma)
+				.split('\\.').join(escPeriod);
+	}
+
+	function unescapeBraces(str) {
+	  return str.split(escSlash).join('\\')
+				.split(escOpen).join('{')
+				.split(escClose).join('}')
+				.split(escComma).join(',')
+				.split(escPeriod).join('.');
+	}
+
+
+	// Basically just str.split(","), but handling cases
+	// where we have nested braced sections, which should be
+	// treated as individual members, like {a,{b,c},d}
+	function parseCommaParts(str) {
+	  if (!str)
+		return [''];
+
+	  var parts = [];
+	  var m = balanced('{', '}', str);
+
+	  if (!m)
+		return str.split(',');
+
+	  var pre = m.pre;
+	  var body = m.body;
+	  var post = m.post;
+	  var p = pre.split(',');
+
+	  p[p.length-1] += '{' + body + '}';
+	  var postParts = parseCommaParts(post);
+	  if (post.length) {
+		p[p.length-1] += postParts.shift();
+		p.push.apply(p, postParts);
+	  }
+
+	  parts.push.apply(parts, p);
+
+	  return parts;
+	}
+
+	function expandTop(str) {
+	  if (!str)
+		return [];
+
+	  // I don't know why Bash 4.3 does this, but it does.
+	  // Anything starting with {} will have the first two bytes preserved
+	  // but *only* at the top level, so {},a}b will not expand to anything,
+	  // but a{},b}c will be expanded to [a}c,abc].
+	  // One could argue that this is a bug in Bash, but since the goal of
+	  // this module is to match Bash's rules, we escape a leading {}
+	  if (str.substr(0, 2) === '{}') {
+		str = '\\{\\}' + str.substr(2);
+	  }
+
+	  return expand(escapeBraces(str), true).map(unescapeBraces);
+	}
+
+	function embrace(str) {
+	  return '{' + str + '}';
+	}
+	function isPadded(el) {
+	  return /^-?0\d/.test(el);
+	}
+
+	function lte(i, y) {
+	  return i <= y;
+	}
+	function gte(i, y) {
+	  return i >= y;
+	}
+
+	function expand(str, isTop) {
+	  var expansions = [];
+
+	  var m = balanced('{', '}', str);
+	  if (!m) return [str];
+
+	  // no need to expand pre, since it is guaranteed to be free of brace-sets
+	  var pre = m.pre;
+	  var post = m.post.length
+		? expand(m.post, false)
+		: [''];
+
+	  if (/\$$/.test(m.pre)) {
+		for (var k = 0; k < post.length; k++) {
+		  var expansion = pre+ '{' + m.body + '}' + post[k];
+		  expansions.push(expansion);
+		}
+	  } else {
+		var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
+		var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
+		var isSequence = isNumericSequence || isAlphaSequence;
+		var isOptions = m.body.indexOf(',') >= 0;
+		if (!isSequence && !isOptions) {
+		  // {a},b}
+		  if (m.post.match(/,.*\}/)) {
+			str = m.pre + '{' + m.body + escClose + m.post;
+			return expand(str);
+		  }
+		  return [str];
+		}
+
+		var n;
+		if (isSequence) {
+		  n = m.body.split(/\.\./);
+		} else {
+		  n = parseCommaParts(m.body);
+		  if (n.length === 1) {
+			// x{{a,b}}y ==> x{a}y x{b}y
+			n = expand(n[0], false).map(embrace);
+			if (n.length === 1) {
+			  return post.map(function(p) {
+				return m.pre + n[0] + p;
+			  });
+			}
+		  }
+		}
+
+		// at this point, n is the parts, and we know it's not a comma set
+		// with a single entry.
+		var N;
+
+		if (isSequence) {
+		  var x = numeric(n[0]);
+		  var y = numeric(n[1]);
+		  var width = Math.max(n[0].length, n[1].length)
+		  var incr = n.length == 3
+			? Math.abs(numeric(n[2]))
+			: 1;
+		  var test = lte;
+		  var reverse = y < x;
+		  if (reverse) {
+			incr *= -1;
+			test = gte;
+		  }
+		  var pad = n.some(isPadded);
+
+		  N = [];
+
+		  for (var i = x; test(i, y); i += incr) {
+			var c;
+			if (isAlphaSequence) {
+			  c = String.fromCharCode(i);
+			  if (c === '\\')
+				c = '';
+			} else {
+			  c = String(i);
+			  if (pad) {
+				var need = width - c.length;
+				if (need > 0) {
+				  var z = new Array(need + 1).join('0');
+				  if (i < 0)
+					c = '-' + z + c.slice(1);
+				  else
+					c = z + c;
+				}
+			  }
+			}
+			N.push(c);
+		  }
+		} else {
+		  N = [];
+
+		  for (var j = 0; j < n.length; j++) {
+			N.push.apply(N, expand(n[j], false));
+		  }
+		}
+
+		for (var j = 0; j < N.length; j++) {
+		  for (var k = 0; k < post.length; k++) {
+			var expansion = pre + N[j] + post[k];
+			if (!isTop || isSequence || expansion)
+			  expansions.push(expansion);
+		  }
+		}
+	  }
+
+	  return expansions;
+	}
+
+
+
+	/***/ }),
+	/* 8 */
+	/***/ ((module) => {
+
+	"use strict";
+
+	module.exports = balanced;
+	function balanced(a, b, str) {
+	  if (a instanceof RegExp) a = maybeMatch(a, str);
+	  if (b instanceof RegExp) b = maybeMatch(b, str);
+
+	  var r = range(a, b, str);
+
+	  return r && {
+		start: r[0],
+		end: r[1],
+		pre: str.slice(0, r[0]),
+		body: str.slice(r[0] + a.length, r[1]),
+		post: str.slice(r[1] + b.length)
+	  };
+	}
+
+	function maybeMatch(reg, str) {
+	  var m = str.match(reg);
+	  return m ? m[0] : null;
+	}
+
+	balanced.range = range;
+	function range(a, b, str) {
+	  var begs, beg, left, right, result;
+	  var ai = str.indexOf(a);
+	  var bi = str.indexOf(b, ai + 1);
+	  var i = ai;
+
+	  if (ai >= 0 && bi > 0) {
+		if(a===b) {
+		  return [ai, bi];
+		}
+		begs = [];
+		left = str.length;
+
+		while (i >= 0 && !result) {
+		  if (i == ai) {
+			begs.push(i);
+			ai = str.indexOf(a, i + 1);
+		  } else if (begs.length == 1) {
+			result = [ begs.pop(), bi ];
+		  } else {
+			beg = begs.pop();
+			if (beg < left) {
+			  left = beg;
+			  right = bi;
+			}
+
+			bi = str.indexOf(b, i + 1);
+		  }
+
+		  i = ai < bi && ai >= 0 ? ai : bi;
+		}
+
+		if (begs.length) {
+		  result = [ left, right ];
+		}
+	  }
+
+	  return result;
+	}
+
+
+	/***/ }),
+	/* 9 */
+	/***/ ((__unused_webpack_module, exports) => {
+
+	"use strict";
+
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.assertValidPattern = void 0;
+	const MAX_PATTERN_LENGTH = 1024 * 64;
+	const assertValidPattern = (pattern) => {
+		if (typeof pattern !== 'string') {
+			throw new TypeError('invalid pattern');
+		}
+		if (pattern.length > MAX_PATTERN_LENGTH) {
+			throw new TypeError('pattern is too long');
+		}
+	};
+	exports.assertValidPattern = assertValidPattern;
+	//# sourceMappingURL=assert-valid-pattern.js.map
+
+	/***/ }),
+	/* 10 */
+	/***/ ((__unused_webpack_module, exports, __webpack_require__) => {
+
+	"use strict";
+
+	// parse a single path portion
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.AST = void 0;
+	const brace_expressions_js_1 = __webpack_require__(11);
+	const unescape_js_1 = __webpack_require__(12);
+	const types = new Set(['!', '?', '+', '*', '@']);
+	const isExtglobType = (c) => types.has(c);
+	// Patterns that get prepended to bind to the start of either the
+	// entire string, or just a single path portion, to prevent dots
+	// and/or traversal patterns, when needed.
+	// Exts don't need the ^ or / bit, because the root binds that already.
+	const startNoTraversal = '(?!(?:^|/)\\.\\.?(?:$|/))';
+	const startNoDot = '(?!\\.)';
+	// characters that indicate a start of pattern needs the "no dots" bit,
+	// because a dot *might* be matched. ( is not in the list, because in
+	// the case of a child extglob, it will handle the prevention itself.
+	const addPatternStart = new Set(['[', '.']);
+	// cases where traversal is A-OK, no dot prevention needed
+	const justDots = new Set(['..', '.']);
+	const reSpecials = new Set('().*{}+?[]^$\\!');
+	const regExpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
+	// any single thing other than /
+	const qmark = '[^/]';
+	// * => any number of characters
+	const star = qmark + '*?';
+	// use + when we need to ensure that *something* matches, because the * is
+	// the only thing in the path portion.
+	const starNoEmpty = qmark + '+?';
+	// remove the \ chars that we added if we end up doing a nonmagic compare
+	// const deslash = (s: string) => s.replace(/\\(.)/g, '$1')
+	class AST {
+		type;
+		#root;
+		#hasMagic;
+		#uflag = false;
+		#parts = [];
+		#parent;
+		#parentIndex;
+		#negs;
+		#filledNegs = false;
+		#options;
+		#toString;
+		// set to true if it's an extglob with no children
+		// (which really means one child of '')
+		#emptyExt = false;
+		constructor(type, parent, options = {}) {
+			this.type = type;
+			// extglobs are inherently magical
+			if (type)
+				this.#hasMagic = true;
+			this.#parent = parent;
+			this.#root = this.#parent ? this.#parent.#root : this;
+			this.#options = this.#root === this ? options : this.#root.#options;
+			this.#negs = this.#root === this ? [] : this.#root.#negs;
+			if (type === '!' && !this.#root.#filledNegs)
+				this.#negs.push(this);
+			this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;
+		}
+		get hasMagic() {
+			/* c8 ignore start */
+			if (this.#hasMagic !== undefined)
+				return this.#hasMagic;
+			/* c8 ignore stop */
+			for (const p of this.#parts) {
+				if (typeof p === 'string')
+					continue;
+				if (p.type || p.hasMagic)
+					return (this.#hasMagic = true);
+			}
+			// note: will be undefined until we generate the regexp src and find out
+			return this.#hasMagic;
+		}
+		// reconstructs the pattern
+		toString() {
+			if (this.#toString !== undefined)
+				return this.#toString;
+			if (!this.type) {
+				return (this.#toString = this.#parts.map(p => String(p)).join(''));
+			}
+			else {
+				return (this.#toString =
+					this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')');
+			}
+		}
+		#fillNegs() {
+			/* c8 ignore start */
+			if (this !== this.#root)
+				throw new Error('should only call on root');
+			if (this.#filledNegs)
+				return this;
+			/* c8 ignore stop */
+			// call toString() once to fill this out
+			this.toString();
+			this.#filledNegs = true;
+			let n;
+			while ((n = this.#negs.pop())) {
+				if (n.type !== '!')
+					continue;
+				// walk up the tree, appending everthing that comes AFTER parentIndex
+				let p = n;
+				let pp = p.#parent;
+				while (pp) {
+					for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {
+						for (const part of n.#parts) {
+							/* c8 ignore start */
+							if (typeof part === 'string') {
+								throw new Error('string part in extglob AST??');
+							}
+							/* c8 ignore stop */
+							part.copyIn(pp.#parts[i]);
+						}
+					}
+					p = pp;
+					pp = p.#parent;
+				}
+			}
+			return this;
+		}
+		push(...parts) {
+			for (const p of parts) {
+				if (p === '')
+					continue;
+				/* c8 ignore start */
+				if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {
+					throw new Error('invalid part: ' + p);
+				}
+				/* c8 ignore stop */
+				this.#parts.push(p);
+			}
+		}
+		toJSON() {
+			const ret = this.type === null
+				? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))
+				: [this.type, ...this.#parts.map(p => p.toJSON())];
+			if (this.isStart() && !this.type)
+				ret.unshift([]);
+			if (this.isEnd() &&
+				(this === this.#root ||
+					(this.#root.#filledNegs && this.#parent?.type === '!'))) {
+				ret.push({});
+			}
+			return ret;
+		}
+		isStart() {
+			if (this.#root === this)
+				return true;
+			// if (this.type) return !!this.#parent?.isStart()
+			if (!this.#parent?.isStart())
+				return false;
+			if (this.#parentIndex === 0)
+				return true;
+			// if everything AHEAD of this is a negation, then it's still the "start"
+			const p = this.#parent;
+			for (let i = 0; i < this.#parentIndex; i++) {
+				const pp = p.#parts[i];
+				if (!(pp instanceof AST && pp.type === '!')) {
+					return false;
+				}
+			}
+			return true;
+		}
+		isEnd() {
+			if (this.#root === this)
+				return true;
+			if (this.#parent?.type === '!')
+				return true;
+			if (!this.#parent?.isEnd())
+				return false;
+			if (!this.type)
+				return this.#parent?.isEnd();
+			// if not root, it'll always have a parent
+			/* c8 ignore start */
+			const pl = this.#parent ? this.#parent.#parts.length : 0;
+			/* c8 ignore stop */
+			return this.#parentIndex === pl - 1;
+		}
+		copyIn(part) {
+			if (typeof part === 'string')
+				this.push(part);
+			else
+				this.push(part.clone(this));
+		}
+		clone(parent) {
+			const c = new AST(this.type, parent);
+			for (const p of this.#parts) {
+				c.copyIn(p);
+			}
+			return c;
+		}
+		static #parseAST(str, ast, pos, opt) {
+			let escaping = false;
+			let inBrace = false;
+			let braceStart = -1;
+			let braceNeg = false;
+			if (ast.type === null) {
+				// outside of a extglob, append until we find a start
+				let i = pos;
+				let acc = '';
+				while (i < str.length) {
+					const c = str.charAt(i++);
+					// still accumulate escapes at this point, but we do ignore
+					// starts that are escaped
+					if (escaping || c === '\\') {
+						escaping = !escaping;
+						acc += c;
+						continue;
+					}
+					if (inBrace) {
+						if (i === braceStart + 1) {
+							if (c === '^' || c === '!') {
+								braceNeg = true;
+							}
+						}
+						else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {
+							inBrace = false;
+						}
+						acc += c;
+						continue;
+					}
+					else if (c === '[') {
+						inBrace = true;
+						braceStart = i;
+						braceNeg = false;
+						acc += c;
+						continue;
+					}
+					if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {
+						ast.push(acc);
+						acc = '';
+						const ext = new AST(c, ast);
+						i = AST.#parseAST(str, ext, i, opt);
+						ast.push(ext);
+						continue;
+					}
+					acc += c;
+				}
+				ast.push(acc);
+				return i;
+			}
+			// some kind of extglob, pos is at the (
+			// find the next | or )
+			let i = pos + 1;
+			let part = new AST(null, ast);
+			const parts = [];
+			let acc = '';
+			while (i < str.length) {
+				const c = str.charAt(i++);
+				// still accumulate escapes at this point, but we do ignore
+				// starts that are escaped
+				if (escaping || c === '\\') {
+					escaping = !escaping;
+					acc += c;
+					continue;
+				}
+				if (inBrace) {
+					if (i === braceStart + 1) {
+						if (c === '^' || c === '!') {
+							braceNeg = true;
+						}
+					}
+					else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {
+						inBrace = false;
+					}
+					acc += c;
+					continue;
+				}
+				else if (c === '[') {
+					inBrace = true;
+					braceStart = i;
+					braceNeg = false;
+					acc += c;
+					continue;
+				}
+				if (isExtglobType(c) && str.charAt(i) === '(') {
+					part.push(acc);
+					acc = '';
+					const ext = new AST(c, part);
+					part.push(ext);
+					i = AST.#parseAST(str, ext, i, opt);
+					continue;
+				}
+				if (c === '|') {
+					part.push(acc);
+					acc = '';
+					parts.push(part);
+					part = new AST(null, ast);
+					continue;
+				}
+				if (c === ')') {
+					if (acc === '' && ast.#parts.length === 0) {
+						ast.#emptyExt = true;
+					}
+					part.push(acc);
+					acc = '';
+					ast.push(...parts, part);
+					return i;
+				}
+				acc += c;
+			}
+			// unfinished extglob
+			// if we got here, it was a malformed extglob! not an extglob, but
+			// maybe something else in there.
+			ast.type = null;
+			ast.#hasMagic = undefined;
+			ast.#parts = [str.substring(pos - 1)];
+			return i;
+		}
+		static fromGlob(pattern, options = {}) {
+			const ast = new AST(null, undefined, options);
+			AST.#parseAST(pattern, ast, 0, options);
+			return ast;
+		}
+		// returns the regular expression if there's magic, or the unescaped
+		// string if not.
+		toMMPattern() {
+			// should only be called on root
+			/* c8 ignore start */
+			if (this !== this.#root)
+				return this.#root.toMMPattern();
+			/* c8 ignore stop */
+			const glob = this.toString();
+			const [re, body, hasMagic, uflag] = this.toRegExpSource();
+			// if we're in nocase mode, and not nocaseMagicOnly, then we do
+			// still need a regular expression if we have to case-insensitively
+			// match capital/lowercase characters.
+			const anyMagic = hasMagic ||
+				this.#hasMagic ||
+				(this.#options.nocase &&
+					!this.#options.nocaseMagicOnly &&
+					glob.toUpperCase() !== glob.toLowerCase());
+			if (!anyMagic) {
+				return body;
+			}
+			const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '');
+			return Object.assign(new RegExp(`^${re}$`, flags), {
+				_src: re,
+				_glob: glob,
+			});
+		}
+		// returns the string match, the regexp source, whether there's magic
+		// in the regexp (so a regular expression is required) and whether or
+		// not the uflag is needed for the regular expression (for posix classes)
+		// TODO: instead of injecting the start/end at this point, just return
+		// the BODY of the regexp, along with the start/end portions suitable
+		// for binding the start/end in either a joined full-path makeRe context
+		// (where we bind to (^|/), or a standalone matchPart context (where
+		// we bind to ^, and not /).  Otherwise slashes get duped!
+		//
+		// In part-matching mode, the start is:
+		// - if not isStart: nothing
+		// - if traversal possible, but not allowed: ^(?!\.\.?$)
+		// - if dots allowed or not possible: ^
+		// - if dots possible and not allowed: ^(?!\.)
+		// end is:
+		// - if not isEnd(): nothing
+		// - else: $
+		//
+		// In full-path matching mode, we put the slash at the START of the
+		// pattern, so start is:
+		// - if first pattern: same as part-matching mode
+		// - if not isStart(): nothing
+		// - if traversal possible, but not allowed: /(?!\.\.?(?:$|/))
+		// - if dots allowed or not possible: /
+		// - if dots possible and not allowed: /(?!\.)
+		// end is:
+		// - if last pattern, same as part-matching mode
+		// - else nothing
+		//
+		// Always put the (?:$|/) on negated tails, though, because that has to be
+		// there to bind the end of the negated pattern portion, and it's easier to
+		// just stick it in now rather than try to inject it later in the middle of
+		// the pattern.
+		//
+		// We can just always return the same end, and leave it up to the caller
+		// to know whether it's going to be used joined or in parts.
+		// And, if the start is adjusted slightly, can do the same there:
+		// - if not isStart: nothing
+		// - if traversal possible, but not allowed: (?:/|^)(?!\.\.?$)
+		// - if dots allowed or not possible: (?:/|^)
+		// - if dots possible and not allowed: (?:/|^)(?!\.)
+		//
+		// But it's better to have a simpler binding without a conditional, for
+		// performance, so probably better to return both start options.
+		//
+		// Then the caller just ignores the end if it's not the first pattern,
+		// and the start always gets applied.
+		//
+		// But that's always going to be $ if it's the ending pattern, or nothing,
+		// so the caller can just attach $ at the end of the pattern when building.
+		//
+		// So the todo is:
+		// - better detect what kind of start is needed
+		// - return both flavors of starting pattern
+		// - attach $ at the end of the pattern when creating the actual RegExp
+		//
+		// Ah, but wait, no, that all only applies to the root when the first pattern
+		// is not an extglob. If the first pattern IS an extglob, then we need all
+		// that dot prevention biz to live in the extglob portions, because eg
+		// +(*|.x*) can match .xy but not .yx.
+		//
+		// So, return the two flavors if it's #root and the first child is not an
+		// AST, otherwise leave it to the child AST to handle it, and there,
+		// use the (?:^|/) style of start binding.
+		//
+		// Even simplified further:
+		// - Since the start for a join is eg /(?!\.) and the start for a part
+		// is ^(?!\.), we can just prepend (?!\.) to the pattern (either root
+		// or start or whatever) and prepend ^ or / at the Regexp construction.
+		toRegExpSource(allowDot) {
+			const dot = allowDot ?? !!this.#options.dot;
+			if (this.#root === this)
+				this.#fillNegs();
+			if (!this.type) {
+				const noEmpty = this.isStart() && this.isEnd();
+				const src = this.#parts
+					.map(p => {
+					const [re, _, hasMagic, uflag] = typeof p === 'string'
+						? AST.#parseGlob(p, this.#hasMagic, noEmpty)
+						: p.toRegExpSource(allowDot);
+					this.#hasMagic = this.#hasMagic || hasMagic;
+					this.#uflag = this.#uflag || uflag;
+					return re;
+				})
+					.join('');
+				let start = '';
+				if (this.isStart()) {
+					if (typeof this.#parts[0] === 'string') {
+						// this is the string that will match the start of the pattern,
+						// so we need to protect against dots and such.
+						// '.' and '..' cannot match unless the pattern is that exactly,
+						// even if it starts with . or dot:true is set.
+						const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);
+						if (!dotTravAllowed) {
+							const aps = addPatternStart;
+							// check if we have a possibility of matching . or ..,
+							// and prevent that.
+							const needNoTrav =
+							// dots are allowed, and the pattern starts with [ or .
+							(dot && aps.has(src.charAt(0))) ||
+								// the pattern starts with \., and then [ or .
+								(src.startsWith('\\.') && aps.has(src.charAt(2))) ||
+								// the pattern starts with \.\., and then [ or .
+								(src.startsWith('\\.\\.') && aps.has(src.charAt(4)));
+							// no need to prevent dots if it can't match a dot, or if a
+							// sub-pattern will be preventing it anyway.
+							const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));
+							start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : '';
+						}
+					}
+				}
+				// append the "end of path portion" pattern to negation tails
+				let end = '';
+				if (this.isEnd() &&
+					this.#root.#filledNegs &&
+					this.#parent?.type === '!') {
+					end = '(?:$|\\/)';
+				}
+				const final = start + src + end;
+				return [
+					final,
+					(0, unescape_js_1.unescape)(src),
+					(this.#hasMagic = !!this.#hasMagic),
+					this.#uflag,
+				];
+			}
+			// We need to calculate the body *twice* if it's a repeat pattern
+			// at the start, once in nodot mode, then again in dot mode, so a
+			// pattern like *(?) can match 'x.y'
+			const repeated = this.type === '*' || this.type === '+';
+			// some kind of extglob
+			const start = this.type === '!' ? '(?:(?!(?:' : '(?:';
+			let body = this.#partsToRegExp(dot);
+			if (this.isStart() && this.isEnd() && !body && this.type !== '!') {
+				// invalid extglob, has to at least be *something* present, if it's
+				// the entire path portion.
+				const s = this.toString();
+				this.#parts = [s];
+				this.type = null;
+				this.#hasMagic = undefined;
+				return [s, (0, unescape_js_1.unescape)(this.toString()), false, false];
+			}
+			// XXX abstract out this map method
+			let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot
+				? ''
+				: this.#partsToRegExp(true);
+			if (bodyDotAllowed === body) {
+				bodyDotAllowed = '';
+			}
+			if (bodyDotAllowed) {
+				body = `(?:${body})(?:${bodyDotAllowed})*?`;
+			}
+			// an empty !() is exactly equivalent to a starNoEmpty
+			let final = '';
+			if (this.type === '!' && this.#emptyExt) {
+				final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty;
+			}
+			else {
+				const close = this.type === '!'
+					? // !() must match something,but !(x) can match ''
+						'))' +
+							(this.isStart() && !dot && !allowDot ? startNoDot : '') +
+							star +
+							')'
+					: this.type === '@'
+						? ')'
+						: this.type === '?'
+							? ')?'
+							: this.type === '+' && bodyDotAllowed
+								? ')'
+								: this.type === '*' && bodyDotAllowed
+									? `)?`
+									: `)${this.type}`;
+				final = start + body + close;
+			}
+			return [
+				final,
+				(0, unescape_js_1.unescape)(body),
+				(this.#hasMagic = !!this.#hasMagic),
+				this.#uflag,
+			];
+		}
+		#partsToRegExp(dot) {
+			return this.#parts
+				.map(p => {
+				// extglob ASTs should only contain parent ASTs
+				/* c8 ignore start */
+				if (typeof p === 'string') {
+					throw new Error('string type in extglob ast??');
+				}
+				/* c8 ignore stop */
+				// can ignore hasMagic, because extglobs are already always magic
+				const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);
+				this.#uflag = this.#uflag || uflag;
+				return re;
+			})
+				.filter(p => !(this.isStart() && this.isEnd()) || !!p)
+				.join('|');
+		}
+		static #parseGlob(glob, hasMagic, noEmpty = false) {
+			let escaping = false;
+			let re = '';
+			let uflag = false;
+			for (let i = 0; i < glob.length; i++) {
+				const c = glob.charAt(i);
+				if (escaping) {
+					escaping = false;
+					re += (reSpecials.has(c) ? '\\' : '') + c;
+					continue;
+				}
+				if (c === '\\') {
+					if (i === glob.length - 1) {
+						re += '\\\\';
+					}
+					else {
+						escaping = true;
+					}
+					continue;
+				}
+				if (c === '[') {
+					const [src, needUflag, consumed, magic] = (0, brace_expressions_js_1.parseClass)(glob, i);
+					if (consumed) {
+						re += src;
+						uflag = uflag || needUflag;
+						i += consumed - 1;
+						hasMagic = hasMagic || magic;
+						continue;
+					}
+				}
+				if (c === '*') {
+					if (noEmpty && glob === '*')
+						re += starNoEmpty;
+					else
+						re += star;
+					hasMagic = true;
+					continue;
+				}
+				if (c === '?') {
+					re += qmark;
+					hasMagic = true;
+					continue;
+				}
+				re += regExpEscape(c);
+			}
+			return [re, (0, unescape_js_1.unescape)(glob), !!hasMagic, uflag];
+		}
+	}
+	exports.AST = AST;
+	//# sourceMappingURL=ast.js.map
+
+	/***/ }),
+	/* 11 */
+	/***/ ((__unused_webpack_module, exports) => {
+
+	"use strict";
+
+	// translate the various posix character classes into unicode properties
+	// this works across all unicode locales
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.parseClass = void 0;
+	// { <posix class>: [<translation>, /u flag required, negated]
+	const posixClasses = {
+		'[:alnum:]': ['\\p{L}\\p{Nl}\\p{Nd}', true],
+		'[:alpha:]': ['\\p{L}\\p{Nl}', true],
+		'[:ascii:]': ['\\x' + '00-\\x' + '7f', false],
+		'[:blank:]': ['\\p{Zs}\\t', true],
+		'[:cntrl:]': ['\\p{Cc}', true],
+		'[:digit:]': ['\\p{Nd}', true],
+		'[:graph:]': ['\\p{Z}\\p{C}', true, true],
+		'[:lower:]': ['\\p{Ll}', true],
+		'[:print:]': ['\\p{C}', true],
+		'[:punct:]': ['\\p{P}', true],
+		'[:space:]': ['\\p{Z}\\t\\r\\n\\v\\f', true],
+		'[:upper:]': ['\\p{Lu}', true],
+		'[:word:]': ['\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}', true],
+		'[:xdigit:]': ['A-Fa-f0-9', false],
+	};
+	// only need to escape a few things inside of brace expressions
+	// escapes: [ \ ] -
+	const braceEscape = (s) => s.replace(/[[\]\\-]/g, '\\$&');
+	// escape all regexp magic characters
+	const regexpEscape = (s) => s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
+	// everything has already been escaped, we just have to join
+	const rangesToString = (ranges) => ranges.join('');
+	// takes a glob string at a posix brace expression, and returns
+	// an equivalent regular expression source, and boolean indicating
+	// whether the /u flag needs to be applied, and the number of chars
+	// consumed to parse the character class.
+	// This also removes out of order ranges, and returns ($.) if the
+	// entire class just no good.
+	const parseClass = (glob, position) => {
+		const pos = position;
+		/* c8 ignore start */
+		if (glob.charAt(pos) !== '[') {
+			throw new Error('not in a brace expression');
+		}
+		/* c8 ignore stop */
+		const ranges = [];
+		const negs = [];
+		let i = pos + 1;
+		let sawStart = false;
+		let uflag = false;
+		let escaping = false;
+		let negate = false;
+		let endPos = pos;
+		let rangeStart = '';
+		WHILE: while (i < glob.length) {
+			const c = glob.charAt(i);
+			if ((c === '!' || c === '^') && i === pos + 1) {
+				negate = true;
+				i++;
+				continue;
+			}
+			if (c === ']' && sawStart && !escaping) {
+				endPos = i + 1;
+				break;
+			}
+			sawStart = true;
+			if (c === '\\') {
+				if (!escaping) {
+					escaping = true;
+					i++;
+					continue;
+				}
+				// escaped \ char, fall through and treat like normal char
+			}
+			if (c === '[' && !escaping) {
+				// either a posix class, a collation equivalent, or just a [
+				for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {
+					if (glob.startsWith(cls, i)) {
+						// invalid, [a-[] is fine, but not [a-[:alpha]]
+						if (rangeStart) {
+							return ['$.', false, glob.length - pos, true];
+						}
+						i += cls.length;
+						if (neg)
+							negs.push(unip);
+						else
+							ranges.push(unip);
+						uflag = uflag || u;
+						continue WHILE;
+					}
+				}
+			}
+			// now it's just a normal character, effectively
+			escaping = false;
+			if (rangeStart) {
+				// throw this range away if it's not valid, but others
+				// can still match.
+				if (c > rangeStart) {
+					ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c));
+				}
+				else if (c === rangeStart) {
+					ranges.push(braceEscape(c));
+				}
+				rangeStart = '';
+				i++;
+				continue;
+			}
+			// now might be the start of a range.
+			// can be either c-d or c-] or c<more...>] or c] at this point
+			if (glob.startsWith('-]', i + 1)) {
+				ranges.push(braceEscape(c + '-'));
+				i += 2;
+				continue;
+			}
+			if (glob.startsWith('-', i + 1)) {
+				rangeStart = c;
+				i += 2;
+				continue;
+			}
+			// not the start of a range, just a single character
+			ranges.push(braceEscape(c));
+			i++;
+		}
+		if (endPos < i) {
+			// didn't see the end of the class, not a valid class,
+			// but might still be valid as a literal match.
+			return ['', false, 0, false];
+		}
+		// if we got no ranges and no negates, then we have a range that
+		// cannot possibly match anything, and that poisons the whole glob
+		if (!ranges.length && !negs.length) {
+			return ['$.', false, glob.length - pos, true];
+		}
+		// if we got one positive range, and it's a single character, then that's
+		// not actually a magic pattern, it's just that one literal character.
+		// we should not treat that as "magic", we should just return the literal
+		// character. [_] is a perfectly valid way to escape glob magic chars.
+		if (negs.length === 0 &&
+			ranges.length === 1 &&
+			/^\\?.$/.test(ranges[0]) &&
+			!negate) {
+			const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];
+			return [regexpEscape(r), false, endPos - pos, false];
+		}
+		const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']';
+		const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']';
+		const comb = ranges.length && negs.length
+			? '(' + sranges + '|' + snegs + ')'
+			: ranges.length
+				? sranges
+				: snegs;
+		return [comb, uflag, endPos - pos, true];
+	};
+	exports.parseClass = parseClass;
+	//# sourceMappingURL=brace-expressions.js.map
+
+	/***/ }),
+	/* 12 */
+	/***/ ((__unused_webpack_module, exports) => {
+
+	"use strict";
+
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.unescape = void 0;
+	/**
+	 * Un-escape a string that has been escaped with {@link escape}.
+	 *
+	 * If the {@link windowsPathsNoEscape} option is used, then square-brace
+	 * escapes are removed, but not backslash escapes.  For example, it will turn
+	 * the string `'[*]'` into `*`, but it will not turn `'\\*'` into `'*'`,
+	 * becuase `\` is a path separator in `windowsPathsNoEscape` mode.
+	 *
+	 * When `windowsPathsNoEscape` is not set, then both brace escapes and
+	 * backslash escapes are removed.
+	 *
+	 * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped
+	 * or unescaped.
+	 */
+	const unescape = (s, { windowsPathsNoEscape = false, } = {}) => {
+		return windowsPathsNoEscape
+			? s.replace(/\[([^\/\\])\]/g, '$1')
+			: s.replace(/((?!\\).|^)\[([^\/\\])\]/g, '$1$2').replace(/\\([^\/])/g, '$1');
+	};
+	exports.unescape = unescape;
+	//# sourceMappingURL=unescape.js.map
+
+	/***/ }),
+	/* 13 */
+	/***/ ((__unused_webpack_module, exports) => {
+
+	"use strict";
+
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.escape = void 0;
+	/**
+	 * Escape all magic characters in a glob pattern.
+	 *
+	 * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}
+	 * option is used, then characters are escaped by wrapping in `[]`, because
+	 * a magic character wrapped in a character class can only be satisfied by
+	 * that exact character.  In this mode, `\` is _not_ escaped, because it is
+	 * not interpreted as a magic character, but instead as a path separator.
+	 */
+	const escape = (s, { windowsPathsNoEscape = false, } = {}) => {
+		// don't need to escape +@! because we escape the parens
+		// that make those magic, and escaping ! as [!] isn't valid,
+		// because [!]] is a valid glob class meaning not ']'.
+		return windowsPathsNoEscape
+			? s.replace(/[?*()[\]]/g, '[$&]')
+			: s.replace(/[?*()[\]\\]/g, '\\$&');
+	};
+	exports.escape = escape;
+	//# sourceMappingURL=escape.js.map
+
+	/***/ })
+	/******/ 	]);
+	/************************************************************************/
+	/******/ 	// The module cache
+	/******/ 	var __webpack_module_cache__ = {};
+	/******/
+	/******/ 	// The require function
+	/******/ 	function __webpack_require__(moduleId) {
+	/******/ 		// Check if module is in cache
+	/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
+	/******/ 		if (cachedModule !== undefined) {
+	/******/ 			return cachedModule.exports;
+	/******/ 		}
+	/******/ 		// Create a new module (and put it into the cache)
+	/******/ 		var module = __webpack_module_cache__[moduleId] = {
+	/******/ 			// no module.id needed
+	/******/ 			// no module.loaded needed
+	/******/ 			exports: {}
+	/******/ 		};
+	/******/
+	/******/ 		// Execute the module function
+	/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
+	/******/
+	/******/ 		// Return the exports of the module
+	/******/ 		return module.exports;
+	/******/ 	}
+	/******/
+	/************************************************************************/
+	var __webpack_exports__ = {};
+	// This entry need to be wrapped in an IIFE because it need to be in strict mode.
+	(() => {
+	"use strict";
+	var exports = __webpack_exports__;
+
+	/*---------------------------------------------------------------------------------------------
+	 *  Copyright (c) Microsoft Corporation. All rights reserved.
+	 *  Licensed under the MIT License. See License.txt in the project root for license information.
+	 *--------------------------------------------------------------------------------------------*/
+	Object.defineProperty(exports, "__esModule", ({ value: true }));
+	exports.activate = void 0;
+	const request_light_1 = __webpack_require__(1);
+	const vscode_1 = __webpack_require__(2);
+	const fsProvider_1 = __webpack_require__(3);
+	const SCHEME = 'vscode-test-web';
+	function activate(context) {
+		const serverUri = context.extensionUri.with({ path: '/static/mount', query: undefined });
+		const serverBackedRootDirectory = new ServerBackedDirectory(serverUri, [], '');
+		const memFsProvider = new fsProvider_1.MemFileSystemProvider(SCHEME, serverBackedRootDirectory, context.extensionUri);
+		const disposable = vscode_1.workspace.registerFileSystemProvider(SCHEME, memFsProvider);
+		context.subscriptions.push(disposable);
+		const searchDisposable = vscode_1.workspace.registerFileSearchProvider(SCHEME, memFsProvider);
+		context.subscriptions.push(searchDisposable);
+		console.log(`vscode-test-web-support fs provider registers for ${SCHEME}, initial content from ${serverUri.toString(/*skipEncoding*/ true)}`);
+	}
+	exports.activate = activate;
+	class ServerBackedFile {
+		constructor(_serverRoot, pathSegments, name) {
+			this._serverRoot = _serverRoot;
+			this.pathSegments = pathSegments;
+			this.name = name;
+			this.type = vscode_1.FileType.File;
+		}
+		get stats() {
+			if (this._stats === undefined) {
+				this._stats = getStats(this._serverRoot, this.pathSegments);
+			}
+			return this._stats;
+		}
+		set stats(stats) {
+			this._stats = stats;
+		}
+		get content() {
+			if (this._content === undefined) {
+				this._content = getContent(this._serverRoot, this.pathSegments);
+			}
+			return this._content;
+		}
+		set content(content) {
+			this._content = content;
+		}
+	}
+	class ServerBackedDirectory {
+		constructor(_serverRoot, pathSegments, name) {
+			this._serverRoot = _serverRoot;
+			this.pathSegments = pathSegments;
+			this.name = name;
+			this.type = vscode_1.FileType.Directory;
+		}
+		get stats() {
+			if (this._stats === undefined) {
+				this._stats = getStats(this._serverRoot, this.pathSegments);
+			}
+			return this._stats;
+		}
+		set stats(stats) {
+			this._stats = stats;
+		}
+		get entries() {
+			if (this._entries === undefined) {
+				this._entries = getEntries(this._serverRoot, this.pathSegments);
+			}
+			return this._entries;
+		}
+		set entries(entries) {
+			this._entries = entries;
+		}
+	}
+	// eslint-disable-next-line @typescript-eslint/no-explicit-any
+	function isEntry(e) {
+		return e && (e.type === vscode_1.FileType.Directory || e.type === vscode_1.FileType.File) && typeof e.name === 'string' && e.name.length > 0;
+	}
+	// eslint-disable-next-line @typescript-eslint/no-explicit-any
+	function isStat(e) {
+		return e && (e.type === vscode_1.FileType.Directory || e.type === vscode_1.FileType.File) && typeof e.ctime === 'number' && typeof e.mtime === 'number' && typeof e.size === 'number';
+	}
+	function getServerUri(serverRoot, pathSegments) {
+		return vscode_1.Uri.joinPath(serverRoot, ...pathSegments);
+	}
+	async function getEntries(serverRoot, pathSegments) {
+		const url = getServerUri(serverRoot, pathSegments).with({ query: 'readdir' }).toString(/*skipEncoding*/ true);
+		const response = await (0, request_light_1.xhr)({ url });
+		if (response.status === 200 && response.status <= 204) {
+			try {
+				const res = JSON.parse(response.responseText);
+				if (Array.isArray(res)) {
+					const entries = new Map();
+					for (const r of res) {
+						if (isEntry(r)) {
+							const newPathSegments = [...pathSegments, encodeURIComponent(r.name)];
+							const newEntry = r.type === vscode_1.FileType.Directory ? new ServerBackedDirectory(serverRoot, newPathSegments, r.name) : new ServerBackedFile(serverRoot, newPathSegments, r.name);
+							entries.set(newEntry.name, newEntry);
+						}
+					}
+					return entries;
+				}
+			}
+			catch {
+				// ignore
+			}
+			console.log(`Invalid server response format for ${url}.`);
+		}
+		else {
+			console.log(`Invalid server response for ${url}. Status ${response.status}`);
+		}
+		return new Map();
+	}
+	async function getStats(serverRoot, pathSegments) {
+		const serverUri = getServerUri(serverRoot, pathSegments);
+		const url = serverUri.with({ query: 'stat' }).toString(/*skipEncoding*/ true);
+		const response = await (0, request_light_1.xhr)({ url });
+		if (response.status === 200 && response.status <= 204) {
+			const res = JSON.parse(response.responseText);
+			if (isStat(res)) {
+				return res;
+			}
+			throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}.`);
+		}
+		throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}. Status ${response.status}.`);
+	}
+	async function getContent(serverRoot, pathSegments) {
+		const serverUri = getServerUri(serverRoot, pathSegments);
+		const response = await (0, request_light_1.xhr)({ url: serverUri.toString(/*skipEncoding*/ true) });
+		if (response.status >= 200 && response.status <= 204) {
+			return response.body;
+		}
+		throw vscode_1.FileSystemError.FileNotFound(`Invalid server response for ${serverUri.toString(/*skipEncoding*/ true)}. Status ${response.status}.`);
+	}
+
+	})();
+
+	var __webpack_export_target__ = exports;
+	for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
+	if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
+	/******/ })()
+	;
+	//# sourceMappingURL=fsExtensionMain.js.map
diff --git a/node_modules/@vscode/test-web/fs-provider/package-lock.json b/node_modules/@vscode/test-web/fs-provider/package-lock.json
index 09090b6..7177965 100644
--- a/node_modules/@vscode/test-web/fs-provider/package-lock.json
+++ b/node_modules/@vscode/test-web/fs-provider/package-lock.json
@@ -1,1736 +1,1766 @@
 {
-	"name": "vscode-test-web-fs",
-	"version": "0.0.1",
-	"lockfileVersion": 3,
-	"requires": true,
-	"packages": {
-		"": {
-			"name": "vscode-test-web-fs",
-			"version": "0.0.1",
-			"license": "MIT",
-			"devDependencies": {
-				"@types/vscode": "^1.81.0",
-				"@types/webpack-env": "^1.18.3",
-				"path-browserify": "^1.0.1",
-				"process": "^0.11.10",
-				"request-light": "^0.7.0",
-				"ts-loader": "^9.5.0",
-				"vscode-uri": "^3.0.8",
-				"webpack": "^5.89.0",
-				"webpack-cli": "^5.1.4"
-			},
-			"engines": {
-				"vscode": "^1.72.0"
-			}
-		},
-		"node_modules/@discoveryjs/json-ext": {
-			"version": "0.5.3",
-			"resolved": "https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.3.tgz",
-			"integrity": "sha512-Fxt+AfXgjMoin2maPIYzFZnQjAXjAL0PHscM5pRTtatFqB+vZxAM9tLp2Optnuw3QOQC40jTNeGYFOMvyf7v9g==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=10.0.0"
-			}
-		},
-		"node_modules/@jridgewell/gen-mapping": {
-			"version": "0.3.2",
-			"resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
-			"integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@jridgewell/set-array": "^1.0.1",
-				"@jridgewell/sourcemap-codec": "^1.4.10",
-				"@jridgewell/trace-mapping": "^0.3.9"
-			},
-			"engines": {
-				"node": ">=6.0.0"
-			}
-		},
-		"node_modules/@jridgewell/resolve-uri": {
-			"version": "3.1.0",
-			"resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
-			"integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6.0.0"
-			}
-		},
-		"node_modules/@jridgewell/set-array": {
-			"version": "1.1.2",
-			"resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
-			"integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6.0.0"
-			}
-		},
-		"node_modules/@jridgewell/source-map": {
-			"version": "0.3.3",
-			"resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.3.tgz",
-			"integrity": "sha512-b+fsZXeLYi9fEULmfBrhxn4IrPlINf8fiNarzTof004v3lFdntdwa9PF7vFJqm3mg7s+ScJMxXaE3Acp1irZcg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@jridgewell/gen-mapping": "^0.3.0",
-				"@jridgewell/trace-mapping": "^0.3.9"
-			}
-		},
-		"node_modules/@jridgewell/sourcemap-codec": {
-			"version": "1.4.14",
-			"resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
-			"integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@jridgewell/trace-mapping": {
-			"version": "0.3.14",
-			"resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.14.tgz",
-			"integrity": "sha512-bJWEfQ9lPTvm3SneWwRFVLzrh6nhjwqw7TUFFBEMzwvg7t7PCDenf2lDwqo4NQXzdpgBXyFgDWnQA+2vkruksQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@jridgewell/resolve-uri": "^3.0.3",
-				"@jridgewell/sourcemap-codec": "^1.4.10"
-			}
-		},
-		"node_modules/@types/eslint": {
-			"version": "7.28.0",
-			"resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-7.28.0.tgz",
-			"integrity": "sha512-07XlgzX0YJUn4iG1ocY4IX9DzKSmMGUs6ESKlxWhZRaa0fatIWaHWUVapcuGa8r5HFnTqzj+4OCjd5f7EZ/i/A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@types/estree": "*",
-				"@types/json-schema": "*"
-			}
-		},
-		"node_modules/@types/eslint-scope": {
-			"version": "3.7.3",
-			"resolved": "https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.3.tgz",
-			"integrity": "sha512-PB3ldyrcnAicT35TWPs5IcwKD8S333HMaa2VVv4+wdvebJkjWuW/xESoB8IwRcog8HYVYamb1g/R31Qv5Bx03g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@types/eslint": "*",
-				"@types/estree": "*"
-			}
-		},
-		"node_modules/@types/estree": {
-			"version": "0.0.51",
-			"resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.51.tgz",
-			"integrity": "sha512-CuPgU6f3eT/XgKKPqKd/gLZV1Xmvf1a2R5POBOGQa6uv82xpls89HU5zKeVoyR8XzHd1RGNOlQlvUe3CFkjWNQ==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@types/json-schema": {
-			"version": "7.0.9",
-			"resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.9.tgz",
-			"integrity": "sha512-qcUXuemtEu+E5wZSJHNxUXeCZhAfXKQ41D+duX+VYPde7xyEVZci+/oXKJL13tnRs9lR2pr4fod59GT6/X1/yQ==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@types/node": {
-			"version": "16.9.1",
-			"resolved": "https://registry.npmjs.org/@types/node/-/node-16.9.1.tgz",
-			"integrity": "sha512-QpLcX9ZSsq3YYUUnD3nFDY8H7wctAhQj/TFKL8Ya8v5fMm3CFXxo8zStsLAl780ltoYoo1WvKUVGBQK+1ifr7g==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@types/vscode": {
-			"version": "1.81.0",
-			"resolved": "https://registry.npmjs.org/@types/vscode/-/vscode-1.81.0.tgz",
-			"integrity": "sha512-YIaCwpT+O2E7WOMq0eCgBEABE++SX3Yl/O02GoMIF2DO3qAtvw7m6BXFYsxnc6XyzwZgh6/s/UG78LSSombl2w==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@types/webpack-env": {
-			"version": "1.18.3",
-			"resolved": "https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.18.3.tgz",
-			"integrity": "sha512-v4CH6FLBCftYGFAswDhzFLjKgucXsOkIf5Mzl8ZZhEtC6oye9whFInNPKszNB9AvX7JEZMtpXxWctih6addP+Q==",
-			"dev": true
-		},
-		"node_modules/@webassemblyjs/ast": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.11.6.tgz",
-			"integrity": "sha512-IN1xI7PwOvLPgjcf180gC1bqn3q/QaOCwYUahIOhbYUu8KA/3tw2RT/T0Gidi1l7Hhj5D/INhJxiICObqpMu4Q==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/helper-numbers": "1.11.6",
-				"@webassemblyjs/helper-wasm-bytecode": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/floating-point-hex-parser": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.11.6.tgz",
-			"integrity": "sha512-ejAj9hfRJ2XMsNHk/v6Fu2dGS+i4UaXBXGemOfQ/JfQ6mdQg/WXtwleQRLLS4OvfDhv8rYnVwH27YJLMyYsxhw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@webassemblyjs/helper-api-error": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.11.6.tgz",
-			"integrity": "sha512-o0YkoP4pVu4rN8aTJgAyj9hC2Sv5UlkzCHhxqWj8butaLvnpdc2jOwh4ewE6CX0txSfLn/UYaV/pheS2Txg//Q==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@webassemblyjs/helper-buffer": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.11.6.tgz",
-			"integrity": "sha512-z3nFzdcp1mb8nEOFFk8DrYLpHvhKC3grJD2ardfKOzmbmJvEf/tPIqCY+sNcwZIY8ZD7IkB2l7/pqhUhqm7hLA==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@webassemblyjs/helper-numbers": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.11.6.tgz",
-			"integrity": "sha512-vUIhZ8LZoIWHBohiEObxVm6hwP034jwmc9kuq5GdHZH0wiLVLIPcMCdpJzG4C11cHoQ25TFIQj9kaVADVX7N3g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/floating-point-hex-parser": "1.11.6",
-				"@webassemblyjs/helper-api-error": "1.11.6",
-				"@xtuc/long": "4.2.2"
-			}
-		},
-		"node_modules/@webassemblyjs/helper-wasm-bytecode": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.11.6.tgz",
-			"integrity": "sha512-sFFHKwcmBprO9e7Icf0+gddyWYDViL8bpPjJJl0WHxCdETktXdmtWLGVzoHbqUcY4Be1LkNfwTmXOJUFZYSJdA==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@webassemblyjs/helper-wasm-section": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.11.6.tgz",
-			"integrity": "sha512-LPpZbSOwTpEC2cgn4hTydySy1Ke+XEu+ETXuoyvuyezHO3Kjdu90KK95Sh9xTbmjrCsUwvWwCOQQNta37VrS9g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@webassemblyjs/helper-buffer": "1.11.6",
-				"@webassemblyjs/helper-wasm-bytecode": "1.11.6",
-				"@webassemblyjs/wasm-gen": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/ieee754": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.11.6.tgz",
-			"integrity": "sha512-LM4p2csPNvbij6U1f19v6WR56QZ8JcHg3QIJTlSwzFcmx6WSORicYj6I63f9yU1kEUtrpG+kjkiIAkevHpDXrg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@xtuc/ieee754": "^1.2.0"
-			}
-		},
-		"node_modules/@webassemblyjs/leb128": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.11.6.tgz",
-			"integrity": "sha512-m7a0FhE67DQXgouf1tbN5XQcdWoNgaAuoULHIfGFIEVKA6tu/edls6XnIlkmS6FrXAquJRPni3ZZKjw6FSPjPQ==",
-			"dev": true,
-			"license": "Apache-2.0",
-			"dependencies": {
-				"@xtuc/long": "4.2.2"
-			}
-		},
-		"node_modules/@webassemblyjs/utf8": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.11.6.tgz",
-			"integrity": "sha512-vtXf2wTQ3+up9Zsg8sa2yWiQpzSsMyXj0qViVP6xKGCUT8p8YJ6HqI7l5eCnWx1T/FYdsv07HQs2wTFbbof/RA==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/@webassemblyjs/wasm-edit": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.11.6.tgz",
-			"integrity": "sha512-Ybn2I6fnfIGuCR+Faaz7YcvtBKxvoLV3Lebn1tM4o/IAJzmi9AWYIPWpyBfU8cC+JxAO57bk4+zdsTjJR+VTOw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@webassemblyjs/helper-buffer": "1.11.6",
-				"@webassemblyjs/helper-wasm-bytecode": "1.11.6",
-				"@webassemblyjs/helper-wasm-section": "1.11.6",
-				"@webassemblyjs/wasm-gen": "1.11.6",
-				"@webassemblyjs/wasm-opt": "1.11.6",
-				"@webassemblyjs/wasm-parser": "1.11.6",
-				"@webassemblyjs/wast-printer": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/wasm-gen": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.11.6.tgz",
-			"integrity": "sha512-3XOqkZP/y6B4F0PBAXvI1/bky7GryoogUtfwExeP/v7Nzwo1QLcq5oQmpKlftZLbT+ERUOAZVQjuNVak6UXjPA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@webassemblyjs/helper-wasm-bytecode": "1.11.6",
-				"@webassemblyjs/ieee754": "1.11.6",
-				"@webassemblyjs/leb128": "1.11.6",
-				"@webassemblyjs/utf8": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/wasm-opt": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.11.6.tgz",
-			"integrity": "sha512-cOrKuLRE7PCe6AsOVl7WasYf3wbSo4CeOk6PkrjS7g57MFfVUF9u6ysQBBODX0LdgSvQqRiGz3CXvIDKcPNy4g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@webassemblyjs/helper-buffer": "1.11.6",
-				"@webassemblyjs/wasm-gen": "1.11.6",
-				"@webassemblyjs/wasm-parser": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/wasm-parser": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.11.6.tgz",
-			"integrity": "sha512-6ZwPeGzMJM3Dqp3hCsLgESxBGtT/OeCvCZ4TA1JUPYgmhAx38tTPR9JaKy0S5H3evQpO/h2uWs2j6Yc/fjkpTQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@webassemblyjs/helper-api-error": "1.11.6",
-				"@webassemblyjs/helper-wasm-bytecode": "1.11.6",
-				"@webassemblyjs/ieee754": "1.11.6",
-				"@webassemblyjs/leb128": "1.11.6",
-				"@webassemblyjs/utf8": "1.11.6"
-			}
-		},
-		"node_modules/@webassemblyjs/wast-printer": {
-			"version": "1.11.6",
-			"resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.11.6.tgz",
-			"integrity": "sha512-JM7AhRcE+yW2GWYaKeHL5vt4xqee5N2WcezptmgyhNS+ScggqcT1OtXykhAb13Sn5Yas0j2uv9tHgrjwvzAP4A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@webassemblyjs/ast": "1.11.6",
-				"@xtuc/long": "4.2.2"
-			}
-		},
-		"node_modules/@webpack-cli/configtest": {
-			"version": "2.1.1",
-			"resolved": "https://registry.npmjs.org/@webpack-cli/configtest/-/configtest-2.1.1.tgz",
-			"integrity": "sha512-wy0mglZpDSiSS0XHrVR+BAdId2+yxPSoJW8fsna3ZpYSlufjvxnP4YbKTCBZnNIcGN4r6ZPXV55X4mYExOfLmw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=14.15.0"
-			},
-			"peerDependencies": {
-				"webpack": "5.x.x",
-				"webpack-cli": "5.x.x"
-			}
-		},
-		"node_modules/@webpack-cli/info": {
-			"version": "2.0.2",
-			"resolved": "https://registry.npmjs.org/@webpack-cli/info/-/info-2.0.2.tgz",
-			"integrity": "sha512-zLHQdI/Qs1UyT5UBdWNqsARasIA+AaF8t+4u2aS2nEpBQh2mWIVb8qAklq0eUENnC5mOItrIB4LiS9xMtph18A==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=14.15.0"
-			},
-			"peerDependencies": {
-				"webpack": "5.x.x",
-				"webpack-cli": "5.x.x"
-			}
-		},
-		"node_modules/@webpack-cli/serve": {
-			"version": "2.0.5",
-			"resolved": "https://registry.npmjs.org/@webpack-cli/serve/-/serve-2.0.5.tgz",
-			"integrity": "sha512-lqaoKnRYBdo1UgDX8uF24AfGMifWK19TxPmM5FHc2vAGxrJ/qtyUyFBWoY1tISZdelsQ5fBcOusifo5o5wSJxQ==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=14.15.0"
-			},
-			"peerDependencies": {
-				"webpack": "5.x.x",
-				"webpack-cli": "5.x.x"
-			},
-			"peerDependenciesMeta": {
-				"webpack-dev-server": {
-					"optional": true
-				}
-			}
-		},
-		"node_modules/@xtuc/ieee754": {
-			"version": "1.2.0",
-			"resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
-			"integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
-			"dev": true,
-			"license": "BSD-3-Clause"
-		},
-		"node_modules/@xtuc/long": {
-			"version": "4.2.2",
-			"resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
-			"integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
-			"dev": true,
-			"license": "Apache-2.0"
-		},
-		"node_modules/acorn": {
-			"version": "8.8.0",
-			"resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
-			"integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
-			"dev": true,
-			"license": "MIT",
-			"bin": {
-				"acorn": "bin/acorn"
-			},
-			"engines": {
-				"node": ">=0.4.0"
-			}
-		},
-		"node_modules/acorn-import-assertions": {
-			"version": "1.9.0",
-			"resolved": "https://registry.npmjs.org/acorn-import-assertions/-/acorn-import-assertions-1.9.0.tgz",
-			"integrity": "sha512-cmMwop9x+8KFhxvKrKfPYmN6/pKTYYHBqLa0DfvVZcKMJWNyWLnaqND7dx/qn66R7ewM1UX5XMaDVP5wlVTaVA==",
-			"dev": true,
-			"license": "MIT",
-			"peerDependencies": {
-				"acorn": "^8"
-			}
-		},
-		"node_modules/ajv": {
-			"version": "6.12.6",
-			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
-			"integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"fast-deep-equal": "^3.1.1",
-				"fast-json-stable-stringify": "^2.0.0",
-				"json-schema-traverse": "^0.4.1",
-				"uri-js": "^4.2.2"
-			},
-			"funding": {
-				"type": "github",
-				"url": "https://github.com/sponsors/epoberezkin"
-			}
-		},
-		"node_modules/ajv-keywords": {
-			"version": "3.5.2",
-			"resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz",
-			"integrity": "sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==",
-			"dev": true,
-			"license": "MIT",
-			"peerDependencies": {
-				"ajv": "^6.9.1"
-			}
-		},
-		"node_modules/ansi-styles": {
-			"version": "4.3.0",
-			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
-			"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"color-convert": "^2.0.1"
-			},
-			"engines": {
-				"node": ">=8"
-			},
-			"funding": {
-				"url": "https://github.com/chalk/ansi-styles?sponsor=1"
-			}
-		},
-		"node_modules/braces": {
-			"version": "3.0.2",
-			"resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
-			"integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"fill-range": "^7.0.1"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/browserslist": {
-			"version": "4.17.0",
-			"resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.17.0.tgz",
-			"integrity": "sha512-g2BJ2a0nEYvEFQC208q8mVAhfNwpZ5Mu8BwgtCdZKO3qx98HChmeg448fPdUzld8aFmfLgVh7yymqV+q1lJZ5g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"caniuse-lite": "^1.0.30001254",
-				"colorette": "^1.3.0",
-				"electron-to-chromium": "^1.3.830",
-				"escalade": "^3.1.1",
-				"node-releases": "^1.1.75"
-			},
-			"bin": {
-				"browserslist": "cli.js"
-			},
-			"engines": {
-				"node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/browserslist"
-			}
-		},
-		"node_modules/browserslist/node_modules/colorette": {
-			"version": "1.4.0",
-			"resolved": "https://registry.npmjs.org/colorette/-/colorette-1.4.0.tgz",
-			"integrity": "sha512-Y2oEozpomLn7Q3HFP7dpww7AtMJplbM9lGZP6RDfHqmbeRjiwRg4n6VM6j4KLmRke85uWEI7JqF17f3pqdRA0g==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/buffer-from": {
-			"version": "1.1.2",
-			"resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
-			"integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/caniuse-lite": {
-			"version": "1.0.30001257",
-			"resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001257.tgz",
-			"integrity": "sha512-JN49KplOgHSXpIsVSF+LUyhD8PUp6xPpAXeRrrcBh4KBeP7W864jHn6RvzJgDlrReyeVjMFJL3PLpPvKIxlIHA==",
-			"dev": true,
-			"license": "CC-BY-4.0",
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/browserslist"
-			}
-		},
-		"node_modules/chalk": {
-			"version": "4.1.2",
-			"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
-			"integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"ansi-styles": "^4.1.0",
-				"supports-color": "^7.1.0"
-			},
-			"engines": {
-				"node": ">=10"
-			},
-			"funding": {
-				"url": "https://github.com/chalk/chalk?sponsor=1"
-			}
-		},
-		"node_modules/chrome-trace-event": {
-			"version": "1.0.3",
-			"resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
-			"integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6.0"
-			}
-		},
-		"node_modules/clone-deep": {
-			"version": "4.0.1",
-			"resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
-			"integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"is-plain-object": "^2.0.4",
-				"kind-of": "^6.0.2",
-				"shallow-clone": "^3.0.0"
-			},
-			"engines": {
-				"node": ">=6"
-			}
-		},
-		"node_modules/color-convert": {
-			"version": "2.0.1",
-			"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
-			"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"color-name": "~1.1.4"
-			},
-			"engines": {
-				"node": ">=7.0.0"
-			}
-		},
-		"node_modules/color-name": {
-			"version": "1.1.4",
-			"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
-			"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/colorette": {
-			"version": "2.0.16",
-			"resolved": "https://registry.npmjs.org/colorette/-/colorette-2.0.16.tgz",
-			"integrity": "sha512-hUewv7oMjCp+wkBv5Rm0v87eJhq4woh5rSR+42YSQJKecCqgIqNkZ6lAlQms/BwHPJA5NKMRlpxPRv0n8HQW6g==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/commander": {
-			"version": "10.0.1",
-			"resolved": "https://registry.npmjs.org/commander/-/commander-10.0.1.tgz",
-			"integrity": "sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=14"
-			}
-		},
-		"node_modules/cross-spawn": {
-			"version": "7.0.3",
-			"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
-			"integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"path-key": "^3.1.0",
-				"shebang-command": "^2.0.0",
-				"which": "^2.0.1"
-			},
-			"engines": {
-				"node": ">= 8"
-			}
-		},
-		"node_modules/electron-to-chromium": {
-			"version": "1.3.836",
-			"resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.836.tgz",
-			"integrity": "sha512-Ney3pHOJBWkG/AqYjrW0hr2AUCsao+2uvq9HUlRP8OlpSdk/zOHOUJP7eu0icDvePC9DlgffuelP4TnOJmMRUg==",
-			"dev": true,
-			"license": "ISC"
-		},
-		"node_modules/enhanced-resolve": {
-			"version": "5.10.0",
-			"resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.10.0.tgz",
-			"integrity": "sha512-T0yTFjdpldGY8PmuXXR0PyQ1ufZpEGiHVrp7zHKB7jdR4qlmZHhONVM5AQOAWXuF/w3dnHbEQVrNptJgt7F+cQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"graceful-fs": "^4.2.4",
-				"tapable": "^2.2.0"
-			},
-			"engines": {
-				"node": ">=10.13.0"
-			}
-		},
-		"node_modules/envinfo": {
-			"version": "7.8.1",
-			"resolved": "https://registry.npmjs.org/envinfo/-/envinfo-7.8.1.tgz",
-			"integrity": "sha512-/o+BXHmB7ocbHEAs6F2EnG0ogybVVUdkRunTT2glZU9XAaGmhqskrvKwqXuDfNjEO0LZKWdejEEpnq8aM0tOaw==",
-			"dev": true,
-			"license": "MIT",
-			"bin": {
-				"envinfo": "dist/cli.js"
-			},
-			"engines": {
-				"node": ">=4"
-			}
-		},
-		"node_modules/es-module-lexer": {
-			"version": "1.2.1",
-			"resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.2.1.tgz",
-			"integrity": "sha512-9978wrXM50Y4rTMmW5kXIC09ZdXQZqkE4mxhwkd8VbzsGkXGPgV4zWuqQJgCEzYngdo2dYDa0l8xhX4fkSwJSg==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/escalade": {
-			"version": "3.1.1",
-			"resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
-			"integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6"
-			}
-		},
-		"node_modules/eslint-scope": {
-			"version": "5.1.1",
-			"resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
-			"integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"dependencies": {
-				"esrecurse": "^4.3.0",
-				"estraverse": "^4.1.1"
-			},
-			"engines": {
-				"node": ">=8.0.0"
-			}
-		},
-		"node_modules/esrecurse": {
-			"version": "4.3.0",
-			"resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
-			"integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"dependencies": {
-				"estraverse": "^5.2.0"
-			},
-			"engines": {
-				"node": ">=4.0"
-			}
-		},
-		"node_modules/esrecurse/node_modules/estraverse": {
-			"version": "5.2.0",
-			"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz",
-			"integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"engines": {
-				"node": ">=4.0"
-			}
-		},
-		"node_modules/estraverse": {
-			"version": "4.3.0",
-			"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
-			"integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"engines": {
-				"node": ">=4.0"
-			}
-		},
-		"node_modules/events": {
-			"version": "3.3.0",
-			"resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
-			"integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=0.8.x"
-			}
-		},
-		"node_modules/fast-deep-equal": {
-			"version": "3.1.3",
-			"resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
-			"integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/fast-json-stable-stringify": {
-			"version": "2.1.0",
-			"resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
-			"integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/fastest-levenshtein": {
-			"version": "1.0.12",
-			"resolved": "https://registry.npmjs.org/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz",
-			"integrity": "sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/fill-range": {
-			"version": "7.0.1",
-			"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
-			"integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"to-regex-range": "^5.0.1"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/find-up": {
-			"version": "4.1.0",
-			"resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
-			"integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"locate-path": "^5.0.0",
-				"path-exists": "^4.0.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/function-bind": {
-			"version": "1.1.1",
-			"resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
-			"integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/glob-to-regexp": {
-			"version": "0.4.1",
-			"resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
-			"integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
-			"dev": true,
-			"license": "BSD-2-Clause"
-		},
-		"node_modules/graceful-fs": {
-			"version": "4.2.9",
-			"resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.9.tgz",
-			"integrity": "sha512-NtNxqUcXgpW2iMrfqSfR73Glt39K+BLwWsPs94yR63v45T0Wbej7eRmL5cWfwEgqXnmjQp3zaJTshdRW/qC2ZQ==",
-			"dev": true,
-			"license": "ISC"
-		},
-		"node_modules/has": {
-			"version": "1.0.3",
-			"resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
-			"integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"function-bind": "^1.1.1"
-			},
-			"engines": {
-				"node": ">= 0.4.0"
-			}
-		},
-		"node_modules/has-flag": {
-			"version": "4.0.0",
-			"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
-			"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/import-local": {
-			"version": "3.0.2",
-			"resolved": "https://registry.npmjs.org/import-local/-/import-local-3.0.2.tgz",
-			"integrity": "sha512-vjL3+w0oulAVZ0hBHnxa/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9XfJTOoHwU0B71S557gA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"pkg-dir": "^4.2.0",
-				"resolve-cwd": "^3.0.0"
-			},
-			"bin": {
-				"import-local-fixture": "fixtures/cli.js"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/interpret": {
-			"version": "3.1.1",
-			"resolved": "https://registry.npmjs.org/interpret/-/interpret-3.1.1.tgz",
-			"integrity": "sha512-6xwYfHbajpoF0xLW+iwLkhwgvLoZDfjYfoFNu8ftMoXINzwuymNLd9u/KmwtdT2GbR+/Cz66otEGEVVUHX9QLQ==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=10.13.0"
-			}
-		},
-		"node_modules/is-core-module": {
-			"version": "2.11.0",
-			"resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz",
-			"integrity": "sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"has": "^1.0.3"
-			},
-			"funding": {
-				"url": "https://github.com/sponsors/ljharb"
-			}
-		},
-		"node_modules/is-number": {
-			"version": "7.0.0",
-			"resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
-			"integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=0.12.0"
-			}
-		},
-		"node_modules/is-plain-object": {
-			"version": "2.0.4",
-			"resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
-			"integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"isobject": "^3.0.1"
-			},
-			"engines": {
-				"node": ">=0.10.0"
-			}
-		},
-		"node_modules/isexe": {
-			"version": "2.0.0",
-			"resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-			"integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
-			"dev": true,
-			"license": "ISC"
-		},
-		"node_modules/isobject": {
-			"version": "3.0.1",
-			"resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
-			"integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=0.10.0"
-			}
-		},
-		"node_modules/jest-worker": {
-			"version": "27.5.1",
-			"resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz",
-			"integrity": "sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@types/node": "*",
-				"merge-stream": "^2.0.0",
-				"supports-color": "^8.0.0"
-			},
-			"engines": {
-				"node": ">= 10.13.0"
-			}
-		},
-		"node_modules/jest-worker/node_modules/supports-color": {
-			"version": "8.1.1",
-			"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
-			"integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"has-flag": "^4.0.0"
-			},
-			"engines": {
-				"node": ">=10"
-			},
-			"funding": {
-				"url": "https://github.com/chalk/supports-color?sponsor=1"
-			}
-		},
-		"node_modules/json-parse-even-better-errors": {
-			"version": "2.3.1",
-			"resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
-			"integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/json-schema-traverse": {
-			"version": "0.4.1",
-			"resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
-			"integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/kind-of": {
-			"version": "6.0.3",
-			"resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
-			"integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=0.10.0"
-			}
-		},
-		"node_modules/loader-runner": {
-			"version": "4.2.0",
-			"resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.2.0.tgz",
-			"integrity": "sha512-92+huvxMvYlMzMt0iIOukcwYBFpkYJdpl2xsZ7LrlayO7E8SOv+JJUEK17B/dJIHAOLMfh2dZZ/Y18WgmGtYNw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6.11.5"
-			}
-		},
-		"node_modules/locate-path": {
-			"version": "5.0.0",
-			"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
-			"integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"p-locate": "^4.1.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/lru-cache": {
-			"version": "6.0.0",
-			"resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
-			"integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
-			"dev": true,
-			"license": "ISC",
-			"dependencies": {
-				"yallist": "^4.0.0"
-			},
-			"engines": {
-				"node": ">=10"
-			}
-		},
-		"node_modules/merge-stream": {
-			"version": "2.0.0",
-			"resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
-			"integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/micromatch": {
-			"version": "4.0.4",
-			"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz",
-			"integrity": "sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"braces": "^3.0.1",
-				"picomatch": "^2.2.3"
-			},
-			"engines": {
-				"node": ">=8.6"
-			}
-		},
-		"node_modules/mime-db": {
-			"version": "1.49.0",
-			"resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.49.0.tgz",
-			"integrity": "sha512-CIc8j9URtOVApSFCQIF+VBkX1RwXp/oMMOrqdyXSBXq5RWNEsRfyj1kiRnQgmNXmHxPoFIxOroKA3zcU9P+nAA==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">= 0.6"
-			}
-		},
-		"node_modules/mime-types": {
-			"version": "2.1.32",
-			"resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.32.tgz",
-			"integrity": "sha512-hJGaVS4G4c9TSMYh2n6SQAGrC4RnfU+daP8G7cSCmaqNjiOoUY0VHCMS42pxnQmVF1GWwFhbHWn3RIxCqTmZ9A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"mime-db": "1.49.0"
-			},
-			"engines": {
-				"node": ">= 0.6"
-			}
-		},
-		"node_modules/neo-async": {
-			"version": "2.6.2",
-			"resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
-			"integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/node-releases": {
-			"version": "1.1.75",
-			"resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.75.tgz",
-			"integrity": "sha512-Qe5OUajvqrqDSy6wrWFmMwfJ0jVgwiw4T3KqmbTcZ62qW0gQkheXYhcFM1+lOVcGUoRxcEcfyvFMAnDgaF1VWw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/p-limit": {
-			"version": "2.3.0",
-			"resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
-			"integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"p-try": "^2.0.0"
-			},
-			"engines": {
-				"node": ">=6"
-			},
-			"funding": {
-				"url": "https://github.com/sponsors/sindresorhus"
-			}
-		},
-		"node_modules/p-locate": {
-			"version": "4.1.0",
-			"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
-			"integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"p-limit": "^2.2.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/p-try": {
-			"version": "2.2.0",
-			"resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
-			"integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6"
-			}
-		},
-		"node_modules/path-browserify": {
-			"version": "1.0.1",
-			"resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
-			"integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/path-exists": {
-			"version": "4.0.0",
-			"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
-			"integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/path-key": {
-			"version": "3.1.1",
-			"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
-			"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/path-parse": {
-			"version": "1.0.7",
-			"resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
-			"integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/picomatch": {
-			"version": "2.3.0",
-			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz",
-			"integrity": "sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8.6"
-			},
-			"funding": {
-				"url": "https://github.com/sponsors/jonschlinkert"
-			}
-		},
-		"node_modules/pkg-dir": {
-			"version": "4.2.0",
-			"resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
-			"integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"find-up": "^4.0.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/process": {
-			"version": "0.11.10",
-			"resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
-			"integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">= 0.6.0"
-			}
-		},
-		"node_modules/punycode": {
-			"version": "2.1.1",
-			"resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
-			"integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6"
-			}
-		},
-		"node_modules/randombytes": {
-			"version": "2.1.0",
-			"resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
-			"integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"safe-buffer": "^5.1.0"
-			}
-		},
-		"node_modules/rechoir": {
-			"version": "0.8.0",
-			"resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.8.0.tgz",
-			"integrity": "sha512-/vxpCXddiX8NGfGO/mTafwjq4aFa/71pvamip0++IQk3zG8cbCj0fifNPrjjF1XMXUne91jL9OoxmdykoEtifQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"resolve": "^1.20.0"
-			},
-			"engines": {
-				"node": ">= 10.13.0"
-			}
-		},
-		"node_modules/request-light": {
-			"version": "0.7.0",
-			"resolved": "https://registry.npmjs.org/request-light/-/request-light-0.7.0.tgz",
-			"integrity": "sha512-lMbBMrDoxgsyO+yB3sDcrDuX85yYt7sS8BfQd11jtbW/z5ZWgLZRcEGLsLoYw7I0WSUGQBs8CC8ScIxkTX1+6Q==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/resolve": {
-			"version": "1.22.1",
-			"resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
-			"integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"is-core-module": "^2.9.0",
-				"path-parse": "^1.0.7",
-				"supports-preserve-symlinks-flag": "^1.0.0"
-			},
-			"bin": {
-				"resolve": "bin/resolve"
-			},
-			"funding": {
-				"url": "https://github.com/sponsors/ljharb"
-			}
-		},
-		"node_modules/resolve-cwd": {
-			"version": "3.0.0",
-			"resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
-			"integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"resolve-from": "^5.0.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/resolve-from": {
-			"version": "5.0.0",
-			"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
-			"integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/safe-buffer": {
-			"version": "5.2.1",
-			"resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
-			"integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
-			"dev": true,
-			"funding": [
-				{
-					"type": "github",
-					"url": "https://github.com/sponsors/feross"
-				},
-				{
-					"type": "patreon",
-					"url": "https://www.patreon.com/feross"
-				},
-				{
-					"type": "consulting",
-					"url": "https://feross.org/support"
-				}
-			],
-			"license": "MIT"
-		},
-		"node_modules/schema-utils": {
-			"version": "3.3.0",
-			"resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz",
-			"integrity": "sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@types/json-schema": "^7.0.8",
-				"ajv": "^6.12.5",
-				"ajv-keywords": "^3.5.2"
-			},
-			"engines": {
-				"node": ">= 10.13.0"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/webpack"
-			}
-		},
-		"node_modules/semver": {
-			"version": "7.5.4",
-			"resolved": "https://registry.npmjs.org/semver/-/semver-7.5.4.tgz",
-			"integrity": "sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==",
-			"dev": true,
-			"license": "ISC",
-			"dependencies": {
-				"lru-cache": "^6.0.0"
-			},
-			"bin": {
-				"semver": "bin/semver.js"
-			},
-			"engines": {
-				"node": ">=10"
-			}
-		},
-		"node_modules/serialize-javascript": {
-			"version": "6.0.1",
-			"resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.1.tgz",
-			"integrity": "sha512-owoXEFjWRllis8/M1Q+Cw5k8ZH40e3zhp/ovX+Xr/vi1qj6QesbyXXViFbpNvWvPNAD62SutwEXavefrLJWj7w==",
-			"dev": true,
-			"license": "BSD-3-Clause",
-			"dependencies": {
-				"randombytes": "^2.1.0"
-			}
-		},
-		"node_modules/shallow-clone": {
-			"version": "3.0.1",
-			"resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
-			"integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"kind-of": "^6.0.2"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/shebang-command": {
-			"version": "2.0.0",
-			"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
-			"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"shebang-regex": "^3.0.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/shebang-regex": {
-			"version": "3.0.0",
-			"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
-			"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/source-map": {
-			"version": "0.6.1",
-			"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
-			"integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
-			"dev": true,
-			"license": "BSD-3-Clause",
-			"engines": {
-				"node": ">=0.10.0"
-			}
-		},
-		"node_modules/source-map-support": {
-			"version": "0.5.21",
-			"resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
-			"integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"buffer-from": "^1.0.0",
-				"source-map": "^0.6.0"
-			}
-		},
-		"node_modules/supports-color": {
-			"version": "7.2.0",
-			"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
-			"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"has-flag": "^4.0.0"
-			},
-			"engines": {
-				"node": ">=8"
-			}
-		},
-		"node_modules/supports-preserve-symlinks-flag": {
-			"version": "1.0.0",
-			"resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
-			"integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">= 0.4"
-			},
-			"funding": {
-				"url": "https://github.com/sponsors/ljharb"
-			}
-		},
-		"node_modules/tapable": {
-			"version": "2.2.1",
-			"resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz",
-			"integrity": "sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=6"
-			}
-		},
-		"node_modules/terser": {
-			"version": "5.17.7",
-			"resolved": "https://registry.npmjs.org/terser/-/terser-5.17.7.tgz",
-			"integrity": "sha512-/bi0Zm2C6VAexlGgLlVxA0P2lru/sdLyfCVaRMfKVo9nWxbmz7f/sD8VPybPeSUJaJcwmCJis9pBIhcVcG1QcQ==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"dependencies": {
-				"@jridgewell/source-map": "^0.3.3",
-				"acorn": "^8.8.2",
-				"commander": "^2.20.0",
-				"source-map-support": "~0.5.20"
-			},
-			"bin": {
-				"terser": "bin/terser"
-			},
-			"engines": {
-				"node": ">=10"
-			}
-		},
-		"node_modules/terser-webpack-plugin": {
-			"version": "5.3.9",
-			"resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.9.tgz",
-			"integrity": "sha512-ZuXsqE07EcggTWQjXUj+Aot/OMcD0bMKGgF63f7UxYcu5/AJF53aIpK1YoP5xR9l6s/Hy2b+t1AM0bLNPRuhwA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@jridgewell/trace-mapping": "^0.3.17",
-				"jest-worker": "^27.4.5",
-				"schema-utils": "^3.1.1",
-				"serialize-javascript": "^6.0.1",
-				"terser": "^5.16.8"
-			},
-			"engines": {
-				"node": ">= 10.13.0"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/webpack"
-			},
-			"peerDependencies": {
-				"webpack": "^5.1.0"
-			},
-			"peerDependenciesMeta": {
-				"@swc/core": {
-					"optional": true
-				},
-				"esbuild": {
-					"optional": true
-				},
-				"uglify-js": {
-					"optional": true
-				}
-			}
-		},
-		"node_modules/terser-webpack-plugin/node_modules/@jridgewell/trace-mapping": {
-			"version": "0.3.18",
-			"resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz",
-			"integrity": "sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@jridgewell/resolve-uri": "3.1.0",
-				"@jridgewell/sourcemap-codec": "1.4.14"
-			}
-		},
-		"node_modules/terser-webpack-plugin/node_modules/schema-utils": {
-			"version": "3.1.1",
-			"resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz",
-			"integrity": "sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@types/json-schema": "^7.0.8",
-				"ajv": "^6.12.5",
-				"ajv-keywords": "^3.5.2"
-			},
-			"engines": {
-				"node": ">= 10.13.0"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/webpack"
-			}
-		},
-		"node_modules/terser/node_modules/acorn": {
-			"version": "8.8.2",
-			"resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz",
-			"integrity": "sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==",
-			"dev": true,
-			"license": "MIT",
-			"bin": {
-				"acorn": "bin/acorn"
-			},
-			"engines": {
-				"node": ">=0.4.0"
-			}
-		},
-		"node_modules/terser/node_modules/commander": {
-			"version": "2.20.3",
-			"resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
-			"integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/to-regex-range": {
-			"version": "5.0.1",
-			"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
-			"integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"is-number": "^7.0.0"
-			},
-			"engines": {
-				"node": ">=8.0"
-			}
-		},
-		"node_modules/ts-loader": {
-			"version": "9.5.0",
-			"resolved": "https://registry.npmjs.org/ts-loader/-/ts-loader-9.5.0.tgz",
-			"integrity": "sha512-LLlB/pkB4q9mW2yLdFMnK3dEHbrBjeZTYguaaIfusyojBgAGf5kF+O6KcWqiGzWqHk0LBsoolrp4VftEURhybg==",
-			"dev": true,
-			"dependencies": {
-				"chalk": "^4.1.0",
-				"enhanced-resolve": "^5.0.0",
-				"micromatch": "^4.0.0",
-				"semver": "^7.3.4",
-				"source-map": "^0.7.4"
-			},
-			"engines": {
-				"node": ">=12.0.0"
-			},
-			"peerDependencies": {
-				"typescript": "*",
-				"webpack": "^5.0.0"
-			}
-		},
-		"node_modules/ts-loader/node_modules/source-map": {
-			"version": "0.7.4",
-			"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.4.tgz",
-			"integrity": "sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==",
-			"dev": true,
-			"engines": {
-				"node": ">= 8"
-			}
-		},
-		"node_modules/typescript": {
-			"version": "5.2.2",
-			"resolved": "https://registry.npmjs.org/typescript/-/typescript-5.2.2.tgz",
-			"integrity": "sha512-mI4WrpHsbCIcwT9cF4FZvr80QUeKvsUsUvKDoR+X/7XHQH98xYD8YHZg7ANtz2GtZt/CBq2QJ0thkGJMHfqc1w==",
-			"dev": true,
-			"peer": true,
-			"bin": {
-				"tsc": "bin/tsc",
-				"tsserver": "bin/tsserver"
-			},
-			"engines": {
-				"node": ">=14.17"
-			}
-		},
-		"node_modules/uri-js": {
-			"version": "4.4.1",
-			"resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
-			"integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
-			"dev": true,
-			"license": "BSD-2-Clause",
-			"dependencies": {
-				"punycode": "^2.1.0"
-			}
-		},
-		"node_modules/vscode-uri": {
-			"version": "3.0.8",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/watchpack": {
-			"version": "2.4.0",
-			"resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.0.tgz",
-			"integrity": "sha512-Lcvm7MGST/4fup+ifyKi2hjyIAwcdI4HRgtvTpIUxBRhB+RFtUh8XtDOxUfctVCnhVi+QQj49i91OyvzkJl6cg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"glob-to-regexp": "^0.4.1",
-				"graceful-fs": "^4.1.2"
-			},
-			"engines": {
-				"node": ">=10.13.0"
-			}
-		},
-		"node_modules/webpack": {
-			"version": "5.89.0",
-			"resolved": "https://registry.npmjs.org/webpack/-/webpack-5.89.0.tgz",
-			"integrity": "sha512-qyfIC10pOr70V+jkmud8tMfajraGCZMBWJtrmuBymQKCrLTRejBI8STDp1MCyZu/QTdZSeacCQYpYNQVOzX5kw==",
-			"dev": true,
-			"dependencies": {
-				"@types/eslint-scope": "^3.7.3",
-				"@types/estree": "^1.0.0",
-				"@webassemblyjs/ast": "^1.11.5",
-				"@webassemblyjs/wasm-edit": "^1.11.5",
-				"@webassemblyjs/wasm-parser": "^1.11.5",
-				"acorn": "^8.7.1",
-				"acorn-import-assertions": "^1.9.0",
-				"browserslist": "^4.14.5",
-				"chrome-trace-event": "^1.0.2",
-				"enhanced-resolve": "^5.15.0",
-				"es-module-lexer": "^1.2.1",
-				"eslint-scope": "5.1.1",
-				"events": "^3.2.0",
-				"glob-to-regexp": "^0.4.1",
-				"graceful-fs": "^4.2.9",
-				"json-parse-even-better-errors": "^2.3.1",
-				"loader-runner": "^4.2.0",
-				"mime-types": "^2.1.27",
-				"neo-async": "^2.6.2",
-				"schema-utils": "^3.2.0",
-				"tapable": "^2.1.1",
-				"terser-webpack-plugin": "^5.3.7",
-				"watchpack": "^2.4.0",
-				"webpack-sources": "^3.2.3"
-			},
-			"bin": {
-				"webpack": "bin/webpack.js"
-			},
-			"engines": {
-				"node": ">=10.13.0"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/webpack"
-			},
-			"peerDependenciesMeta": {
-				"webpack-cli": {
-					"optional": true
-				}
-			}
-		},
-		"node_modules/webpack-cli": {
-			"version": "5.1.4",
-			"resolved": "https://registry.npmjs.org/webpack-cli/-/webpack-cli-5.1.4.tgz",
-			"integrity": "sha512-pIDJHIEI9LR0yxHXQ+Qh95k2EvXpWzZ5l+d+jIo+RdSm9MiHfzazIxwwni/p7+x4eJZuvG1AJwgC4TNQ7NRgsg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"@discoveryjs/json-ext": "^0.5.0",
-				"@webpack-cli/configtest": "^2.1.1",
-				"@webpack-cli/info": "^2.0.2",
-				"@webpack-cli/serve": "^2.0.5",
-				"colorette": "^2.0.14",
-				"commander": "^10.0.1",
-				"cross-spawn": "^7.0.3",
-				"envinfo": "^7.7.3",
-				"fastest-levenshtein": "^1.0.12",
-				"import-local": "^3.0.2",
-				"interpret": "^3.1.1",
-				"rechoir": "^0.8.0",
-				"webpack-merge": "^5.7.3"
-			},
-			"bin": {
-				"webpack-cli": "bin/cli.js"
-			},
-			"engines": {
-				"node": ">=14.15.0"
-			},
-			"funding": {
-				"type": "opencollective",
-				"url": "https://opencollective.com/webpack"
-			},
-			"peerDependencies": {
-				"webpack": "5.x.x"
-			},
-			"peerDependenciesMeta": {
-				"@webpack-cli/generators": {
-					"optional": true
-				},
-				"webpack-bundle-analyzer": {
-					"optional": true
-				},
-				"webpack-dev-server": {
-					"optional": true
-				}
-			}
-		},
-		"node_modules/webpack-merge": {
-			"version": "5.8.0",
-			"resolved": "https://registry.npmjs.org/webpack-merge/-/webpack-merge-5.8.0.tgz",
-			"integrity": "sha512-/SaI7xY0831XwP6kzuwhKWVKDP9t1QY1h65lAFLbZqMPIuYcD9QAW4u9STIbU9kaJbPBB/geU/gLr1wDjOhQ+Q==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"clone-deep": "^4.0.1",
-				"wildcard": "^2.0.0"
-			},
-			"engines": {
-				"node": ">=10.0.0"
-			}
-		},
-		"node_modules/webpack-sources": {
-			"version": "3.2.3",
-			"resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.2.3.tgz",
-			"integrity": "sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==",
-			"dev": true,
-			"license": "MIT",
-			"engines": {
-				"node": ">=10.13.0"
-			}
-		},
-		"node_modules/webpack/node_modules/@types/estree": {
-			"version": "1.0.1",
-			"resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.1.tgz",
-			"integrity": "sha512-LG4opVs2ANWZ1TJoKc937iMmNstM/d0ae1vNbnBvBhqCSezgVUOzcLCqbI5elV8Vy6WKwKjaqR+zO9VKirBBCA==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/webpack/node_modules/enhanced-resolve": {
-			"version": "5.15.0",
-			"resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.15.0.tgz",
-			"integrity": "sha512-LXYT42KJ7lpIKECr2mAXIaMldcNCh/7E0KBKOu4KSfkHmP+mZmSs+8V5gBAqisWBy0OO4W5Oyys0GO1Y8KtdKg==",
-			"dev": true,
-			"license": "MIT",
-			"dependencies": {
-				"graceful-fs": "^4.2.4",
-				"tapable": "^2.2.0"
-			},
-			"engines": {
-				"node": ">=10.13.0"
-			}
-		},
-		"node_modules/which": {
-			"version": "2.0.2",
-			"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
-			"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
-			"dev": true,
-			"license": "ISC",
-			"dependencies": {
-				"isexe": "^2.0.0"
-			},
-			"bin": {
-				"node-which": "bin/node-which"
-			},
-			"engines": {
-				"node": ">= 8"
-			}
-		},
-		"node_modules/wildcard": {
-			"version": "2.0.0",
-			"resolved": "https://registry.npmjs.org/wildcard/-/wildcard-2.0.0.tgz",
-			"integrity": "sha512-JcKqAHLPxcdb9KM49dufGXn2x3ssnfjbcaQdLlfZsL9rH9wgDQjUtDxbo8NE0F6SFvydeu1VhZe7hZuHsB2/pw==",
-			"dev": true,
-			"license": "MIT"
-		},
-		"node_modules/yallist": {
-			"version": "4.0.0",
-			"resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
-			"integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
-			"dev": true,
-			"license": "ISC"
-		}
-	}
+  "name": "vscode-test-web-fs",
+  "version": "0.0.1",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "vscode-test-web-fs",
+      "version": "0.0.1",
+      "license": "MIT",
+      "dependencies": {
+        "minimatch": "^9.0.3"
+      },
+      "devDependencies": {
+        "@types/vscode": "^1.81.0",
+        "@types/webpack-env": "^1.18.3",
+        "path-browserify": "^1.0.1",
+        "process": "^0.11.10",
+        "request-light": "^0.7.0",
+        "ts-loader": "^9.5.0",
+        "vscode-uri": "^3.0.8",
+        "webpack": "^5.89.0",
+        "webpack-cli": "^5.1.4"
+      },
+      "engines": {
+        "vscode": "^1.72.0"
+      }
+    },
+    "node_modules/@discoveryjs/json-ext": {
+      "version": "0.5.3",
+      "resolved": "https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.3.tgz",
+      "integrity": "sha512-Fxt+AfXgjMoin2maPIYzFZnQjAXjAL0PHscM5pRTtatFqB+vZxAM9tLp2Optnuw3QOQC40jTNeGYFOMvyf7v9g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.2.tgz",
+      "integrity": "sha512-mh65xKQAzI6iBcFzwv28KVWSmCkdRBWoOh+bYQGW3+6OZvbbN3TqMGo5hqYxQniRcH9F2VZIoJCm4pa3BPDK/A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/set-array": "^1.0.1",
+        "@jridgewell/sourcemap-codec": "^1.4.10",
+        "@jridgewell/trace-mapping": "^0.3.9"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.0.tgz",
+      "integrity": "sha512-F2msla3tad+Mfht5cJq7LSXcdudKTWCVYUgw6pLFOOHSTtZlj6SWNYAp+AhuqLmWdBO2X5hPrLcu8cVP8fy28w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/set-array": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.1.2.tgz",
+      "integrity": "sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/source-map": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.3.tgz",
+      "integrity": "sha512-b+fsZXeLYi9fEULmfBrhxn4IrPlINf8fiNarzTof004v3lFdntdwa9PF7vFJqm3mg7s+ScJMxXaE3Acp1irZcg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.0",
+        "@jridgewell/trace-mapping": "^0.3.9"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.4.14",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
+      "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.14",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.14.tgz",
+      "integrity": "sha512-bJWEfQ9lPTvm3SneWwRFVLzrh6nhjwqw7TUFFBEMzwvg7t7PCDenf2lDwqo4NQXzdpgBXyFgDWnQA+2vkruksQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.0.3",
+        "@jridgewell/sourcemap-codec": "^1.4.10"
+      }
+    },
+    "node_modules/@types/eslint": {
+      "version": "7.28.0",
+      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-7.28.0.tgz",
+      "integrity": "sha512-07XlgzX0YJUn4iG1ocY4IX9DzKSmMGUs6ESKlxWhZRaa0fatIWaHWUVapcuGa8r5HFnTqzj+4OCjd5f7EZ/i/A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/estree": "*",
+        "@types/json-schema": "*"
+      }
+    },
+    "node_modules/@types/eslint-scope": {
+      "version": "3.7.3",
+      "resolved": "https://registry.npmjs.org/@types/eslint-scope/-/eslint-scope-3.7.3.tgz",
+      "integrity": "sha512-PB3ldyrcnAicT35TWPs5IcwKD8S333HMaa2VVv4+wdvebJkjWuW/xESoB8IwRcog8HYVYamb1g/R31Qv5Bx03g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/eslint": "*",
+        "@types/estree": "*"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "0.0.51",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.51.tgz",
+      "integrity": "sha512-CuPgU6f3eT/XgKKPqKd/gLZV1Xmvf1a2R5POBOGQa6uv82xpls89HU5zKeVoyR8XzHd1RGNOlQlvUe3CFkjWNQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/json-schema": {
+      "version": "7.0.9",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.9.tgz",
+      "integrity": "sha512-qcUXuemtEu+E5wZSJHNxUXeCZhAfXKQ41D+duX+VYPde7xyEVZci+/oXKJL13tnRs9lR2pr4fod59GT6/X1/yQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/node": {
+      "version": "16.9.1",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-16.9.1.tgz",
+      "integrity": "sha512-QpLcX9ZSsq3YYUUnD3nFDY8H7wctAhQj/TFKL8Ya8v5fMm3CFXxo8zStsLAl780ltoYoo1WvKUVGBQK+1ifr7g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/vscode": {
+      "version": "1.81.0",
+      "resolved": "https://registry.npmjs.org/@types/vscode/-/vscode-1.81.0.tgz",
+      "integrity": "sha512-YIaCwpT+O2E7WOMq0eCgBEABE++SX3Yl/O02GoMIF2DO3qAtvw7m6BXFYsxnc6XyzwZgh6/s/UG78LSSombl2w==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/webpack-env": {
+      "version": "1.18.3",
+      "resolved": "https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.18.3.tgz",
+      "integrity": "sha512-v4CH6FLBCftYGFAswDhzFLjKgucXsOkIf5Mzl8ZZhEtC6oye9whFInNPKszNB9AvX7JEZMtpXxWctih6addP+Q==",
+      "dev": true
+    },
+    "node_modules/@webassemblyjs/ast": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.11.6.tgz",
+      "integrity": "sha512-IN1xI7PwOvLPgjcf180gC1bqn3q/QaOCwYUahIOhbYUu8KA/3tw2RT/T0Gidi1l7Hhj5D/INhJxiICObqpMu4Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/helper-numbers": "1.11.6",
+        "@webassemblyjs/helper-wasm-bytecode": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/floating-point-hex-parser": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.11.6.tgz",
+      "integrity": "sha512-ejAj9hfRJ2XMsNHk/v6Fu2dGS+i4UaXBXGemOfQ/JfQ6mdQg/WXtwleQRLLS4OvfDhv8rYnVwH27YJLMyYsxhw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@webassemblyjs/helper-api-error": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.11.6.tgz",
+      "integrity": "sha512-o0YkoP4pVu4rN8aTJgAyj9hC2Sv5UlkzCHhxqWj8butaLvnpdc2jOwh4ewE6CX0txSfLn/UYaV/pheS2Txg//Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@webassemblyjs/helper-buffer": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.11.6.tgz",
+      "integrity": "sha512-z3nFzdcp1mb8nEOFFk8DrYLpHvhKC3grJD2ardfKOzmbmJvEf/tPIqCY+sNcwZIY8ZD7IkB2l7/pqhUhqm7hLA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@webassemblyjs/helper-numbers": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-numbers/-/helper-numbers-1.11.6.tgz",
+      "integrity": "sha512-vUIhZ8LZoIWHBohiEObxVm6hwP034jwmc9kuq5GdHZH0wiLVLIPcMCdpJzG4C11cHoQ25TFIQj9kaVADVX7N3g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/floating-point-hex-parser": "1.11.6",
+        "@webassemblyjs/helper-api-error": "1.11.6",
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "node_modules/@webassemblyjs/helper-wasm-bytecode": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.11.6.tgz",
+      "integrity": "sha512-sFFHKwcmBprO9e7Icf0+gddyWYDViL8bpPjJJl0WHxCdETktXdmtWLGVzoHbqUcY4Be1LkNfwTmXOJUFZYSJdA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@webassemblyjs/helper-wasm-section": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.11.6.tgz",
+      "integrity": "sha512-LPpZbSOwTpEC2cgn4hTydySy1Ke+XEu+ETXuoyvuyezHO3Kjdu90KK95Sh9xTbmjrCsUwvWwCOQQNta37VrS9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@webassemblyjs/helper-buffer": "1.11.6",
+        "@webassemblyjs/helper-wasm-bytecode": "1.11.6",
+        "@webassemblyjs/wasm-gen": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/ieee754": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.11.6.tgz",
+      "integrity": "sha512-LM4p2csPNvbij6U1f19v6WR56QZ8JcHg3QIJTlSwzFcmx6WSORicYj6I63f9yU1kEUtrpG+kjkiIAkevHpDXrg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@xtuc/ieee754": "^1.2.0"
+      }
+    },
+    "node_modules/@webassemblyjs/leb128": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.11.6.tgz",
+      "integrity": "sha512-m7a0FhE67DQXgouf1tbN5XQcdWoNgaAuoULHIfGFIEVKA6tu/edls6XnIlkmS6FrXAquJRPni3ZZKjw6FSPjPQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "node_modules/@webassemblyjs/utf8": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.11.6.tgz",
+      "integrity": "sha512-vtXf2wTQ3+up9Zsg8sa2yWiQpzSsMyXj0qViVP6xKGCUT8p8YJ6HqI7l5eCnWx1T/FYdsv07HQs2wTFbbof/RA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@webassemblyjs/wasm-edit": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.11.6.tgz",
+      "integrity": "sha512-Ybn2I6fnfIGuCR+Faaz7YcvtBKxvoLV3Lebn1tM4o/IAJzmi9AWYIPWpyBfU8cC+JxAO57bk4+zdsTjJR+VTOw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@webassemblyjs/helper-buffer": "1.11.6",
+        "@webassemblyjs/helper-wasm-bytecode": "1.11.6",
+        "@webassemblyjs/helper-wasm-section": "1.11.6",
+        "@webassemblyjs/wasm-gen": "1.11.6",
+        "@webassemblyjs/wasm-opt": "1.11.6",
+        "@webassemblyjs/wasm-parser": "1.11.6",
+        "@webassemblyjs/wast-printer": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/wasm-gen": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.11.6.tgz",
+      "integrity": "sha512-3XOqkZP/y6B4F0PBAXvI1/bky7GryoogUtfwExeP/v7Nzwo1QLcq5oQmpKlftZLbT+ERUOAZVQjuNVak6UXjPA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@webassemblyjs/helper-wasm-bytecode": "1.11.6",
+        "@webassemblyjs/ieee754": "1.11.6",
+        "@webassemblyjs/leb128": "1.11.6",
+        "@webassemblyjs/utf8": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/wasm-opt": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.11.6.tgz",
+      "integrity": "sha512-cOrKuLRE7PCe6AsOVl7WasYf3wbSo4CeOk6PkrjS7g57MFfVUF9u6ysQBBODX0LdgSvQqRiGz3CXvIDKcPNy4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@webassemblyjs/helper-buffer": "1.11.6",
+        "@webassemblyjs/wasm-gen": "1.11.6",
+        "@webassemblyjs/wasm-parser": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/wasm-parser": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.11.6.tgz",
+      "integrity": "sha512-6ZwPeGzMJM3Dqp3hCsLgESxBGtT/OeCvCZ4TA1JUPYgmhAx38tTPR9JaKy0S5H3evQpO/h2uWs2j6Yc/fjkpTQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@webassemblyjs/helper-api-error": "1.11.6",
+        "@webassemblyjs/helper-wasm-bytecode": "1.11.6",
+        "@webassemblyjs/ieee754": "1.11.6",
+        "@webassemblyjs/leb128": "1.11.6",
+        "@webassemblyjs/utf8": "1.11.6"
+      }
+    },
+    "node_modules/@webassemblyjs/wast-printer": {
+      "version": "1.11.6",
+      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.11.6.tgz",
+      "integrity": "sha512-JM7AhRcE+yW2GWYaKeHL5vt4xqee5N2WcezptmgyhNS+ScggqcT1OtXykhAb13Sn5Yas0j2uv9tHgrjwvzAP4A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@webassemblyjs/ast": "1.11.6",
+        "@xtuc/long": "4.2.2"
+      }
+    },
+    "node_modules/@webpack-cli/configtest": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/@webpack-cli/configtest/-/configtest-2.1.1.tgz",
+      "integrity": "sha512-wy0mglZpDSiSS0XHrVR+BAdId2+yxPSoJW8fsna3ZpYSlufjvxnP4YbKTCBZnNIcGN4r6ZPXV55X4mYExOfLmw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=14.15.0"
+      },
+      "peerDependencies": {
+        "webpack": "5.x.x",
+        "webpack-cli": "5.x.x"
+      }
+    },
+    "node_modules/@webpack-cli/info": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/@webpack-cli/info/-/info-2.0.2.tgz",
+      "integrity": "sha512-zLHQdI/Qs1UyT5UBdWNqsARasIA+AaF8t+4u2aS2nEpBQh2mWIVb8qAklq0eUENnC5mOItrIB4LiS9xMtph18A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=14.15.0"
+      },
+      "peerDependencies": {
+        "webpack": "5.x.x",
+        "webpack-cli": "5.x.x"
+      }
+    },
+    "node_modules/@webpack-cli/serve": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@webpack-cli/serve/-/serve-2.0.5.tgz",
+      "integrity": "sha512-lqaoKnRYBdo1UgDX8uF24AfGMifWK19TxPmM5FHc2vAGxrJ/qtyUyFBWoY1tISZdelsQ5fBcOusifo5o5wSJxQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=14.15.0"
+      },
+      "peerDependencies": {
+        "webpack": "5.x.x",
+        "webpack-cli": "5.x.x"
+      },
+      "peerDependenciesMeta": {
+        "webpack-dev-server": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@xtuc/ieee754": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
+      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
+      "dev": true,
+      "license": "BSD-3-Clause"
+    },
+    "node_modules/@xtuc/long": {
+      "version": "4.2.2",
+      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
+      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
+      "dev": true,
+      "license": "Apache-2.0"
+    },
+    "node_modules/acorn": {
+      "version": "8.8.0",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.0.tgz",
+      "integrity": "sha512-QOxyigPVrpZ2GXT+PFyZTl6TtOFc5egxHIP9IlQ+RbupQuX4RkT/Bee4/kQuC02Xkzg84JcT7oLYtDIQxp+v7w==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-import-assertions": {
+      "version": "1.9.0",
+      "resolved": "https://registry.npmjs.org/acorn-import-assertions/-/acorn-import-assertions-1.9.0.tgz",
+      "integrity": "sha512-cmMwop9x+8KFhxvKrKfPYmN6/pKTYYHBqLa0DfvVZcKMJWNyWLnaqND7dx/qn66R7ewM1UX5XMaDVP5wlVTaVA==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "acorn": "^8"
+      }
+    },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/ajv-keywords": {
+      "version": "3.5.2",
+      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.5.2.tgz",
+      "integrity": "sha512-5p6WTN0DdTGVQk6VjcEju19IgaHudalcfabD7yhDGeA6bcQnmL+CpveLJq/3hvfwd1aof6L386Ougkx6RfyMIQ==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "ajv": "^6.9.1"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
+    },
+    "node_modules/brace-expansion": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
+      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
+      "dependencies": {
+        "balanced-match": "^1.0.0"
+      }
+    },
+    "node_modules/braces": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
+      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fill-range": "^7.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/browserslist": {
+      "version": "4.17.0",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.17.0.tgz",
+      "integrity": "sha512-g2BJ2a0nEYvEFQC208q8mVAhfNwpZ5Mu8BwgtCdZKO3qx98HChmeg448fPdUzld8aFmfLgVh7yymqV+q1lJZ5g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001254",
+        "colorette": "^1.3.0",
+        "electron-to-chromium": "^1.3.830",
+        "escalade": "^3.1.1",
+        "node-releases": "^1.1.75"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/browserslist"
+      }
+    },
+    "node_modules/browserslist/node_modules/colorette": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/colorette/-/colorette-1.4.0.tgz",
+      "integrity": "sha512-Y2oEozpomLn7Q3HFP7dpww7AtMJplbM9lGZP6RDfHqmbeRjiwRg4n6VM6j4KLmRke85uWEI7JqF17f3pqdRA0g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/buffer-from": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
+      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001257",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001257.tgz",
+      "integrity": "sha512-JN49KplOgHSXpIsVSF+LUyhD8PUp6xPpAXeRrrcBh4KBeP7W864jHn6RvzJgDlrReyeVjMFJL3PLpPvKIxlIHA==",
+      "dev": true,
+      "license": "CC-BY-4.0",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/browserslist"
+      }
+    },
+    "node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/chrome-trace-event": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.3.tgz",
+      "integrity": "sha512-p3KULyQg4S7NIHixdwbGX+nFHkoBiA4YQmyWtjb8XngSKV124nJmRysgAeujbUVb15vh+RvFUfCPqU7rXk+hZg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0"
+      }
+    },
+    "node_modules/clone-deep": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
+      "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-plain-object": "^2.0.4",
+        "kind-of": "^6.0.2",
+        "shallow-clone": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/colorette": {
+      "version": "2.0.16",
+      "resolved": "https://registry.npmjs.org/colorette/-/colorette-2.0.16.tgz",
+      "integrity": "sha512-hUewv7oMjCp+wkBv5Rm0v87eJhq4woh5rSR+42YSQJKecCqgIqNkZ6lAlQms/BwHPJA5NKMRlpxPRv0n8HQW6g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/commander": {
+      "version": "10.0.1",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-10.0.1.tgz",
+      "integrity": "sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=14"
+      }
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.3.836",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.836.tgz",
+      "integrity": "sha512-Ney3pHOJBWkG/AqYjrW0hr2AUCsao+2uvq9HUlRP8OlpSdk/zOHOUJP7eu0icDvePC9DlgffuelP4TnOJmMRUg==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/enhanced-resolve": {
+      "version": "5.10.0",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.10.0.tgz",
+      "integrity": "sha512-T0yTFjdpldGY8PmuXXR0PyQ1ufZpEGiHVrp7zHKB7jdR4qlmZHhONVM5AQOAWXuF/w3dnHbEQVrNptJgt7F+cQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "graceful-fs": "^4.2.4",
+        "tapable": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/envinfo": {
+      "version": "7.8.1",
+      "resolved": "https://registry.npmjs.org/envinfo/-/envinfo-7.8.1.tgz",
+      "integrity": "sha512-/o+BXHmB7ocbHEAs6F2EnG0ogybVVUdkRunTT2glZU9XAaGmhqskrvKwqXuDfNjEO0LZKWdejEEpnq8aM0tOaw==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "envinfo": "dist/cli.js"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/es-module-lexer": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.2.1.tgz",
+      "integrity": "sha512-9978wrXM50Y4rTMmW5kXIC09ZdXQZqkE4mxhwkd8VbzsGkXGPgV4zWuqQJgCEzYngdo2dYDa0l8xhX4fkSwJSg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/escalade": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
+      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/eslint-scope": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz",
+      "integrity": "sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "esrecurse": "^4.3.0",
+        "estraverse": "^4.1.1"
+      },
+      "engines": {
+        "node": ">=8.0.0"
+      }
+    },
+    "node_modules/esrecurse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
+      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/esrecurse/node_modules/estraverse": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.2.0.tgz",
+      "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/estraverse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
+      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/events": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/events/-/events-3.3.0.tgz",
+      "integrity": "sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.8.x"
+      }
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fastest-levenshtein": {
+      "version": "1.0.12",
+      "resolved": "https://registry.npmjs.org/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz",
+      "integrity": "sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fill-range": {
+      "version": "7.0.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
+      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "to-regex-range": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/find-up": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
+      "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "locate-path": "^5.0.0",
+        "path-exists": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
+      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/glob-to-regexp": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.4.1.tgz",
+      "integrity": "sha512-lkX1HJXwyMcprw/5YUZc2s7DrpAiHB21/V+E1rHUrVNokkvB6bqMzT0VfV6/86ZNabt1k14YOIaT7nDvOX3Iiw==",
+      "dev": true,
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/graceful-fs": {
+      "version": "4.2.9",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.9.tgz",
+      "integrity": "sha512-NtNxqUcXgpW2iMrfqSfR73Glt39K+BLwWsPs94yR63v45T0Wbej7eRmL5cWfwEgqXnmjQp3zaJTshdRW/qC2ZQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/has": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
+      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "function-bind": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4.0"
+      }
+    },
+    "node_modules/has-flag": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/import-local": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/import-local/-/import-local-3.0.2.tgz",
+      "integrity": "sha512-vjL3+w0oulAVZ0hBHnxa/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9XfJTOoHwU0B71S557gA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "pkg-dir": "^4.2.0",
+        "resolve-cwd": "^3.0.0"
+      },
+      "bin": {
+        "import-local-fixture": "fixtures/cli.js"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/interpret": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/interpret/-/interpret-3.1.1.tgz",
+      "integrity": "sha512-6xwYfHbajpoF0xLW+iwLkhwgvLoZDfjYfoFNu8ftMoXINzwuymNLd9u/KmwtdT2GbR+/Cz66otEGEVVUHX9QLQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.11.0",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.11.0.tgz",
+      "integrity": "sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has": "^1.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-number": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
+      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
+    "node_modules/is-plain-object": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
+      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "isobject": "^3.0.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/isobject": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
+      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/jest-worker": {
+      "version": "27.5.1",
+      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-27.5.1.tgz",
+      "integrity": "sha512-7vuh85V5cdDofPyxn58nrPjBktZo0u9x1g8WtjQol+jZDaE+fhN+cIvTj11GndBnMnyfrUOG1sZQxCdjKh+DKg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/node": "*",
+        "merge-stream": "^2.0.0",
+        "supports-color": "^8.0.0"
+      },
+      "engines": {
+        "node": ">= 10.13.0"
+      }
+    },
+    "node_modules/jest-worker/node_modules/supports-color": {
+      "version": "8.1.1",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz",
+      "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/supports-color?sponsor=1"
+      }
+    },
+    "node_modules/json-parse-even-better-errors": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
+      "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/kind-of": {
+      "version": "6.0.3",
+      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
+      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/loader-runner": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-4.2.0.tgz",
+      "integrity": "sha512-92+huvxMvYlMzMt0iIOukcwYBFpkYJdpl2xsZ7LrlayO7E8SOv+JJUEK17B/dJIHAOLMfh2dZZ/Y18WgmGtYNw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.11.5"
+      }
+    },
+    "node_modules/locate-path": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
+      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-locate": "^4.1.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/lru-cache": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
+      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "yallist": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/merge-stream": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
+      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/micromatch": {
+      "version": "4.0.4",
+      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz",
+      "integrity": "sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "braces": "^3.0.1",
+        "picomatch": "^2.2.3"
+      },
+      "engines": {
+        "node": ">=8.6"
+      }
+    },
+    "node_modules/mime-db": {
+      "version": "1.49.0",
+      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.49.0.tgz",
+      "integrity": "sha512-CIc8j9URtOVApSFCQIF+VBkX1RwXp/oMMOrqdyXSBXq5RWNEsRfyj1kiRnQgmNXmHxPoFIxOroKA3zcU9P+nAA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/mime-types": {
+      "version": "2.1.32",
+      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.32.tgz",
+      "integrity": "sha512-hJGaVS4G4c9TSMYh2n6SQAGrC4RnfU+daP8G7cSCmaqNjiOoUY0VHCMS42pxnQmVF1GWwFhbHWn3RIxCqTmZ9A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "mime-db": "1.49.0"
+      },
+      "engines": {
+        "node": ">= 0.6"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "9.0.3",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz",
+      "integrity": "sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==",
+      "dependencies": {
+        "brace-expansion": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=16 || 14 >=14.17"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/neo-async": {
+      "version": "2.6.2",
+      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
+      "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/node-releases": {
+      "version": "1.1.75",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.75.tgz",
+      "integrity": "sha512-Qe5OUajvqrqDSy6wrWFmMwfJ0jVgwiw4T3KqmbTcZ62qW0gQkheXYhcFM1+lOVcGUoRxcEcfyvFMAnDgaF1VWw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/p-limit": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
+      "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-try": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/p-locate": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
+      "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-limit": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/p-try": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
+      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/path-browserify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-1.0.1.tgz",
+      "integrity": "sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/path-exists": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/picomatch": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz",
+      "integrity": "sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/pkg-dir": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
+      "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "find-up": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/process": {
+      "version": "0.11.10",
+      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
+      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.6.0"
+      }
+    },
+    "node_modules/punycode": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
+      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/randombytes": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
+      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "^5.1.0"
+      }
+    },
+    "node_modules/rechoir": {
+      "version": "0.8.0",
+      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.8.0.tgz",
+      "integrity": "sha512-/vxpCXddiX8NGfGO/mTafwjq4aFa/71pvamip0++IQk3zG8cbCj0fifNPrjjF1XMXUne91jL9OoxmdykoEtifQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "resolve": "^1.20.0"
+      },
+      "engines": {
+        "node": ">= 10.13.0"
+      }
+    },
+    "node_modules/request-light": {
+      "version": "0.7.0",
+      "resolved": "https://registry.npmjs.org/request-light/-/request-light-0.7.0.tgz",
+      "integrity": "sha512-lMbBMrDoxgsyO+yB3sDcrDuX85yYt7sS8BfQd11jtbW/z5ZWgLZRcEGLsLoYw7I0WSUGQBs8CC8ScIxkTX1+6Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/resolve": {
+      "version": "1.22.1",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.1.tgz",
+      "integrity": "sha512-nBpuuYuY5jFsli/JIs1oldw6fOQCBioohqWZg/2hiaOybXOft4lonv85uDOKXdf8rhyK159cxU5cDcK/NKk8zw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.9.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve-cwd": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
+      "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "resolve-from": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/resolve-from": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
+      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/safe-buffer": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
+      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/schema-utils": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-3.3.0.tgz",
+      "integrity": "sha512-pN/yOAvcC+5rQ5nERGuwrjLlYvLTbCibnZ1I7B1LaiAz9BRBlE9GMgE/eqV30P7aJQUf7Ddimy/RsbYO/GrVGg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/json-schema": "^7.0.8",
+        "ajv": "^6.12.5",
+        "ajv-keywords": "^3.5.2"
+      },
+      "engines": {
+        "node": ">= 10.13.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      }
+    },
+    "node_modules/semver": {
+      "version": "7.5.4",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.5.4.tgz",
+      "integrity": "sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "lru-cache": "^6.0.0"
+      },
+      "bin": {
+        "semver": "bin/semver.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/serialize-javascript": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.1.tgz",
+      "integrity": "sha512-owoXEFjWRllis8/M1Q+Cw5k8ZH40e3zhp/ovX+Xr/vi1qj6QesbyXXViFbpNvWvPNAD62SutwEXavefrLJWj7w==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "randombytes": "^2.1.0"
+      }
+    },
+    "node_modules/shallow-clone": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
+      "integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "kind-of": "^6.0.2"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/source-map": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/source-map-support": {
+      "version": "0.5.21",
+      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
+      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "buffer-from": "^1.0.0",
+        "source-map": "^0.6.0"
+      }
+    },
+    "node_modules/supports-color": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
+      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/tapable": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.1.tgz",
+      "integrity": "sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/terser": {
+      "version": "5.17.7",
+      "resolved": "https://registry.npmjs.org/terser/-/terser-5.17.7.tgz",
+      "integrity": "sha512-/bi0Zm2C6VAexlGgLlVxA0P2lru/sdLyfCVaRMfKVo9nWxbmz7f/sD8VPybPeSUJaJcwmCJis9pBIhcVcG1QcQ==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "@jridgewell/source-map": "^0.3.3",
+        "acorn": "^8.8.2",
+        "commander": "^2.20.0",
+        "source-map-support": "~0.5.20"
+      },
+      "bin": {
+        "terser": "bin/terser"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/terser-webpack-plugin": {
+      "version": "5.3.9",
+      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-5.3.9.tgz",
+      "integrity": "sha512-ZuXsqE07EcggTWQjXUj+Aot/OMcD0bMKGgF63f7UxYcu5/AJF53aIpK1YoP5xR9l6s/Hy2b+t1AM0bLNPRuhwA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/trace-mapping": "^0.3.17",
+        "jest-worker": "^27.4.5",
+        "schema-utils": "^3.1.1",
+        "serialize-javascript": "^6.0.1",
+        "terser": "^5.16.8"
+      },
+      "engines": {
+        "node": ">= 10.13.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      },
+      "peerDependencies": {
+        "webpack": "^5.1.0"
+      },
+      "peerDependenciesMeta": {
+        "@swc/core": {
+          "optional": true
+        },
+        "esbuild": {
+          "optional": true
+        },
+        "uglify-js": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/terser-webpack-plugin/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.18",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.18.tgz",
+      "integrity": "sha512-w+niJYzMHdd7USdiH2U6869nqhD2nbfZXND5Yp93qIbEmnDNk7PD48o+YchRVpzMU7M6jVCbenTR7PA1FLQ9pA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "3.1.0",
+        "@jridgewell/sourcemap-codec": "1.4.14"
+      }
+    },
+    "node_modules/terser-webpack-plugin/node_modules/schema-utils": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-3.1.1.tgz",
+      "integrity": "sha512-Y5PQxS4ITlC+EahLuXaY86TXfR7Dc5lw294alXOq86JAHCihAIZfqv8nNCWvaEJvaC51uN9hbLGeV0cFBdH+Fw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/json-schema": "^7.0.8",
+        "ajv": "^6.12.5",
+        "ajv-keywords": "^3.5.2"
+      },
+      "engines": {
+        "node": ">= 10.13.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      }
+    },
+    "node_modules/terser/node_modules/acorn": {
+      "version": "8.8.2",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.8.2.tgz",
+      "integrity": "sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/terser/node_modules/commander": {
+      "version": "2.20.3",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
+      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/to-regex-range": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
+      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-number": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=8.0"
+      }
+    },
+    "node_modules/ts-loader": {
+      "version": "9.5.0",
+      "resolved": "https://registry.npmjs.org/ts-loader/-/ts-loader-9.5.0.tgz",
+      "integrity": "sha512-LLlB/pkB4q9mW2yLdFMnK3dEHbrBjeZTYguaaIfusyojBgAGf5kF+O6KcWqiGzWqHk0LBsoolrp4VftEURhybg==",
+      "dev": true,
+      "dependencies": {
+        "chalk": "^4.1.0",
+        "enhanced-resolve": "^5.0.0",
+        "micromatch": "^4.0.0",
+        "semver": "^7.3.4",
+        "source-map": "^0.7.4"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "peerDependencies": {
+        "typescript": "*",
+        "webpack": "^5.0.0"
+      }
+    },
+    "node_modules/ts-loader/node_modules/source-map": {
+      "version": "0.7.4",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.4.tgz",
+      "integrity": "sha512-l3BikUxvPOcn5E74dZiq5BGsTb5yEwhaTSzccU6t4sDOH8NWJCstKO5QT2CvtFoK6F0saL7p9xHAqHOlCPJygA==",
+      "dev": true,
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/typescript": {
+      "version": "5.2.2",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.2.2.tgz",
+      "integrity": "sha512-mI4WrpHsbCIcwT9cF4FZvr80QUeKvsUsUvKDoR+X/7XHQH98xYD8YHZg7ANtz2GtZt/CBq2QJ0thkGJMHfqc1w==",
+      "dev": true,
+      "peer": true,
+      "bin": {
+        "tsc": "bin/tsc",
+        "tsserver": "bin/tsserver"
+      },
+      "engines": {
+        "node": ">=14.17"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/vscode-uri": {
+      "version": "3.0.8",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/watchpack": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.0.tgz",
+      "integrity": "sha512-Lcvm7MGST/4fup+ifyKi2hjyIAwcdI4HRgtvTpIUxBRhB+RFtUh8XtDOxUfctVCnhVi+QQj49i91OyvzkJl6cg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "glob-to-regexp": "^0.4.1",
+        "graceful-fs": "^4.1.2"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/webpack": {
+      "version": "5.89.0",
+      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.89.0.tgz",
+      "integrity": "sha512-qyfIC10pOr70V+jkmud8tMfajraGCZMBWJtrmuBymQKCrLTRejBI8STDp1MCyZu/QTdZSeacCQYpYNQVOzX5kw==",
+      "dev": true,
+      "dependencies": {
+        "@types/eslint-scope": "^3.7.3",
+        "@types/estree": "^1.0.0",
+        "@webassemblyjs/ast": "^1.11.5",
+        "@webassemblyjs/wasm-edit": "^1.11.5",
+        "@webassemblyjs/wasm-parser": "^1.11.5",
+        "acorn": "^8.7.1",
+        "acorn-import-assertions": "^1.9.0",
+        "browserslist": "^4.14.5",
+        "chrome-trace-event": "^1.0.2",
+        "enhanced-resolve": "^5.15.0",
+        "es-module-lexer": "^1.2.1",
+        "eslint-scope": "5.1.1",
+        "events": "^3.2.0",
+        "glob-to-regexp": "^0.4.1",
+        "graceful-fs": "^4.2.9",
+        "json-parse-even-better-errors": "^2.3.1",
+        "loader-runner": "^4.2.0",
+        "mime-types": "^2.1.27",
+        "neo-async": "^2.6.2",
+        "schema-utils": "^3.2.0",
+        "tapable": "^2.1.1",
+        "terser-webpack-plugin": "^5.3.7",
+        "watchpack": "^2.4.0",
+        "webpack-sources": "^3.2.3"
+      },
+      "bin": {
+        "webpack": "bin/webpack.js"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      },
+      "peerDependenciesMeta": {
+        "webpack-cli": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/webpack-cli": {
+      "version": "5.1.4",
+      "resolved": "https://registry.npmjs.org/webpack-cli/-/webpack-cli-5.1.4.tgz",
+      "integrity": "sha512-pIDJHIEI9LR0yxHXQ+Qh95k2EvXpWzZ5l+d+jIo+RdSm9MiHfzazIxwwni/p7+x4eJZuvG1AJwgC4TNQ7NRgsg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@discoveryjs/json-ext": "^0.5.0",
+        "@webpack-cli/configtest": "^2.1.1",
+        "@webpack-cli/info": "^2.0.2",
+        "@webpack-cli/serve": "^2.0.5",
+        "colorette": "^2.0.14",
+        "commander": "^10.0.1",
+        "cross-spawn": "^7.0.3",
+        "envinfo": "^7.7.3",
+        "fastest-levenshtein": "^1.0.12",
+        "import-local": "^3.0.2",
+        "interpret": "^3.1.1",
+        "rechoir": "^0.8.0",
+        "webpack-merge": "^5.7.3"
+      },
+      "bin": {
+        "webpack-cli": "bin/cli.js"
+      },
+      "engines": {
+        "node": ">=14.15.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/webpack"
+      },
+      "peerDependencies": {
+        "webpack": "5.x.x"
+      },
+      "peerDependenciesMeta": {
+        "@webpack-cli/generators": {
+          "optional": true
+        },
+        "webpack-bundle-analyzer": {
+          "optional": true
+        },
+        "webpack-dev-server": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/webpack-merge": {
+      "version": "5.8.0",
+      "resolved": "https://registry.npmjs.org/webpack-merge/-/webpack-merge-5.8.0.tgz",
+      "integrity": "sha512-/SaI7xY0831XwP6kzuwhKWVKDP9t1QY1h65lAFLbZqMPIuYcD9QAW4u9STIbU9kaJbPBB/geU/gLr1wDjOhQ+Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "clone-deep": "^4.0.1",
+        "wildcard": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
+    "node_modules/webpack-sources": {
+      "version": "3.2.3",
+      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-3.2.3.tgz",
+      "integrity": "sha512-/DyMEOrDgLKKIG0fmvtz+4dUX/3Ghozwgm6iPp8KRhvn+eQf9+Q7GWxVNMk3+uCPWfdXYC4ExGBckIXdFEfH1w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/webpack/node_modules/@types/estree": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.1.tgz",
+      "integrity": "sha512-LG4opVs2ANWZ1TJoKc937iMmNstM/d0ae1vNbnBvBhqCSezgVUOzcLCqbI5elV8Vy6WKwKjaqR+zO9VKirBBCA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/webpack/node_modules/enhanced-resolve": {
+      "version": "5.15.0",
+      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.15.0.tgz",
+      "integrity": "sha512-LXYT42KJ7lpIKECr2mAXIaMldcNCh/7E0KBKOu4KSfkHmP+mZmSs+8V5gBAqisWBy0OO4W5Oyys0GO1Y8KtdKg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "graceful-fs": "^4.2.4",
+        "tapable": "^2.2.0"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/wildcard": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/wildcard/-/wildcard-2.0.0.tgz",
+      "integrity": "sha512-JcKqAHLPxcdb9KM49dufGXn2x3ssnfjbcaQdLlfZsL9rH9wgDQjUtDxbo8NE0F6SFvydeu1VhZe7hZuHsB2/pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/yallist": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
+      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
+      "dev": true,
+      "license": "ISC"
+    }
+  }
 }
diff --git a/node_modules/@vscode/test-web/fs-provider/package.json b/node_modules/@vscode/test-web/fs-provider/package.json
index e0fd862..95a2ec0 100644
--- a/node_modules/@vscode/test-web/fs-provider/package.json
+++ b/node_modules/@vscode/test-web/fs-provider/package.json
@@ -1,48 +1,55 @@
 {
-	"name": "vscode-test-web-fs",
-	"private": true,
-	"displayName": "vscode-test-web file system provider",
-	"description": "Provides a file provider for web tests to access local files and folders.",
-	"publisher": "vscode",
-	"version": "0.0.1",
-	"license": "MIT",
-	"engines": {
-		"vscode": "^1.72.0"
-	},
-	"categories": [
-		"Other"
-	],
-	"activationEvents": [
-		"onFileSystem:vscode-test-web"
-	],
-	"contributes": {
-		"resourceLabelFormatters": [
-			{
-				"authority": "mount",
-				"scheme": "vscode-test-web",
-				"formatting": {
-					"workspaceSuffix": "Test Files",
-					"label": "${path}"
-				}
-			}
-		]
-	},
-	"browser": "./dist/fsExtensionMain.js",
-	"scripts": {
-		"vscode:prepublish": "npm run package-web",
-		"compile-web": "webpack",
-		"watch-web": "webpack --watch",
-		"package-web": "webpack --mode production --devtool hidden-source-map"
-	},
-	"devDependencies": {
-		"@types/vscode": "^1.81.0",
-		"@types/webpack-env": "^1.18.3",
-		"ts-loader": "^9.5.0",
-		"webpack": "^5.89.0",
-		"webpack-cli": "^5.1.4",
-		"process": "^0.11.10",
-		"path-browserify": "^1.0.1",
-		"request-light": "^0.7.0",
-		"vscode-uri": "^3.0.8"
-	}
+  "name": "vscode-test-web-fs",
+  "private": true,
+  "displayName": "vscode-test-web file system provider",
+  "description": "Provides a file provider for web tests to access local files and folders.",
+  "publisher": "vscode",
+  "version": "0.0.1",
+  "license": "MIT",
+  "engines": {
+    "vscode": "^1.72.0"
+  },
+  "categories": [
+    "Other"
+  ],
+  "activationEvents": [
+    "onFileSystem:vscode-test-web",
+    "onSearch:vscode-test-web"
+  ],
+  "enabledApiProposals": [
+    "fileSearchProvider"
+  ],
+  "contributes": {
+    "resourceLabelFormatters": [
+      {
+        "authority": "mount",
+        "scheme": "vscode-test-web",
+        "formatting": {
+          "workspaceSuffix": "Test Files",
+          "label": "${path}"
+        }
+      }
+    ]
+  },
+  "browser": "./dist/fsExtensionMain.js",
+  "scripts": {
+    "vscode:prepublish": "npm run package-web",
+    "compile-web": "webpack",
+    "watch-web": "webpack --watch",
+    "package-web": "webpack --mode production --devtool hidden-source-map"
+  },
+  "devDependencies": {
+    "@types/vscode": "^1.81.0",
+    "@types/webpack-env": "^1.18.3",
+    "path-browserify": "^1.0.1",
+    "process": "^0.11.10",
+    "request-light": "^0.7.0",
+    "ts-loader": "^9.5.0",
+    "vscode-uri": "^3.0.8",
+    "webpack": "^5.89.0",
+    "webpack-cli": "^5.1.4"
+  },
+  "dependencies": {
+    "minimatch": "^9.0.3"
+  }
 }
